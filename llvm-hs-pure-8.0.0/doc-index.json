[{"display_html":"<a href=\"#v:-43--43-\">(++)</a> :: [a] -&gt; [a] -&gt; [a]","name":"++","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-43--43-"},{"display_html":"<a href=\"#v:seq\">seq</a> :: a -&gt; b -&gt; b","name":"seq","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:seq"},{"display_html":"<a href=\"#v:filter\">filter</a> :: (a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>) -&gt; [a] -&gt; [a]","name":"filter","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:filter"},{"display_html":"<a href=\"#v:zip\">zip</a> :: [a] -&gt; [b] -&gt; [(a, b)]","name":"zip","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:zip"},{"display_html":"<a href=\"#v:print\">print</a> :: <a href=\"LLVM-Prelude.html#t:Show\" title=\"LLVM.Prelude\">Show</a> a =&gt; a -&gt; <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> ()","name":"print","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:print"},{"display_html":"<a href=\"#v:fst\">fst</a> :: (a, b) -&gt; a","name":"fst","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:fst"},{"display_html":"<a href=\"#v:snd\">snd</a> :: (a, b) -&gt; b","name":"snd","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:snd"},{"display_html":"<a href=\"#v:otherwise\">otherwise</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>","name":"otherwise","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:otherwise"},{"display_html":"<a href=\"#v:map\">map</a> :: (a -&gt; b) -&gt; [a] -&gt; [b]","name":"map","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:map"},{"display_html":"<a href=\"#v:-36-\">($)</a> :: (a -&gt; b) -&gt; a -&gt; b","name":"$","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-36-"},{"display_html":"<a href=\"#v:fromIntegral\">fromIntegral</a> :: (<a href=\"LLVM-Prelude.html#t:Integral\" title=\"LLVM.Prelude\">Integral</a> a, <a href=\"LLVM-Prelude.html#t:Num\" title=\"LLVM.Prelude\">Num</a> b) =&gt; a -&gt; b","name":"fromIntegral","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:fromIntegral"},{"display_html":"<a href=\"#v:realToFrac\">realToFrac</a> :: (<a href=\"LLVM-Prelude.html#t:Real\" title=\"LLVM.Prelude\">Real</a> a, <a href=\"LLVM-Prelude.html#t:Fractional\" title=\"LLVM.Prelude\">Fractional</a> b) =&gt; a -&gt; b","name":"realToFrac","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:realToFrac"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Bounded\">Bounded</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:minBound\">minBound</a> :: a</li><li><a href=\"#v:maxBound\">maxBound</a> :: a</li></ul>","name":"Bounded minBound maxBound","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Bounded"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Enum\">Enum</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:succ\">succ</a> :: a -&gt; a</li><li><a href=\"#v:pred\">pred</a> :: a -&gt; a</li><li><a href=\"#v:toEnum\">toEnum</a> :: <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a> -&gt; a</li><li><a href=\"#v:fromEnum\">fromEnum</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a></li><li><a href=\"#v:enumFrom\">enumFrom</a> :: a -&gt; [a]</li><li><a href=\"#v:enumFromThen\">enumFromThen</a> :: a -&gt; a -&gt; [a]</li><li><a href=\"#v:enumFromTo\">enumFromTo</a> :: a -&gt; a -&gt; [a]</li><li><a href=\"#v:enumFromThenTo\">enumFromThenTo</a> :: a -&gt; a -&gt; a -&gt; [a]</li></ul>","name":"Enum enumFrom enumFromThen enumFromThenTo enumFromTo fromEnum toEnum succ pred","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Enum"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Eq\">Eq</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-61--61-\">(==)</a> :: a -&gt; a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:-47--61-\">(/=)</a> :: a -&gt; a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li></ul>","name":"Eq == /=","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Eq"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"LLVM-Prelude.html#t:Fractional\" title=\"LLVM.Prelude\">Fractional</a> a =&gt; <a href=\"#t:Floating\">Floating</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pi\">pi</a> :: a</li><li><a href=\"#v:exp\">exp</a> :: a -&gt; a</li><li><a href=\"#v:log\">log</a> :: a -&gt; a</li><li><a href=\"#v:sqrt\">sqrt</a> :: a -&gt; a</li><li><a href=\"#v:-42--42-\">(**)</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:logBase\">logBase</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:sin\">sin</a> :: a -&gt; a</li><li><a href=\"#v:cos\">cos</a> :: a -&gt; a</li><li><a href=\"#v:tan\">tan</a> :: a -&gt; a</li><li><a href=\"#v:asin\">asin</a> :: a -&gt; a</li><li><a href=\"#v:acos\">acos</a> :: a -&gt; a</li><li><a href=\"#v:atan\">atan</a> :: a -&gt; a</li><li><a href=\"#v:sinh\">sinh</a> :: a -&gt; a</li><li><a href=\"#v:cosh\">cosh</a> :: a -&gt; a</li><li><a href=\"#v:tanh\">tanh</a> :: a -&gt; a</li><li><a href=\"#v:asinh\">asinh</a> :: a -&gt; a</li><li><a href=\"#v:acosh\">acosh</a> :: a -&gt; a</li><li><a href=\"#v:atanh\">atanh</a> :: a -&gt; a</li></ul>","name":"Floating pi exp log sqrt ** logBase sin cos tan asin acos atan sinh cosh tanh asinh acosh atanh","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Floating"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"LLVM-Prelude.html#t:Num\" title=\"LLVM.Prelude\">Num</a> a =&gt; <a href=\"#t:Fractional\">Fractional</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-47-\">(/)</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:recip\">recip</a> :: a -&gt; a</li><li><a href=\"#v:fromRational\">fromRational</a> :: <a href=\"LLVM-Prelude.html#t:Rational\" title=\"LLVM.Prelude\">Rational</a> -&gt; a</li></ul>","name":"Fractional fromRational / recip","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Fractional"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"LLVM-Prelude.html#t:Real\" title=\"LLVM.Prelude\">Real</a> a, <a href=\"LLVM-Prelude.html#t:Enum\" title=\"LLVM.Prelude\">Enum</a> a) =&gt; <a href=\"#t:Integral\">Integral</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:quot\">quot</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:rem\">rem</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:div\">div</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:mod\">mod</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:quotRem\">quotRem</a> :: a -&gt; a -&gt; (a, a)</li><li><a href=\"#v:divMod\">divMod</a> :: a -&gt; a -&gt; (a, a)</li><li><a href=\"#v:toInteger\">toInteger</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a></li></ul>","name":"Integral toInteger quot rem div mod quotRem divMod","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Integral"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> m =&gt; <a href=\"#t:Monad\">Monad</a> (m :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-62--62--61-\">(&gt;&gt;=)</a> :: m a -&gt; (a -&gt; m b) -&gt; m b</li><li><a href=\"#v:-62--62-\">(&gt;&gt;)</a> :: m a -&gt; m b -&gt; m b</li><li><a href=\"#v:return\">return</a> :: a -&gt; m a</li><li><a href=\"#v:fail\">fail</a> :: <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; m a</li></ul>","name":"Monad fail >>= >> return","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Monad"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Functor\">Functor</a> (f :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fmap\">fmap</a> :: (a -&gt; b) -&gt; f a -&gt; f b</li><li><a href=\"#v:-60--36-\">(&lt;$)</a> :: a -&gt; f b -&gt; f a</li></ul>","name":"Functor fmap <$","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Functor"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Num\">Num</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-43-\">(+)</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:-45-\">(-)</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:-42-\">(*)</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:negate\">negate</a> :: a -&gt; a</li><li><a href=\"#v:abs\">abs</a> :: a -&gt; a</li><li><a href=\"#v:signum\">signum</a> :: a -&gt; a</li><li><a href=\"#v:fromInteger\">fromInteger</a> :: <a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a> -&gt; a</li></ul>","name":"Num + * - negate fromInteger abs signum","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Num"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"LLVM-Prelude.html#t:Eq\" title=\"LLVM.Prelude\">Eq</a> a =&gt; <a href=\"#t:Ord\">Ord</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:compare\">compare</a> :: a -&gt; a -&gt; <a href=\"LLVM-Prelude.html#t:Ordering\" title=\"LLVM.Prelude\">Ordering</a></li><li><a href=\"#v:-60-\">(&lt;)</a> :: a -&gt; a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:-60--61-\">(&lt;=)</a> :: a -&gt; a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:-62-\">(&gt;)</a> :: a -&gt; a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:-62--61-\">(&gt;=)</a> :: a -&gt; a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:max\">max</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:min\">min</a> :: a -&gt; a -&gt; a</li></ul>","name":"Ord >= min max > < compare <=","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Ord"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Read\">Read</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:readsPrec\">readsPrec</a> :: <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a> -&gt; <a href=\"LLVM-Prelude.html#t:ReadS\" title=\"LLVM.Prelude\">ReadS</a> a</li><li><a href=\"#v:readList\">readList</a> :: <a href=\"LLVM-Prelude.html#t:ReadS\" title=\"LLVM.Prelude\">ReadS</a> [a]</li></ul>","name":"Read readsPrec readList","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Read"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"LLVM-Prelude.html#t:Num\" title=\"LLVM.Prelude\">Num</a> a, <a href=\"LLVM-Prelude.html#t:Ord\" title=\"LLVM.Prelude\">Ord</a> a) =&gt; <a href=\"#t:Real\">Real</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toRational\">toRational</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:Rational\" title=\"LLVM.Prelude\">Rational</a></li></ul>","name":"Real toRational","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Real"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"LLVM-Prelude.html#t:RealFrac\" title=\"LLVM.Prelude\">RealFrac</a> a, <a href=\"LLVM-Prelude.html#t:Floating\" title=\"LLVM.Prelude\">Floating</a> a) =&gt; <a href=\"#t:RealFloat\">RealFloat</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:floatRadix\">floatRadix</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a></li><li><a href=\"#v:floatDigits\">floatDigits</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a></li><li><a href=\"#v:floatRange\">floatRange</a> :: a -&gt; (<a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a>, <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a>)</li><li><a href=\"#v:decodeFloat\">decodeFloat</a> :: a -&gt; (<a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a>, <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a>)</li><li><a href=\"#v:encodeFloat\">encodeFloat</a> :: <a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a> -&gt; <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a> -&gt; a</li><li><a href=\"#v:exponent\">exponent</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a></li><li><a href=\"#v:significand\">significand</a> :: a -&gt; a</li><li><a href=\"#v:scaleFloat\">scaleFloat</a> :: <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a> -&gt; a -&gt; a</li><li><a href=\"#v:isNaN\">isNaN</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:isInfinite\">isInfinite</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:isDenormalized\">isDenormalized</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:isNegativeZero\">isNegativeZero</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:isIEEE\">isIEEE</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:atan2\">atan2</a> :: a -&gt; a -&gt; a</li></ul>","name":"RealFloat floatRadix floatDigits floatRange decodeFloat encodeFloat exponent significand scaleFloat isNaN isInfinite isDenormalized isNegativeZero isIEEE atan2","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:RealFloat"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"LLVM-Prelude.html#t:Real\" title=\"LLVM.Prelude\">Real</a> a, <a href=\"LLVM-Prelude.html#t:Fractional\" title=\"LLVM.Prelude\">Fractional</a> a) =&gt; <a href=\"#t:RealFrac\">RealFrac</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:properFraction\">properFraction</a> :: <a href=\"LLVM-Prelude.html#t:Integral\" title=\"LLVM.Prelude\">Integral</a> b =&gt; a -&gt; (b, a)</li><li><a href=\"#v:truncate\">truncate</a> :: <a href=\"LLVM-Prelude.html#t:Integral\" title=\"LLVM.Prelude\">Integral</a> b =&gt; a -&gt; b</li><li><a href=\"#v:round\">round</a> :: <a href=\"LLVM-Prelude.html#t:Integral\" title=\"LLVM.Prelude\">Integral</a> b =&gt; a -&gt; b</li><li><a href=\"#v:ceiling\">ceiling</a> :: <a href=\"LLVM-Prelude.html#t:Integral\" title=\"LLVM.Prelude\">Integral</a> b =&gt; a -&gt; b</li><li><a href=\"#v:floor\">floor</a> :: <a href=\"LLVM-Prelude.html#t:Integral\" title=\"LLVM.Prelude\">Integral</a> b =&gt; a -&gt; b</li></ul>","name":"RealFrac properFraction truncate round ceiling floor","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:RealFrac"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Show\">Show</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:showsPrec\">showsPrec</a> :: <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a> -&gt; a -&gt; <a href=\"LLVM-Prelude.html#t:ShowS\" title=\"LLVM.Prelude\">ShowS</a></li><li><a href=\"#v:show\">show</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a></li><li><a href=\"#v:showList\">showList</a> :: [a] -&gt; <a href=\"LLVM-Prelude.html#t:ShowS\" title=\"LLVM.Prelude\">ShowS</a></li></ul>","name":"Show showsPrec show showList","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Show"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"LLVM-Prelude.html#t:Functor\" title=\"LLVM.Prelude\">Functor</a> f =&gt; <a href=\"#t:Applicative\">Applicative</a> (f :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pure\">pure</a> :: a -&gt; f a</li><li><a href=\"#v:-60--42--62-\">(&lt;*&gt;)</a> :: f (a -&gt; b) -&gt; f a -&gt; f b</li><li><a href=\"#v:-42--62-\">(*&gt;)</a> :: f a -&gt; f b -&gt; f b</li><li><a href=\"#v:-60--42-\">(&lt;*)</a> :: f a -&gt; f b -&gt; f a</li></ul>","name":"Applicative pure <*> *> <*","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Applicative"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Foldable\">Foldable</a> (t :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:foldMap\">foldMap</a> :: <a href=\"LLVM-Prelude.html#t:Monoid\" title=\"LLVM.Prelude\">Monoid</a> m =&gt; (a -&gt; m) -&gt; t a -&gt; m</li><li><a href=\"#v:null\">null</a> :: t a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:length\">length</a> :: t a -&gt; <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a></li></ul>","name":"Foldable length foldMap null","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Foldable"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"LLVM-Prelude.html#t:Functor\" title=\"LLVM.Prelude\">Functor</a> t, <a href=\"LLVM-Prelude.html#t:Foldable\" title=\"LLVM.Prelude\">Foldable</a> t) =&gt; <a href=\"#t:Traversable\">Traversable</a> (t :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:traverse\">traverse</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; (a -&gt; f b) -&gt; t a -&gt; f (t b)</li><li><a href=\"#v:sequenceA\">sequenceA</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; t (f a) -&gt; f (t a)</li></ul>","name":"Traversable traverse sequenceA","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Traversable"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Semigroup\">Semigroup</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-60--62-\">(&lt;&gt;)</a> :: a -&gt; a -&gt; a</li></ul>","name":"Semigroup <>","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Semigroup"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"LLVM-Prelude.html#t:Semigroup\" title=\"LLVM.Prelude\">Semigroup</a> a =&gt; <a href=\"#t:Monoid\">Monoid</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:mempty\">mempty</a> :: a</li><li><a href=\"#v:mappend\">mappend</a> :: a -&gt; a -&gt; a</li><li><a href=\"#v:mconcat\">mconcat</a> :: [a] -&gt; a</li></ul>","name":"Monoid mempty mappend mconcat","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Monoid"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Bool\">Bool</a><ul class=\"subs\"><li>= <a href=\"#v:False\">False</a></li><li>| <a href=\"#v:True\">True</a></li></ul>","name":"Bool False True","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Bool"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Char\">Char</a>","name":"Char","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Char"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Double\">Double</a>","name":"Double","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Double"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Float\">Float</a>","name":"Float","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Float"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Int\">Int</a>","name":"Int","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Int"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Integer\">Integer</a>","name":"Integer","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Integer"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Maybe\">Maybe</a> a<ul class=\"subs\"><li>= <a href=\"#v:Nothing\">Nothing</a></li><li>| <a href=\"#v:Just\">Just</a> a</li></ul>","name":"Maybe Nothing Just","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Maybe"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Ordering\">Ordering</a><ul class=\"subs\"><li>= <a href=\"#v:LT\">LT</a></li><li>| <a href=\"#v:EQ\">EQ</a></li><li>| <a href=\"#v:GT\">GT</a></li></ul>","name":"Ordering LT EQ GT","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Ordering"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Rational\">Rational</a> = <a href=\"../base-4.12.0.0/Data-Ratio.html#t:Ratio\" title=\"Data.Ratio\">Ratio</a> <a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a>","name":"Rational","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Rational"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IO\">IO</a> a","name":"IO","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:IO"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Word\">Word</a>","name":"Word","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Word"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Either\">Either</a> a b<ul class=\"subs\"><li>= <a href=\"#v:Left\">Left</a> a</li><li>| <a href=\"#v:Right\">Right</a> b</li></ul>","name":"Either Left Right","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Either"},{"display_html":"<a href=\"#v:read\">read</a> :: <a href=\"LLVM-Prelude.html#t:Read\" title=\"LLVM.Prelude\">Read</a> a =&gt; <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; a","name":"read","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:read"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:String\">String</a> = [<a href=\"LLVM-Prelude.html#t:Char\" title=\"LLVM.Prelude\">Char</a>]","name":"String","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:String"},{"display_html":"<a href=\"#v:readIO\">readIO</a> :: <a href=\"LLVM-Prelude.html#t:Read\" title=\"LLVM.Prelude\">Read</a> a =&gt; <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> a","name":"readIO","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:readIO"},{"display_html":"<a href=\"#v:readLn\">readLn</a> :: <a href=\"LLVM-Prelude.html#t:Read\" title=\"LLVM.Prelude\">Read</a> a =&gt; <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> a","name":"readLn","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:readLn"},{"display_html":"<a href=\"#v:appendFile\">appendFile</a> :: <a href=\"LLVM-Prelude.html#t:FilePath\" title=\"LLVM.Prelude\">FilePath</a> -&gt; <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> ()","name":"appendFile","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:appendFile"},{"display_html":"<a href=\"#v:writeFile\">writeFile</a> :: <a href=\"LLVM-Prelude.html#t:FilePath\" title=\"LLVM.Prelude\">FilePath</a> -&gt; <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> ()","name":"writeFile","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:writeFile"},{"display_html":"<a href=\"#v:readFile\">readFile</a> :: <a href=\"LLVM-Prelude.html#t:FilePath\" title=\"LLVM.Prelude\">FilePath</a> -&gt; <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>","name":"readFile","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:readFile"},{"display_html":"<a href=\"#v:interact\">interact</a> :: (<a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>) -&gt; <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> ()","name":"interact","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:interact"},{"display_html":"<a href=\"#v:getContents\">getContents</a> :: <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>","name":"getContents","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:getContents"},{"display_html":"<a href=\"#v:getLine\">getLine</a> :: <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>","name":"getLine","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:getLine"},{"display_html":"<a href=\"#v:getChar\">getChar</a> :: <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> <a href=\"LLVM-Prelude.html#t:Char\" title=\"LLVM.Prelude\">Char</a>","name":"getChar","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:getChar"},{"display_html":"<a href=\"#v:putStrLn\">putStrLn</a> :: <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> ()","name":"putStrLn","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:putStrLn"},{"display_html":"<a href=\"#v:putStr\">putStr</a> :: <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> ()","name":"putStr","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:putStr"},{"display_html":"<a href=\"#v:putChar\">putChar</a> :: <a href=\"LLVM-Prelude.html#t:Char\" title=\"LLVM.Prelude\">Char</a> -&gt; <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> ()","name":"putChar","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:putChar"},{"display_html":"<a href=\"#v:ioError\">ioError</a> :: <a href=\"LLVM-Prelude.html#t:IOError\" title=\"LLVM.Prelude\">IOError</a> -&gt; <a href=\"LLVM-Prelude.html#t:IO\" title=\"LLVM.Prelude\">IO</a> a","name":"ioError","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:ioError"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FilePath\">FilePath</a> = <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>","name":"FilePath","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:FilePath"},{"display_html":"<a href=\"#v:userError\">userError</a> :: <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; <a href=\"LLVM-Prelude.html#t:IOError\" title=\"LLVM.Prelude\">IOError</a>","name":"userError","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:userError"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IOError\">IOError</a> = <a href=\"../base-4.12.0.0/Control-Exception-Base.html#t:IOException\" title=\"Control.Exception.Base\">IOException</a>","name":"IOError","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:IOError"},{"display_html":"<a href=\"#v:unwords\">unwords</a> :: [<a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>] -&gt; <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>","name":"unwords","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:unwords"},{"display_html":"<a href=\"#v:words\">words</a> :: <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; [<a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>]","name":"words","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:words"},{"display_html":"<a href=\"#v:unlines\">unlines</a> :: [<a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>] -&gt; <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>","name":"unlines","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:unlines"},{"display_html":"<a href=\"#v:lines\">lines</a> :: <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; [<a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>]","name":"lines","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:lines"},{"display_html":"<a href=\"#v:reads\">reads</a> :: <a href=\"LLVM-Prelude.html#t:Read\" title=\"LLVM.Prelude\">Read</a> a =&gt; <a href=\"LLVM-Prelude.html#t:ReadS\" title=\"LLVM.Prelude\">ReadS</a> a","name":"reads","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:reads"},{"display_html":"<a href=\"#v:either\">either</a> :: (a -&gt; c) -&gt; (b -&gt; c) -&gt; <a href=\"LLVM-Prelude.html#t:Either\" title=\"LLVM.Prelude\">Either</a> a b -&gt; c","name":"either","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:either"},{"display_html":"<a href=\"#v:lex\">lex</a> :: <a href=\"LLVM-Prelude.html#t:ReadS\" title=\"LLVM.Prelude\">ReadS</a> <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>","name":"lex","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:lex"},{"display_html":"<a href=\"#v:readParen\">readParen</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> -&gt; <a href=\"LLVM-Prelude.html#t:ReadS\" title=\"LLVM.Prelude\">ReadS</a> a -&gt; <a href=\"LLVM-Prelude.html#t:ReadS\" title=\"LLVM.Prelude\">ReadS</a> a","name":"readParen","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:readParen"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ReadS\">ReadS</a> a = <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; [(a, <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>)]","name":"ReadS","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:ReadS"},{"display_html":"<a href=\"#v:-60--36--62-\">(&lt;$&gt;)</a> :: <a href=\"LLVM-Prelude.html#t:Functor\" title=\"LLVM.Prelude\">Functor</a> f =&gt; (a -&gt; b) -&gt; f a -&gt; f b","name":"<$>","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-60--36--62-"},{"display_html":"<a href=\"#v:lcm\">lcm</a> :: <a href=\"LLVM-Prelude.html#t:Integral\" title=\"LLVM.Prelude\">Integral</a> a =&gt; a -&gt; a -&gt; a","name":"lcm","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:lcm"},{"display_html":"<a href=\"#v:gcd\">gcd</a> :: <a href=\"LLVM-Prelude.html#t:Integral\" title=\"LLVM.Prelude\">Integral</a> a =&gt; a -&gt; a -&gt; a","name":"gcd","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:gcd"},{"display_html":"<a href=\"#v:-94--94-\">(^^)</a> :: (<a href=\"LLVM-Prelude.html#t:Fractional\" title=\"LLVM.Prelude\">Fractional</a> a, <a href=\"LLVM-Prelude.html#t:Integral\" title=\"LLVM.Prelude\">Integral</a> b) =&gt; a -&gt; b -&gt; a","name":"^^","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-94--94-"},{"display_html":"<a href=\"#v:-94-\">(^)</a> :: (<a href=\"LLVM-Prelude.html#t:Num\" title=\"LLVM.Prelude\">Num</a> a, <a href=\"LLVM-Prelude.html#t:Integral\" title=\"LLVM.Prelude\">Integral</a> b) =&gt; a -&gt; b -&gt; a","name":"^","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-94-"},{"display_html":"<a href=\"#v:odd\">odd</a> :: <a href=\"LLVM-Prelude.html#t:Integral\" title=\"LLVM.Prelude\">Integral</a> a =&gt; a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>","name":"odd","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:odd"},{"display_html":"<a href=\"#v:even\">even</a> :: <a href=\"LLVM-Prelude.html#t:Integral\" title=\"LLVM.Prelude\">Integral</a> a =&gt; a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>","name":"even","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:even"},{"display_html":"<a href=\"#v:showParen\">showParen</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> -&gt; <a href=\"LLVM-Prelude.html#t:ShowS\" title=\"LLVM.Prelude\">ShowS</a> -&gt; <a href=\"LLVM-Prelude.html#t:ShowS\" title=\"LLVM.Prelude\">ShowS</a>","name":"showParen","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:showParen"},{"display_html":"<a href=\"#v:showString\">showString</a> :: <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; <a href=\"LLVM-Prelude.html#t:ShowS\" title=\"LLVM.Prelude\">ShowS</a>","name":"showString","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:showString"},{"display_html":"<a href=\"#v:showChar\">showChar</a> :: <a href=\"LLVM-Prelude.html#t:Char\" title=\"LLVM.Prelude\">Char</a> -&gt; <a href=\"LLVM-Prelude.html#t:ShowS\" title=\"LLVM.Prelude\">ShowS</a>","name":"showChar","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:showChar"},{"display_html":"<a href=\"#v:shows\">shows</a> :: <a href=\"LLVM-Prelude.html#t:Show\" title=\"LLVM.Prelude\">Show</a> a =&gt; a -&gt; <a href=\"LLVM-Prelude.html#t:ShowS\" title=\"LLVM.Prelude\">ShowS</a>","name":"shows","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:shows"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ShowS\">ShowS</a> = <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a>","name":"ShowS","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:ShowS"},{"display_html":"<a href=\"#v:unzip3\">unzip3</a> :: [(a, b, c)] -&gt; ([a], [b], [c])","name":"unzip3","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:unzip3"},{"display_html":"<a href=\"#v:unzip\">unzip</a> :: [(a, b)] -&gt; ([a], [b])","name":"unzip","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:unzip"},{"display_html":"<a href=\"#v:zipWith3\">zipWith3</a> :: (a -&gt; b -&gt; c -&gt; d) -&gt; [a] -&gt; [b] -&gt; [c] -&gt; [d]","name":"zipWith3","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:zipWith3"},{"display_html":"<a href=\"#v:zipWith\">zipWith</a> :: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; [c]","name":"zipWith","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:zipWith"},{"display_html":"<a href=\"#v:zip3\">zip3</a> :: [a] -&gt; [b] -&gt; [c] -&gt; [(a, b, c)]","name":"zip3","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:zip3"},{"display_html":"<a href=\"#v:-33--33-\">(!!)</a> :: [a] -&gt; <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a> -&gt; a","name":"!!","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-33--33-"},{"display_html":"<a href=\"#v:lookup\">lookup</a> :: <a href=\"LLVM-Prelude.html#t:Eq\" title=\"LLVM.Prelude\">Eq</a> a =&gt; a -&gt; [(a, b)] -&gt; <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> b","name":"lookup","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:lookup"},{"display_html":"<a href=\"#v:reverse\">reverse</a> :: [a] -&gt; [a]","name":"reverse","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:reverse"},{"display_html":"<a href=\"#v:break\">break</a> :: (a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>) -&gt; [a] -&gt; ([a], [a])","name":"break","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:break"},{"display_html":"<a href=\"#v:span\">span</a> :: (a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>) -&gt; [a] -&gt; ([a], [a])","name":"span","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:span"},{"display_html":"<a href=\"#v:splitAt\">splitAt</a> :: <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a> -&gt; [a] -&gt; ([a], [a])","name":"splitAt","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:splitAt"},{"display_html":"<a href=\"#v:drop\">drop</a> :: <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a> -&gt; [a] -&gt; [a]","name":"drop","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:drop"},{"display_html":"<a href=\"#v:take\">take</a> :: <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a> -&gt; [a] -&gt; [a]","name":"take","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:take"},{"display_html":"<a href=\"#v:dropWhile\">dropWhile</a> :: (a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>) -&gt; [a] -&gt; [a]","name":"dropWhile","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:dropWhile"},{"display_html":"<a href=\"#v:takeWhile\">takeWhile</a> :: (a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>) -&gt; [a] -&gt; [a]","name":"takeWhile","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:takeWhile"},{"display_html":"<a href=\"#v:cycle\">cycle</a> :: [a] -&gt; [a]","name":"cycle","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:cycle"},{"display_html":"<a href=\"#v:replicate\">replicate</a> :: <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a> -&gt; a -&gt; [a]","name":"replicate","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:replicate"},{"display_html":"<a href=\"#v:repeat\">repeat</a> :: a -&gt; [a]","name":"repeat","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:repeat"},{"display_html":"<a href=\"#v:iterate\">iterate</a> :: (a -&gt; a) -&gt; a -&gt; [a]","name":"iterate","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:iterate"},{"display_html":"<a href=\"#v:scanr1\">scanr1</a> :: (a -&gt; a -&gt; a) -&gt; [a] -&gt; [a]","name":"scanr1","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:scanr1"},{"display_html":"<a href=\"#v:scanr\">scanr</a> :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; [b]","name":"scanr","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:scanr"},{"display_html":"<a href=\"#v:scanl1\">scanl1</a> :: (a -&gt; a -&gt; a) -&gt; [a] -&gt; [a]","name":"scanl1","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:scanl1"},{"display_html":"<a href=\"#v:scanl\">scanl</a> :: (b -&gt; a -&gt; b) -&gt; b -&gt; [a] -&gt; [b]","name":"scanl","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:scanl"},{"display_html":"<a href=\"#v:init\">init</a> :: [a] -&gt; [a]","name":"init","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:init"},{"display_html":"<a href=\"#v:last\">last</a> :: [a] -&gt; a","name":"last","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:last"},{"display_html":"<a href=\"#v:tail\">tail</a> :: [a] -&gt; [a]","name":"tail","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:tail"},{"display_html":"<a href=\"#v:head\">head</a> :: [a] -&gt; a","name":"head","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:head"},{"display_html":"<a href=\"#v:maybe\">maybe</a> :: b -&gt; (a -&gt; b) -&gt; <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> a -&gt; b","name":"maybe","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:maybe"},{"display_html":"<a href=\"#v:uncurry\">uncurry</a> :: (a -&gt; b -&gt; c) -&gt; (a, b) -&gt; c","name":"uncurry","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:uncurry"},{"display_html":"<a href=\"#v:curry\">curry</a> :: ((a, b) -&gt; c) -&gt; a -&gt; b -&gt; c","name":"curry","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:curry"},{"display_html":"<a href=\"#v:subtract\">subtract</a> :: <a href=\"LLVM-Prelude.html#t:Num\" title=\"LLVM.Prelude\">Num</a> a =&gt; a -&gt; a -&gt; a","name":"subtract","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:subtract"},{"display_html":"<a href=\"#v:asTypeOf\">asTypeOf</a> :: a -&gt; a -&gt; a","name":"asTypeOf","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:asTypeOf"},{"display_html":"<a href=\"#v:until\">until</a> :: (a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>) -&gt; (a -&gt; a) -&gt; a -&gt; a","name":"until","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:until"},{"display_html":"<a href=\"#v:-36--33-\">($!)</a> :: (a -&gt; b) -&gt; a -&gt; b","name":"$!","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-36--33-"},{"display_html":"<a href=\"#v:flip\">flip</a> :: (a -&gt; b -&gt; c) -&gt; b -&gt; a -&gt; c","name":"flip","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:flip"},{"display_html":"<a href=\"#v:.\">(.)</a> :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c","name":".","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:."},{"display_html":"<a href=\"#v:const\">const</a> :: a -&gt; b -&gt; a","name":"const","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:const"},{"display_html":"<a href=\"#v:id\">id</a> :: a -&gt; a","name":"id","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:id"},{"display_html":"<a href=\"#v:-61--60--60-\">(=&lt;&lt;)</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; (a -&gt; m b) -&gt; m a -&gt; m b","name":"=<<","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-61--60--60-"},{"display_html":"<a href=\"#v:undefined\">undefined</a> :: <a href=\"../base-4.12.0.0/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; a","name":"undefined","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:undefined"},{"display_html":"<a href=\"#v:errorWithoutStackTrace\">errorWithoutStackTrace</a> :: [<a href=\"LLVM-Prelude.html#t:Char\" title=\"LLVM.Prelude\">Char</a>] -&gt; a","name":"errorWithoutStackTrace","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:errorWithoutStackTrace"},{"display_html":"<a href=\"#v:error\">error</a> :: <a href=\"../base-4.12.0.0/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a> =&gt; [<a href=\"LLVM-Prelude.html#t:Char\" title=\"LLVM.Prelude\">Char</a>] -&gt; a","name":"error","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:error"},{"display_html":"<a href=\"#v:-38--38-\">(&amp;&amp;)</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>","name":"&&","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-38--38-"},{"display_html":"<a href=\"#v:-124--124-\">(||)</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>","name":"||","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-124--124-"},{"display_html":"<a href=\"#v:not\">not</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>","name":"not","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:not"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"LLVM-Prelude.html#t:Typeable\" title=\"LLVM.Prelude\">Typeable</a> a =&gt; <a href=\"#t:Data\">Data</a> a","name":"Data","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Data"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Typeable\">Typeable</a> (a :: k)","name":"Typeable","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Typeable"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Generic\">Generic</a> a","name":"Generic","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Generic"},{"display_html":"module <a href=\"../base-4.12.0.0/Data-Int.html\">Data.Int</a>","name":"","module":"LLVM.Prelude","link":""},{"display_html":"module <a href=\"../base-4.12.0.0/Data-Word.html\">Data.Word</a>","name":"","module":"LLVM.Prelude","link":""},{"display_html":"module <a href=\"../base-4.12.0.0/Data-Functor.html\">Data.Functor</a>","name":"","module":"LLVM.Prelude","link":""},{"display_html":"module <a href=\"../base-4.12.0.0/Data-Foldable.html\">Data.Foldable</a>","name":"","module":"LLVM.Prelude","link":""},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Semigroup\">Semigroup</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-60--62-\">(&lt;&gt;)</a> :: a -&gt; a -&gt; a</li></ul>","name":"Semigroup <>","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Semigroup"},{"display_html":"module <a href=\"../base-4.12.0.0/Data-Traversable.html\">Data.Traversable</a>","name":"","module":"LLVM.Prelude","link":""},{"display_html":"module <a href=\"../base-4.12.0.0/Control-Applicative.html\">Control.Applicative</a>","name":"","module":"LLVM.Prelude","link":""},{"display_html":"<a href=\"#v:guard\">guard</a> :: <a href=\"../base-4.12.0.0/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> f =&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> -&gt; f ()","name":"guard","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:guard"},{"display_html":"<a href=\"#v:join\">join</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; m (m a) -&gt; m a","name":"join","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:join"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> m =&gt; <a href=\"#t:Monad\">Monad</a> (m :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:-62--62--61-\">(&gt;&gt;=)</a> :: m a -&gt; (a -&gt; m b) -&gt; m b</li><li><a href=\"#v:-62--62-\">(&gt;&gt;)</a> :: m a -&gt; m b -&gt; m b</li><li><a href=\"#v:return\">return</a> :: a -&gt; m a</li><li><a href=\"#v:fail\">fail</a> :: <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; m a</li></ul>","name":"Monad fail >>= >> return","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Monad"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Functor\">Functor</a> (f :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fmap\">fmap</a> :: (a -&gt; b) -&gt; f a -&gt; f b</li></ul>","name":"Functor fmap","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:Functor"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"../base-4.12.0.0/Control-Applicative.html#t:Alternative\" title=\"Control.Applicative\">Alternative</a> m, <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m) =&gt; <a href=\"#t:MonadPlus\">MonadPlus</a> (m :: <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.12.0.0/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:mzero\">mzero</a> :: m a</li><li><a href=\"#v:mplus\">mplus</a> :: m a -&gt; m a -&gt; m a</li></ul>","name":"MonadPlus mzero mplus","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:MonadPlus"},{"display_html":"<a href=\"#v:mfilter\">mfilter</a> :: <a href=\"LLVM-Prelude.html#t:MonadPlus\" title=\"LLVM.Prelude\">MonadPlus</a> m =&gt; (a -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>) -&gt; m a -&gt; m a","name":"mfilter","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:mfilter"},{"display_html":"<a href=\"#v:-60--36--33--62-\">(&lt;$!&gt;)</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; (a -&gt; b) -&gt; m a -&gt; m b","name":"<$!>","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-60--36--33--62-"},{"display_html":"<a href=\"#v:unless\">unless</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> -&gt; f () -&gt; f ()","name":"unless","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:unless"},{"display_html":"<a href=\"#v:replicateM_\">replicateM_</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> m =&gt; <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a> -&gt; m a -&gt; m ()","name":"replicateM_","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:replicateM_"},{"display_html":"<a href=\"#v:replicateM\">replicateM</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> m =&gt; <a href=\"LLVM-Prelude.html#t:Int\" title=\"LLVM.Prelude\">Int</a> -&gt; m a -&gt; m [a]","name":"replicateM","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:replicateM"},{"display_html":"<a href=\"#v:foldM_\">foldM_</a> :: (<a href=\"LLVM-Prelude.html#t:Foldable\" title=\"LLVM.Prelude\">Foldable</a> t, <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t a -&gt; m ()","name":"foldM_","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:foldM_"},{"display_html":"<a href=\"#v:foldM\">foldM</a> :: (<a href=\"LLVM-Prelude.html#t:Foldable\" title=\"LLVM.Prelude\">Foldable</a> t, <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t a -&gt; m b","name":"foldM","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:foldM"},{"display_html":"<a href=\"#v:zipWithM_\">zipWithM_</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> m =&gt; (a -&gt; b -&gt; m c) -&gt; [a] -&gt; [b] -&gt; m ()","name":"zipWithM_","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:zipWithM_"},{"display_html":"<a href=\"#v:zipWithM\">zipWithM</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> m =&gt; (a -&gt; b -&gt; m c) -&gt; [a] -&gt; [b] -&gt; m [c]","name":"zipWithM","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:zipWithM"},{"display_html":"<a href=\"#v:mapAndUnzipM\">mapAndUnzipM</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> m =&gt; (a -&gt; m (b, c)) -&gt; [a] -&gt; m ([b], [c])","name":"mapAndUnzipM","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:mapAndUnzipM"},{"display_html":"<a href=\"#v:forever\">forever</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; f a -&gt; f b","name":"forever","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:forever"},{"display_html":"<a href=\"#v:-60--61--60-\">(&lt;=&lt;)</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; (b -&gt; m c) -&gt; (a -&gt; m b) -&gt; a -&gt; m c","name":"<=<","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-60--61--60-"},{"display_html":"<a href=\"#v:-62--61--62-\">(&gt;=&gt;)</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; (a -&gt; m b) -&gt; (b -&gt; m c) -&gt; a -&gt; m c","name":">=>","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-62--61--62-"},{"display_html":"<a href=\"#v:filterM\">filterM</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> m =&gt; (a -&gt; m <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>) -&gt; [a] -&gt; m [a]","name":"filterM","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:filterM"},{"display_html":"<a href=\"#v:void\">void</a> :: <a href=\"LLVM-Prelude.html#t:Functor\" title=\"LLVM.Prelude\">Functor</a> f =&gt; f a -&gt; f ()","name":"void","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:void"},{"display_html":"<a href=\"#v:ap\">ap</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; m (a -&gt; b) -&gt; m a -&gt; m b","name":"ap","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:ap"},{"display_html":"<a href=\"#v:liftM5\">liftM5</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; (a1 -&gt; a2 -&gt; a3 -&gt; a4 -&gt; a5 -&gt; r) -&gt; m a1 -&gt; m a2 -&gt; m a3 -&gt; m a4 -&gt; m a5 -&gt; m r","name":"liftM5","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:liftM5"},{"display_html":"<a href=\"#v:liftM4\">liftM4</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; (a1 -&gt; a2 -&gt; a3 -&gt; a4 -&gt; r) -&gt; m a1 -&gt; m a2 -&gt; m a3 -&gt; m a4 -&gt; m r","name":"liftM4","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:liftM4"},{"display_html":"<a href=\"#v:liftM3\">liftM3</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; (a1 -&gt; a2 -&gt; a3 -&gt; r) -&gt; m a1 -&gt; m a2 -&gt; m a3 -&gt; m r","name":"liftM3","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:liftM3"},{"display_html":"<a href=\"#v:liftM2\">liftM2</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; (a1 -&gt; a2 -&gt; r) -&gt; m a1 -&gt; m a2 -&gt; m r","name":"liftM2","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:liftM2"},{"display_html":"<a href=\"#v:liftM\">liftM</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; (a1 -&gt; r) -&gt; m a1 -&gt; m r","name":"liftM","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:liftM"},{"display_html":"<a href=\"#v:when\">when</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> -&gt; f () -&gt; f ()","name":"when","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:when"},{"display_html":"<a href=\"#v:-61--60--60-\">(=&lt;&lt;)</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; (a -&gt; m b) -&gt; m a -&gt; m b","name":"=<<","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:-61--60--60-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ByteString\">ByteString</a>","name":"ByteString","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:ByteString"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ShortByteString\">ShortByteString</a>","name":"ShortByteString","module":"LLVM.Prelude","link":"LLVM-Prelude.html#t:ShortByteString"},{"display_html":"<a href=\"#v:fromMaybe\">fromMaybe</a> :: a -&gt; <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> a -&gt; a","name":"fromMaybe","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:fromMaybe"},{"display_html":"<a href=\"#v:leftBiasedZip\">leftBiasedZip</a> :: [a] -&gt; [b] -&gt; [(a, <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> b)]","name":"leftBiasedZip","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:leftBiasedZip"},{"display_html":"<a href=\"#v:findM\">findM</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; (a -&gt; m <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>) -&gt; [a] -&gt; m (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> a)","name":"findM","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:findM"},{"display_html":"<a href=\"#v:ifM\">ifM</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; m <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> -&gt; m a -&gt; m a -&gt; m a","name":"ifM","module":"LLVM.Prelude","link":"LLVM-Prelude.html#v:ifM"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SnocList\">SnocList</a> a = <a href=\"#v:SnocList\">SnocList</a> {<ul class=\"subs\"><li><a href=\"#v:unSnocList\">unSnocList</a> :: [a]</li></ul>}","name":"SnocList SnocList unSnocList","module":"LLVM.IRBuilder.Internal.SnocList","link":"LLVM-IRBuilder-Internal-SnocList.html#t:SnocList"},{"display_html":"<a href=\"#v:snoc\">snoc</a> :: <a href=\"LLVM-IRBuilder-Internal-SnocList.html#t:SnocList\" title=\"LLVM.IRBuilder.Internal.SnocList\">SnocList</a> a -&gt; a -&gt; <a href=\"LLVM-IRBuilder-Internal-SnocList.html#t:SnocList\" title=\"LLVM.IRBuilder.Internal.SnocList\">SnocList</a> a","name":"snoc","module":"LLVM.IRBuilder.Internal.SnocList","link":"LLVM-IRBuilder-Internal-SnocList.html#v:snoc"},{"display_html":"<a href=\"#v:getSnocList\">getSnocList</a> :: <a href=\"LLVM-IRBuilder-Internal-SnocList.html#t:SnocList\" title=\"LLVM.IRBuilder.Internal.SnocList\">SnocList</a> a -&gt; [a]","name":"getSnocList","module":"LLVM.IRBuilder.Internal.SnocList","link":"LLVM-IRBuilder-Internal-SnocList.html#v:getSnocList"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Visibility\">Visibility</a><ul class=\"subs\"><li>= <a href=\"#v:Default\">Default</a></li><li>| <a href=\"#v:Hidden\">Hidden</a></li><li>| <a href=\"#v:Protected\">Protected</a></li></ul>","name":"Visibility Protected Hidden Default","module":"LLVM.AST.Visibility","link":"LLVM-AST-Visibility.html#t:Visibility"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Model\">Model</a><ul class=\"subs\"><li>= <a href=\"#v:GeneralDynamic\">GeneralDynamic</a></li><li>| <a href=\"#v:LocalDynamic\">LocalDynamic</a></li><li>| <a href=\"#v:InitialExec\">InitialExec</a></li><li>| <a href=\"#v:LocalExec\">LocalExec</a></li></ul>","name":"Model LocalExec InitialExec LocalDynamic GeneralDynamic","module":"LLVM.AST.ThreadLocalStorage","link":"LLVM-AST-ThreadLocalStorage.html#t:Model"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RMWOperation\">RMWOperation</a><ul class=\"subs\"><li>= <a href=\"#v:Xchg\">Xchg</a></li><li>| <a href=\"#v:Add\">Add</a></li><li>| <a href=\"#v:Sub\">Sub</a></li><li>| <a href=\"#v:And\">And</a></li><li>| <a href=\"#v:Nand\">Nand</a></li><li>| <a href=\"#v:Or\">Or</a></li><li>| <a href=\"#v:Xor\">Xor</a></li><li>| <a href=\"#v:Max\">Max</a></li><li>| <a href=\"#v:Min\">Min</a></li><li>| <a href=\"#v:UMax\">UMax</a></li><li>| <a href=\"#v:UMin\">UMin</a></li></ul>","name":"RMWOperation UMin UMax Xor Or Nand And Sub Add Xchg Min Max","module":"LLVM.AST.RMWOperation","link":"LLVM-AST-RMWOperation.html#t:RMWOperation"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ParameterAttribute\">ParameterAttribute</a><ul class=\"subs\"><li>= <a href=\"#v:ZeroExt\">ZeroExt</a></li><li>| <a href=\"#v:SignExt\">SignExt</a></li><li>| <a href=\"#v:InReg\">InReg</a></li><li>| <a href=\"#v:SRet\">SRet</a></li><li>| <a href=\"#v:Alignment\">Alignment</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li>| <a href=\"#v:NoAlias\">NoAlias</a></li><li>| <a href=\"#v:ByVal\">ByVal</a></li><li>| <a href=\"#v:NoCapture\">NoCapture</a></li><li>| <a href=\"#v:Nest\">Nest</a></li><li>| <a href=\"#v:ReadNone\">ReadNone</a></li><li>| <a href=\"#v:ReadOnly\">ReadOnly</a></li><li>| <a href=\"#v:WriteOnly\">WriteOnly</a></li><li>| <a href=\"#v:InAlloca\">InAlloca</a></li><li>| <a href=\"#v:NonNull\">NonNull</a></li><li>| <a href=\"#v:Dereferenceable\">Dereferenceable</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li>| <a href=\"#v:DereferenceableOrNull\">DereferenceableOrNull</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li>| <a href=\"#v:Returned\">Returned</a></li><li>| <a href=\"#v:SwiftSelf\">SwiftSelf</a></li><li>| <a href=\"#v:SwiftError\">SwiftError</a></li><li>| <a href=\"#v:StringAttribute\">StringAttribute</a> { <ul class=\"subs\"><li><a href=\"#v:stringAttributeKind\">stringAttributeKind</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:stringAttributeValue\">stringAttributeValue</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li></ul> }</li></ul>","name":"ParameterAttribute SwiftError SwiftSelf Returned DereferenceableOrNull Dereferenceable NonNull InAlloca NoCapture ByVal NoAlias Alignment SRet InReg SignExt ZeroExt WriteOnly StringAttribute ReadOnly ReadNone Nest stringAttributeValue stringAttributeKind","module":"LLVM.AST.ParameterAttribute","link":"LLVM-AST-ParameterAttribute.html#t:ParameterAttribute"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Name\">Name</a><ul class=\"subs\"><li>= <a href=\"#v:Name\">Name</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li>| <a href=\"#v:UnName\">UnName</a> <a href=\"LLVM-Prelude.html#t:Word\" title=\"LLVM.Prelude\">Word</a></li></ul>","name":"Name UnName Name","module":"LLVM.AST.Name","link":"LLVM-AST-Name.html#t:Name"},{"display_html":"<a href=\"#v:mkName\">mkName</a> :: <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a>","name":"mkName","module":"LLVM.AST.Name","link":"LLVM-AST-Name.html#v:mkName"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Linkage\">Linkage</a><ul class=\"subs\"><li>= <a href=\"#v:Private\">Private</a></li><li>| <a href=\"#v:Internal\">Internal</a></li><li>| <a href=\"#v:AvailableExternally\">AvailableExternally</a></li><li>| <a href=\"#v:LinkOnce\">LinkOnce</a></li><li>| <a href=\"#v:Weak\">Weak</a></li><li>| <a href=\"#v:Common\">Common</a></li><li>| <a href=\"#v:Appending\">Appending</a></li><li>| <a href=\"#v:ExternWeak\">ExternWeak</a></li><li>| <a href=\"#v:LinkOnceODR\">LinkOnceODR</a></li><li>| <a href=\"#v:WeakODR\">WeakODR</a></li><li>| <a href=\"#v:External\">External</a></li></ul>","name":"Linkage External WeakODR LinkOnceODR ExternWeak Appending Common LinkOnce AvailableExternally Internal Private Weak","module":"LLVM.AST.Linkage","link":"LLVM-AST-Linkage.html#t:Linkage"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IntegerPredicate\">IntegerPredicate</a><ul class=\"subs\"><li>= <a href=\"#v:EQ\">EQ</a></li><li>| <a href=\"#v:NE\">NE</a></li><li>| <a href=\"#v:UGT\">UGT</a></li><li>| <a href=\"#v:UGE\">UGE</a></li><li>| <a href=\"#v:ULT\">ULT</a></li><li>| <a href=\"#v:ULE\">ULE</a></li><li>| <a href=\"#v:SGT\">SGT</a></li><li>| <a href=\"#v:SGE\">SGE</a></li><li>| <a href=\"#v:SLT\">SLT</a></li><li>| <a href=\"#v:SLE\">SLE</a></li></ul>","name":"IntegerPredicate SLE SLT SGE SGT ULE ULT UGE UGT NE EQ","module":"LLVM.AST.IntegerPredicate","link":"LLVM-AST-IntegerPredicate.html#t:IntegerPredicate"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FunctionAttribute\">FunctionAttribute</a><ul class=\"subs\"><li>= <a href=\"#v:NoReturn\">NoReturn</a></li><li>| <a href=\"#v:NoUnwind\">NoUnwind</a></li><li>| <a href=\"#v:ReadNone\">ReadNone</a></li><li>| <a href=\"#v:ReadOnly\">ReadOnly</a></li><li>| <a href=\"#v:NoInline\">NoInline</a></li><li>| <a href=\"#v:NoRecurse\">NoRecurse</a></li><li>| <a href=\"#v:AlwaysInline\">AlwaysInline</a></li><li>| <a href=\"#v:MinimizeSize\">MinimizeSize</a></li><li>| <a href=\"#v:OptimizeForSize\">OptimizeForSize</a></li><li>| <a href=\"#v:OptimizeNone\">OptimizeNone</a></li><li>| <a href=\"#v:StackProtect\">StackProtect</a></li><li>| <a href=\"#v:StackProtectReq\">StackProtectReq</a></li><li>| <a href=\"#v:StackProtectStrong\">StackProtectStrong</a></li><li>| <a href=\"#v:StrictFP\">StrictFP</a></li><li>| <a href=\"#v:NoRedZone\">NoRedZone</a></li><li>| <a href=\"#v:NoImplicitFloat\">NoImplicitFloat</a></li><li>| <a href=\"#v:Naked\">Naked</a></li><li>| <a href=\"#v:InlineHint\">InlineHint</a></li><li>| <a href=\"#v:StackAlignment\">StackAlignment</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li>| <a href=\"#v:ReturnsTwice\">ReturnsTwice</a></li><li>| <a href=\"#v:UWTable\">UWTable</a></li><li>| <a href=\"#v:NonLazyBind\">NonLazyBind</a></li><li>| <a href=\"#v:Builtin\">Builtin</a></li><li>| <a href=\"#v:NoBuiltin\">NoBuiltin</a></li><li>| <a href=\"#v:Cold\">Cold</a></li><li>| <a href=\"#v:JumpTable\">JumpTable</a></li><li>| <a href=\"#v:NoDuplicate\">NoDuplicate</a></li><li>| <a href=\"#v:SanitizeAddress\">SanitizeAddress</a></li><li>| <a href=\"#v:SanitizeHWAddress\">SanitizeHWAddress</a></li><li>| <a href=\"#v:SanitizeThread\">SanitizeThread</a></li><li>| <a href=\"#v:SanitizeMemory\">SanitizeMemory</a></li><li>| <a href=\"#v:Speculatable\">Speculatable</a></li><li>| <a href=\"#v:StringAttribute\">StringAttribute</a> { <ul class=\"subs\"><li><a href=\"#v:stringAttributeKind\">stringAttributeKind</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:stringAttributeValue\">stringAttributeValue</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li></ul> }</li><li>| <a href=\"#v:AllocSize\">AllocSize</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a> (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>)</li><li>| <a href=\"#v:WriteOnly\">WriteOnly</a></li><li>| <a href=\"#v:ArgMemOnly\">ArgMemOnly</a></li><li>| <a href=\"#v:Convergent\">Convergent</a></li><li>| <a href=\"#v:InaccessibleMemOnly\">InaccessibleMemOnly</a></li><li>| <a href=\"#v:InaccessibleMemOrArgMemOnly\">InaccessibleMemOrArgMemOnly</a></li><li>| <a href=\"#v:SafeStack\">SafeStack</a></li></ul>","name":"FunctionAttribute SafeStack InaccessibleMemOrArgMemOnly InaccessibleMemOnly Convergent ArgMemOnly AllocSize Speculatable SanitizeMemory SanitizeThread SanitizeHWAddress SanitizeAddress NoDuplicate JumpTable Cold NoBuiltin Builtin NonLazyBind UWTable ReturnsTwice StackAlignment InlineHint Naked NoImplicitFloat NoRedZone StrictFP StackProtectStrong StackProtectReq StackProtect OptimizeNone OptimizeForSize MinimizeSize AlwaysInline NoRecurse NoUnwind NoReturn WriteOnly StringAttribute ReadOnly ReadNone NoInline stringAttributeValue stringAttributeKind","module":"LLVM.AST.FunctionAttribute","link":"LLVM-AST-FunctionAttribute.html#t:FunctionAttribute"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:GroupID\">GroupID</a> = <a href=\"#v:GroupID\">GroupID</a> <a href=\"LLVM-Prelude.html#t:Word\" title=\"LLVM.Prelude\">Word</a>","name":"GroupID GroupID","module":"LLVM.AST.FunctionAttribute","link":"LLVM-AST-FunctionAttribute.html#t:GroupID"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ParameterAttribute\">ParameterAttribute</a><ul class=\"subs\"><li>= <a href=\"#v:ZeroExt\">ZeroExt</a></li><li>| <a href=\"#v:SignExt\">SignExt</a></li><li>| <a href=\"#v:InReg\">InReg</a></li><li>| <a href=\"#v:SRet\">SRet</a></li><li>| <a href=\"#v:Alignment\">Alignment</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li>| <a href=\"#v:NoAlias\">NoAlias</a></li><li>| <a href=\"#v:ByVal\">ByVal</a></li><li>| <a href=\"#v:NoCapture\">NoCapture</a></li><li>| <a href=\"#v:Nest\">Nest</a></li><li>| <a href=\"#v:InAlloca\">InAlloca</a></li><li>| <a href=\"#v:NonNull\">NonNull</a></li><li>| <a href=\"#v:Dereferenceable\">Dereferenceable</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li>| <a href=\"#v:DereferenceableOrNull\">DereferenceableOrNull</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li>| <a href=\"#v:Returned\">Returned</a></li><li>| <a href=\"#v:SwiftSelf\">SwiftSelf</a></li><li>| <a href=\"#v:SwiftError\">SwiftError</a></li></ul>","name":"ParameterAttribute Nest ZeroExt SignExt InReg SRet Alignment NoAlias ByVal NoCapture InAlloca NonNull Dereferenceable DereferenceableOrNull Returned SwiftSelf SwiftError","module":"LLVM.AST.Attribute","link":"LLVM-AST-Attribute.html#t:ParameterAttribute"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FunctionAttribute\">FunctionAttribute</a><ul class=\"subs\"><li>= <a href=\"#v:NoReturn\">NoReturn</a></li><li>| <a href=\"#v:NoUnwind\">NoUnwind</a></li><li>| <a href=\"#v:ReadNone\">ReadNone</a></li><li>| <a href=\"#v:ReadOnly\">ReadOnly</a></li><li>| <a href=\"#v:NoInline\">NoInline</a></li><li>| <a href=\"#v:NoRecurse\">NoRecurse</a></li><li>| <a href=\"#v:AlwaysInline\">AlwaysInline</a></li><li>| <a href=\"#v:MinimizeSize\">MinimizeSize</a></li><li>| <a href=\"#v:OptimizeForSize\">OptimizeForSize</a></li><li>| <a href=\"#v:OptimizeNone\">OptimizeNone</a></li><li>| <a href=\"#v:StackProtect\">StackProtect</a></li><li>| <a href=\"#v:StackProtectReq\">StackProtectReq</a></li><li>| <a href=\"#v:StackProtectStrong\">StackProtectStrong</a></li><li>| <a href=\"#v:StrictFP\">StrictFP</a></li><li>| <a href=\"#v:NoRedZone\">NoRedZone</a></li><li>| <a href=\"#v:NoImplicitFloat\">NoImplicitFloat</a></li><li>| <a href=\"#v:Naked\">Naked</a></li><li>| <a href=\"#v:InlineHint\">InlineHint</a></li><li>| <a href=\"#v:StackAlignment\">StackAlignment</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li>| <a href=\"#v:ReturnsTwice\">ReturnsTwice</a></li><li>| <a href=\"#v:UWTable\">UWTable</a></li><li>| <a href=\"#v:NonLazyBind\">NonLazyBind</a></li><li>| <a href=\"#v:Builtin\">Builtin</a></li><li>| <a href=\"#v:NoBuiltin\">NoBuiltin</a></li><li>| <a href=\"#v:Cold\">Cold</a></li><li>| <a href=\"#v:JumpTable\">JumpTable</a></li><li>| <a href=\"#v:NoDuplicate\">NoDuplicate</a></li><li>| <a href=\"#v:SanitizeAddress\">SanitizeAddress</a></li><li>| <a href=\"#v:SanitizeHWAddress\">SanitizeHWAddress</a></li><li>| <a href=\"#v:SanitizeThread\">SanitizeThread</a></li><li>| <a href=\"#v:SanitizeMemory\">SanitizeMemory</a></li><li>| <a href=\"#v:Speculatable\">Speculatable</a></li><li>| <a href=\"#v:StringAttribute\">StringAttribute</a> { <ul class=\"subs\"><li><a href=\"#v:stringAttributeKind\">stringAttributeKind</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:stringAttributeValue\">stringAttributeValue</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li></ul> }</li><li>| <a href=\"#v:AllocSize\">AllocSize</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a> (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>)</li><li>| <a href=\"#v:WriteOnly\">WriteOnly</a></li><li>| <a href=\"#v:ArgMemOnly\">ArgMemOnly</a></li><li>| <a href=\"#v:Convergent\">Convergent</a></li><li>| <a href=\"#v:InaccessibleMemOnly\">InaccessibleMemOnly</a></li><li>| <a href=\"#v:InaccessibleMemOrArgMemOnly\">InaccessibleMemOrArgMemOnly</a></li><li>| <a href=\"#v:SafeStack\">SafeStack</a></li></ul>","name":"FunctionAttribute NoInline ReadNone ReadOnly StringAttribute WriteOnly NoReturn NoUnwind NoRecurse AlwaysInline MinimizeSize OptimizeForSize OptimizeNone StackProtect StackProtectReq StackProtectStrong StrictFP NoRedZone NoImplicitFloat Naked InlineHint StackAlignment ReturnsTwice UWTable NonLazyBind Builtin NoBuiltin Cold JumpTable NoDuplicate SanitizeAddress SanitizeHWAddress SanitizeThread SanitizeMemory Speculatable AllocSize ArgMemOnly Convergent InaccessibleMemOnly InaccessibleMemOrArgMemOnly SafeStack stringAttributeKind stringAttributeValue","module":"LLVM.AST.Attribute","link":"LLVM-AST-Attribute.html#t:FunctionAttribute"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:GroupID\">GroupID</a> = <a href=\"#v:GroupID\">GroupID</a> <a href=\"LLVM-Prelude.html#t:Word\" title=\"LLVM.Prelude\">Word</a>","name":"GroupID GroupID","module":"LLVM.AST.Attribute","link":"LLVM-AST-Attribute.html#t:GroupID"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FloatingPointPredicate\">FloatingPointPredicate</a><ul class=\"subs\"><li>= <a href=\"#v:False\">False</a></li><li>| <a href=\"#v:OEQ\">OEQ</a></li><li>| <a href=\"#v:OGT\">OGT</a></li><li>| <a href=\"#v:OGE\">OGE</a></li><li>| <a href=\"#v:OLT\">OLT</a></li><li>| <a href=\"#v:OLE\">OLE</a></li><li>| <a href=\"#v:ONE\">ONE</a></li><li>| <a href=\"#v:ORD\">ORD</a></li><li>| <a href=\"#v:UNO\">UNO</a></li><li>| <a href=\"#v:UEQ\">UEQ</a></li><li>| <a href=\"#v:UGT\">UGT</a></li><li>| <a href=\"#v:UGE\">UGE</a></li><li>| <a href=\"#v:ULT\">ULT</a></li><li>| <a href=\"#v:ULE\">ULE</a></li><li>| <a href=\"#v:UNE\">UNE</a></li><li>| <a href=\"#v:True\">True</a></li></ul>","name":"FloatingPointPredicate UNE UEQ UNO ORD ONE OLE OLT OGE OGT OEQ ULE ULT UGE UGT True False","module":"LLVM.AST.FloatingPointPredicate","link":"LLVM-AST-FloatingPointPredicate.html#t:FloatingPointPredicate"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeFloat\">SomeFloat</a><ul class=\"subs\"><li>= <a href=\"#v:Half\">Half</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word16\" title=\"Data.Word\">Word16</a></li><li>| <a href=\"#v:Single\">Single</a> <a href=\"LLVM-Prelude.html#t:Float\" title=\"LLVM.Prelude\">Float</a></li><li>| <a href=\"#v:Double\">Double</a> <a href=\"LLVM-Prelude.html#t:Double\" title=\"LLVM.Prelude\">Double</a></li><li>| <a href=\"#v:Quadruple\">Quadruple</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li>| <a href=\"#v:X86_FP80\">X86_FP80</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word16\" title=\"Data.Word\">Word16</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li>| <a href=\"#v:PPC_FP128\">PPC_FP128</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li></ul>","name":"SomeFloat PPC_FP128 X86_FP80 Quadruple Half Single Double","module":"LLVM.AST.Float","link":"LLVM-AST-Float.html#t:SomeFloat"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StorageClass\">StorageClass</a><ul class=\"subs\"><li>= <a href=\"#v:Import\">Import</a></li><li>| <a href=\"#v:Export\">Export</a></li></ul>","name":"StorageClass Export Import","module":"LLVM.AST.DLL","link":"LLVM-AST-DLL.html#t:StorageClass"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CallingConvention\">CallingConvention</a><ul class=\"subs\"><li>= <a href=\"#v:C\">C</a></li><li>| <a href=\"#v:Fast\">Fast</a></li><li>| <a href=\"#v:Cold\">Cold</a></li><li>| <a href=\"#v:GHC\">GHC</a></li><li>| <a href=\"#v:HiPE\">HiPE</a></li><li>| <a href=\"#v:WebKit_JS\">WebKit_JS</a></li><li>| <a href=\"#v:AnyReg\">AnyReg</a></li><li>| <a href=\"#v:PreserveMost\">PreserveMost</a></li><li>| <a href=\"#v:PreserveAll\">PreserveAll</a></li><li>| <a href=\"#v:Swift\">Swift</a></li><li>| <a href=\"#v:CXX_FastTLS\">CXX_FastTLS</a></li><li>| <a href=\"#v:X86_StdCall\">X86_StdCall</a></li><li>| <a href=\"#v:X86_FastCall\">X86_FastCall</a></li><li>| <a href=\"#v:ARM_APCS\">ARM_APCS</a></li><li>| <a href=\"#v:ARM_AAPCS\">ARM_AAPCS</a></li><li>| <a href=\"#v:ARM_AAPCS_VFP\">ARM_AAPCS_VFP</a></li><li>| <a href=\"#v:MSP430_INTR\">MSP430_INTR</a></li><li>| <a href=\"#v:X86_ThisCall\">X86_ThisCall</a></li><li>| <a href=\"#v:PTX_Kernel\">PTX_Kernel</a></li><li>| <a href=\"#v:PTX_Device\">PTX_Device</a></li><li>| <a href=\"#v:SPIR_FUNC\">SPIR_FUNC</a></li><li>| <a href=\"#v:SPIR_KERNEL\">SPIR_KERNEL</a></li><li>| <a href=\"#v:Intel_OCL_BI\">Intel_OCL_BI</a></li><li>| <a href=\"#v:X86_64_SysV\">X86_64_SysV</a></li><li>| <a href=\"#v:Win64\">Win64</a></li><li>| <a href=\"#v:X86_VectorCall\">X86_VectorCall</a></li><li>| <a href=\"#v:HHVM\">HHVM</a></li><li>| <a href=\"#v:HHVM_C\">HHVM_C</a></li><li>| <a href=\"#v:X86_Intr\">X86_Intr</a></li><li>| <a href=\"#v:AVR_Intr\">AVR_Intr</a></li><li>| <a href=\"#v:AVR_Signal\">AVR_Signal</a></li><li>| <a href=\"#v:AVR_Builtin\">AVR_Builtin</a></li><li>| <a href=\"#v:AMDGPU_VS\">AMDGPU_VS</a></li><li>| <a href=\"#v:AMDGPU_HS\">AMDGPU_HS</a></li><li>| <a href=\"#v:AMDGPU_GS\">AMDGPU_GS</a></li><li>| <a href=\"#v:AMDGPU_PS\">AMDGPU_PS</a></li><li>| <a href=\"#v:AMDGPU_CS\">AMDGPU_CS</a></li><li>| <a href=\"#v:AMDGPU_Kernel\">AMDGPU_Kernel</a></li><li>| <a href=\"#v:X86_RegCall\">X86_RegCall</a></li><li>| <a href=\"#v:MSP430_Builtin\">MSP430_Builtin</a></li><li>| <a href=\"#v:Numbered\">Numbered</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li></ul>","name":"CallingConvention Numbered MSP430_Builtin X86_RegCall AMDGPU_Kernel AMDGPU_CS AMDGPU_PS AMDGPU_GS AMDGPU_HS AMDGPU_VS AVR_Builtin AVR_Signal AVR_Intr X86_Intr HHVM_C HHVM X86_VectorCall Win64 X86_64_SysV Intel_OCL_BI SPIR_KERNEL SPIR_FUNC PTX_Device PTX_Kernel X86_ThisCall MSP430_INTR ARM_AAPCS_VFP ARM_AAPCS ARM_APCS X86_FastCall X86_StdCall CXX_FastTLS Swift PreserveAll PreserveMost AnyReg WebKit_JS HiPE Fast Cold C GHC","module":"LLVM.AST.CallingConvention","link":"LLVM-AST-CallingConvention.html#t:CallingConvention"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SelectionKind\">SelectionKind</a><ul class=\"subs\"><li>= <a href=\"#v:Any\">Any</a></li><li>| <a href=\"#v:ExactMatch\">ExactMatch</a></li><li>| <a href=\"#v:Largest\">Largest</a></li><li>| <a href=\"#v:NoDuplicates\">NoDuplicates</a></li><li>| <a href=\"#v:SameSize\">SameSize</a></li></ul>","name":"SelectionKind SameSize NoDuplicates Largest ExactMatch Any","module":"LLVM.AST.COMDAT","link":"LLVM-AST-COMDAT.html#t:SelectionKind"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AddrSpace\">AddrSpace</a> = <a href=\"#v:AddrSpace\">AddrSpace</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>","name":"AddrSpace AddrSpace","module":"LLVM.AST.AddrSpace","link":"LLVM-AST-AddrSpace.html#t:AddrSpace"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FloatingPointType\">FloatingPointType</a><ul class=\"subs\"><li>= <a href=\"#v:HalfFP\">HalfFP</a></li><li>| <a href=\"#v:FloatFP\">FloatFP</a></li><li>| <a href=\"#v:DoubleFP\">DoubleFP</a></li><li>| <a href=\"#v:FP128FP\">FP128FP</a></li><li>| <a href=\"#v:X86_FP80FP\">X86_FP80FP</a></li><li>| <a href=\"#v:PPC_FP128FP\">PPC_FP128FP</a></li></ul>","name":"FloatingPointType PPC_FP128FP X86_FP80FP FP128FP DoubleFP FloatFP HalfFP","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#t:FloatingPointType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Type\">Type</a><ul class=\"subs\"><li>= <a href=\"#v:VoidType\">VoidType</a></li><li>| <a href=\"#v:IntegerType\">IntegerType</a> { <ul class=\"subs\"><li><a href=\"#v:typeBits\">typeBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li></ul> }</li><li>| <a href=\"#v:PointerType\">PointerType</a> { <ul class=\"subs\"><li><a href=\"#v:pointerReferent\">pointerReferent</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:pointerAddrSpace\">pointerAddrSpace</a> :: <a href=\"LLVM-AST-AddrSpace.html#t:AddrSpace\" title=\"LLVM.AST.AddrSpace\">AddrSpace</a></li></ul> }</li><li>| <a href=\"#v:FloatingPointType\">FloatingPointType</a> { <ul class=\"subs\"><li><a href=\"#v:floatingPointType\">floatingPointType</a> :: <a href=\"LLVM-AST-Type.html#t:FloatingPointType\" title=\"LLVM.AST.Type\">FloatingPointType</a></li></ul> }</li><li>| <a href=\"#v:FunctionType\">FunctionType</a> { <ul class=\"subs\"><li><a href=\"#v:resultType\">resultType</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:argumentTypes\">argumentTypes</a> :: [<a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>]</li><li><a href=\"#v:isVarArg\">isVarArg</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li></ul> }</li><li>| <a href=\"#v:VectorType\">VectorType</a> { <ul class=\"subs\"><li><a href=\"#v:nVectorElements\">nVectorElements</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:elementType\">elementType</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:StructureType\">StructureType</a> { <ul class=\"subs\"><li><a href=\"#v:isPacked\">isPacked</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:elementTypes\">elementTypes</a> :: [<a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>]</li></ul> }</li><li>| <a href=\"#v:ArrayType\">ArrayType</a> { <ul class=\"subs\"><li><a href=\"#v:nArrayElements\">nArrayElements</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:elementType\">elementType</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:NamedTypeReference\">NamedTypeReference</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li>| <a href=\"#v:MetadataType\">MetadataType</a></li><li>| <a href=\"#v:LabelType\">LabelType</a></li><li>| <a href=\"#v:TokenType\">TokenType</a></li></ul>","name":"Type TokenType LabelType MetadataType NamedTypeReference ArrayType StructureType VectorType FunctionType PointerType IntegerType VoidType FloatingPointType nArrayElements elementTypes isPacked elementType nVectorElements isVarArg argumentTypes resultType floatingPointType pointerAddrSpace pointerReferent typeBits","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#t:Type"},{"display_html":"<a href=\"#v:void\">void</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"void","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:void"},{"display_html":"<a href=\"#v:i1\">i1</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"i1","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:i1"},{"display_html":"<a href=\"#v:i8\">i8</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"i8","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:i8"},{"display_html":"<a href=\"#v:i16\">i16</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"i16","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:i16"},{"display_html":"<a href=\"#v:i32\">i32</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"i32","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:i32"},{"display_html":"<a href=\"#v:i64\">i64</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"i64","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:i64"},{"display_html":"<a href=\"#v:i128\">i128</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"i128","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:i128"},{"display_html":"<a href=\"#v:ptr\">ptr</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"ptr","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:ptr"},{"display_html":"<a href=\"#v:half\">half</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"half","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:half"},{"display_html":"<a href=\"#v:float\">float</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"float","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:float"},{"display_html":"<a href=\"#v:double\">double</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"double","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:double"},{"display_html":"<a href=\"#v:fp128\">fp128</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"fp128","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:fp128"},{"display_html":"<a href=\"#v:x86_fp80\">x86_fp80</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"x86_fp80","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:x86_fp80"},{"display_html":"<a href=\"#v:ppc_fp128\">ppc_fp128</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"ppc_fp128","module":"LLVM.AST.Type","link":"LLVM-AST-Type.html#v:ppc_fp128"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Dialect\">Dialect</a><ul class=\"subs\"><li>= <a href=\"#v:ATTDialect\">ATTDialect</a></li><li>| <a href=\"#v:IntelDialect\">IntelDialect</a></li></ul>","name":"Dialect IntelDialect ATTDialect","module":"LLVM.AST.InlineAssembly","link":"LLVM-AST-InlineAssembly.html#t:Dialect"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:InlineAssembly\">InlineAssembly</a> = <a href=\"#v:InlineAssembly\">InlineAssembly</a> {<ul class=\"subs\"><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:assembly\">assembly</a> :: <a href=\"LLVM-Prelude.html#t:ByteString\" title=\"LLVM.Prelude\">ByteString</a></li><li><a href=\"#v:constraints\">constraints</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:hasSideEffects\">hasSideEffects</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:alignStack\">alignStack</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:dialect\">dialect</a> :: <a href=\"LLVM-AST-InlineAssembly.html#t:Dialect\" title=\"LLVM.AST.InlineAssembly\">Dialect</a></li></ul>}","name":"InlineAssembly InlineAssembly dialect alignStack hasSideEffects assembly type' constraints","module":"LLVM.AST.InlineAssembly","link":"LLVM-AST-InlineAssembly.html#t:InlineAssembly"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Constant\">Constant</a><ul class=\"subs\"><li>= <a href=\"#v:Int\">Int</a> { <ul class=\"subs\"><li><a href=\"#v:integerBits\">integerBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:integerValue\">integerValue</a> :: <a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a></li></ul> }</li><li>| <a href=\"#v:Float\">Float</a> { <ul class=\"subs\"><li><a href=\"#v:floatValue\">floatValue</a> :: <a href=\"LLVM-AST-Float.html#t:SomeFloat\" title=\"LLVM.AST.Float\">SomeFloat</a></li></ul> }</li><li>| <a href=\"#v:Null\">Null</a> { <ul class=\"subs\"><li><a href=\"#v:constantType\">constantType</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:AggregateZero\">AggregateZero</a> { <ul class=\"subs\"><li><a href=\"#v:constantType\">constantType</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:Struct\">Struct</a> { <ul class=\"subs\"><li><a href=\"#v:structName\">structName</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:isPacked\">isPacked</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:memberValues\">memberValues</a> :: [<a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a>]</li></ul> }</li><li>| <a href=\"#v:Array\">Array</a> { <ul class=\"subs\"><li><a href=\"#v:memberType\">memberType</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:memberValues\">memberValues</a> :: [<a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a>]</li></ul> }</li><li>| <a href=\"#v:Vector\">Vector</a> { <ul class=\"subs\"><li><a href=\"#v:memberValues\">memberValues</a> :: [<a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a>]</li></ul> }</li><li>| <a href=\"#v:Undef\">Undef</a> { <ul class=\"subs\"><li><a href=\"#v:constantType\">constantType</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:BlockAddress\">BlockAddress</a> { <ul class=\"subs\"><li><a href=\"#v:blockAddressFunction\">blockAddressFunction</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:blockAddressBlock\">blockAddressBlock</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li></ul> }</li><li>| <a href=\"#v:GlobalReference\">GlobalReference</a> <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li>| <a href=\"#v:TokenNone\">TokenNone</a></li><li>| <a href=\"#v:Add\">Add</a> { <ul class=\"subs\"><li><a href=\"#v:nsw\">nsw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:nuw\">nuw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:FAdd\">FAdd</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:Sub\">Sub</a> { <ul class=\"subs\"><li><a href=\"#v:nsw\">nsw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:nuw\">nuw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:FSub\">FSub</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:Mul\">Mul</a> { <ul class=\"subs\"><li><a href=\"#v:nsw\">nsw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:nuw\">nuw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:FMul\">FMul</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:UDiv\">UDiv</a> { <ul class=\"subs\"><li><a href=\"#v:exact\">exact</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:SDiv\">SDiv</a> { <ul class=\"subs\"><li><a href=\"#v:exact\">exact</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:FDiv\">FDiv</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:URem\">URem</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:SRem\">SRem</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:FRem\">FRem</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:Shl\">Shl</a> { <ul class=\"subs\"><li><a href=\"#v:nsw\">nsw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:nuw\">nuw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:LShr\">LShr</a> { <ul class=\"subs\"><li><a href=\"#v:exact\">exact</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:AShr\">AShr</a> { <ul class=\"subs\"><li><a href=\"#v:exact\">exact</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:And\">And</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:Or\">Or</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:Xor\">Xor</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:GetElementPtr\">GetElementPtr</a> { <ul class=\"subs\"><li><a href=\"#v:inBounds\">inBounds</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:address\">address</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:indices\">indices</a> :: [<a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a>]</li></ul> }</li><li>| <a href=\"#v:Trunc\">Trunc</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:ZExt\">ZExt</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:SExt\">SExt</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:FPToUI\">FPToUI</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:FPToSI\">FPToSI</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:UIToFP\">UIToFP</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:SIToFP\">SIToFP</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:FPTrunc\">FPTrunc</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:FPExt\">FPExt</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:PtrToInt\">PtrToInt</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:IntToPtr\">IntToPtr</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:BitCast\">BitCast</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:AddrSpaceCast\">AddrSpaceCast</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul> }</li><li>| <a href=\"#v:ICmp\">ICmp</a> { <ul class=\"subs\"><li><a href=\"#v:iPredicate\">iPredicate</a> :: <a href=\"LLVM-AST-IntegerPredicate.html#t:IntegerPredicate\" title=\"LLVM.AST.IntegerPredicate\">IntegerPredicate</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:FCmp\">FCmp</a> { <ul class=\"subs\"><li><a href=\"#v:fpPredicate\">fpPredicate</a> :: <a href=\"LLVM-AST-FloatingPointPredicate.html#t:FloatingPointPredicate\" title=\"LLVM.AST.FloatingPointPredicate\">FloatingPointPredicate</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:Select\">Select</a> { <ul class=\"subs\"><li><a href=\"#v:condition-39-\">condition'</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:trueValue\">trueValue</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:falseValue\">falseValue</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:ExtractElement\">ExtractElement</a> { <ul class=\"subs\"><li><a href=\"#v:vector\">vector</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:index\">index</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:InsertElement\">InsertElement</a> { <ul class=\"subs\"><li><a href=\"#v:vector\">vector</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:element\">element</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:index\">index</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:ShuffleVector\">ShuffleVector</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:mask\">mask</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:ExtractValue\">ExtractValue</a> { <ul class=\"subs\"><li><a href=\"#v:aggregate\">aggregate</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:indices-39-\">indices'</a> :: [<a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>]</li></ul> }</li><li>| <a href=\"#v:InsertValue\">InsertValue</a> { <ul class=\"subs\"><li><a href=\"#v:aggregate\">aggregate</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:element\">element</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:indices-39-\">indices'</a> :: [<a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>]</li></ul> }</li></ul>","name":"Constant InsertValue ExtractValue ShuffleVector InsertElement ExtractElement AddrSpaceCast BitCast IntToPtr PtrToInt FPExt FPTrunc SIToFP UIToFP FPToSI FPToUI SExt ZExt Trunc GetElementPtr AShr LShr Shl FRem SRem URem FDiv SDiv UDiv FMul Mul FSub FAdd TokenNone GlobalReference BlockAddress Undef Vector Struct AggregateZero Null FCmp ICmp Xor Or And Sub Add Select Float Int Array indices' aggregate element vector falseValue trueValue condition' fpPredicate iPredicate address inBounds exact operand1 operand0 nuw nsw blockAddressBlock blockAddressFunction memberType memberValues structName constantType floatValue integerValue integerBits type' isPacked mask index indices","module":"LLVM.AST.Constant","link":"LLVM-AST-Constant.html#t:Constant"},{"display_html":"<a href=\"#v:signedIntegerValue\">signedIntegerValue</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a> -&gt; <a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a>","name":"signedIntegerValue","module":"LLVM.AST.Constant","link":"LLVM-AST-Constant.html#v:signedIntegerValue"},{"display_html":"<a href=\"#v:unsignedIntegerValue\">unsignedIntegerValue</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a> -&gt; <a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a>","name":"unsignedIntegerValue","module":"LLVM.AST.Constant","link":"LLVM-AST-Constant.html#v:unsignedIntegerValue"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DILocalVariable\">DILocalVariable</a> = <a href=\"#v:LocalVariable\">LocalVariable</a> {<ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIScope\" title=\"LLVM.AST.Operand\">DIScope</a></li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a>)</li><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li><li><a href=\"#v:flags\">flags</a> :: [<a href=\"LLVM-AST-Operand.html#t:DIFlag\" title=\"LLVM.AST.Operand\">DIFlag</a>]</li><li><a href=\"#v:arg\">arg</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word16\" title=\"Data.Word\">Word16</a></li><li><a href=\"#v:alignInBits\">alignInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li></ul>}","name":"DILocalVariable LocalVariable $sel:name:LocalVariable $sel:file:LocalVariable $sel:arg:LocalVariable $sel:type':LocalVariable $sel:line:LocalVariable $sel:scope:LocalVariable $sel:flags:LocalVariable $sel:alignInBits:LocalVariable","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DILocalVariable"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIGlobalVariable\">DIGlobalVariable</a> = <a href=\"#v:GlobalVariable\">GlobalVariable</a> {<ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIScope\" title=\"LLVM.AST.Operand\">DIScope</a>)</li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a>)</li><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li><li><a href=\"#v:linkageName\">linkageName</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:local\">local</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:definition\">definition</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:staticDataMemberDeclaration\">staticDataMemberDeclaration</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIDerivedType\" title=\"LLVM.AST.Operand\">DIDerivedType</a>)</li><li><a href=\"#v:templateParams\">templateParams</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DITemplateParameter\" title=\"LLVM.AST.Operand\">DITemplateParameter</a>]</li><li><a href=\"#v:alignInBits\">alignInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li></ul>}","name":"DIGlobalVariable GlobalVariable $sel:local:GlobalVariable $sel:name:GlobalVariable $sel:file:GlobalVariable $sel:type':GlobalVariable $sel:line:GlobalVariable $sel:scope:GlobalVariable $sel:linkageName:GlobalVariable $sel:definition:GlobalVariable $sel:templateParams:GlobalVariable $sel:alignInBits:GlobalVariable $sel:staticDataMemberDeclaration:GlobalVariable","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIGlobalVariable"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIVariable\">DIVariable</a><ul class=\"subs\"><li>= <a href=\"#v:DIGlobalVariable\">DIGlobalVariable</a> <a href=\"LLVM-AST-Operand.html#t:DIGlobalVariable\" title=\"LLVM.AST.Operand\">DIGlobalVariable</a></li><li>| <a href=\"#v:DILocalVariable\">DILocalVariable</a> <a href=\"LLVM-AST-Operand.html#t:DILocalVariable\" title=\"LLVM.AST.Operand\">DILocalVariable</a></li></ul>","name":"DIVariable DIGlobalVariable DILocalVariable","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIVariable"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DILexicalBlockBase\">DILexicalBlockBase</a><ul class=\"subs\"><li>= <a href=\"#v:DILexicalBlock\">DILexicalBlock</a> { <ul class=\"subs\"><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DILocalScope\" title=\"LLVM.AST.Operand\">DILocalScope</a></li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a>)</li><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:column\">column</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word16\" title=\"Data.Word\">Word16</a></li></ul> }</li><li>| <a href=\"#v:DILexicalBlockFile\">DILexicalBlockFile</a> { <ul class=\"subs\"><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DILocalScope\" title=\"LLVM.AST.Operand\">DILocalScope</a></li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a>)</li><li><a href=\"#v:discriminator\">discriminator</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li></ul> }</li></ul>","name":"DILexicalBlockBase DILexicalBlock DILexicalBlockFile $sel:file:DILexicalBlock $sel:line:DILexicalBlock $sel:column:DILexicalBlock $sel:scope:DILexicalBlock $sel:discriminator:DILexicalBlock","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DILexicalBlockBase"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DITemplateParameter\">DITemplateParameter</a><ul class=\"subs\"><li>= <a href=\"#v:DITemplateTypeParameter\">DITemplateTypeParameter</a> { <ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li></ul> }</li><li>| <a href=\"#v:DITemplateValueParameter\">DITemplateValueParameter</a> { <ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li><li><a href=\"#v:value\">value</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Operand.html#t:Metadata\" title=\"LLVM.AST.Operand\">Metadata</a></li><li><a href=\"#v:tag\">tag</a> :: <a href=\"LLVM-AST-Operand.html#t:TemplateValueParameterTag\" title=\"LLVM.AST.Operand\">TemplateValueParameterTag</a></li></ul> }</li></ul>","name":"DITemplateParameter DITemplateTypeParameter DITemplateValueParameter $sel:value:DITemplateTypeParameter $sel:name:DITemplateTypeParameter $sel:type':DITemplateTypeParameter $sel:tag:DITemplateTypeParameter","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DITemplateParameter"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TemplateValueParameterTag\">TemplateValueParameterTag</a><ul class=\"subs\"><li>= <a href=\"#v:TemplateValueParameter\">TemplateValueParameter</a></li><li>| <a href=\"#v:GNUTemplateTemplateParam\">GNUTemplateTemplateParam</a></li><li>| <a href=\"#v:GNUTemplateParameterPack\">GNUTemplateParameterPack</a></li></ul>","name":"TemplateValueParameterTag TemplateValueParameter GNUTemplateTemplateParam GNUTemplateParameterPack","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:TemplateValueParameterTag"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Encoding\">Encoding</a><ul class=\"subs\"><li>= <a href=\"#v:AddressEncoding\">AddressEncoding</a></li><li>| <a href=\"#v:BooleanEncoding\">BooleanEncoding</a></li><li>| <a href=\"#v:FloatEncoding\">FloatEncoding</a></li><li>| <a href=\"#v:SignedEncoding\">SignedEncoding</a></li><li>| <a href=\"#v:SignedCharEncoding\">SignedCharEncoding</a></li><li>| <a href=\"#v:UnsignedEncoding\">UnsignedEncoding</a></li><li>| <a href=\"#v:UnsignedCharEncoding\">UnsignedCharEncoding</a></li><li>| <a href=\"#v:UTFEncoding\">UTFEncoding</a></li></ul>","name":"Encoding AddressEncoding BooleanEncoding FloatEncoding SignedEncoding SignedCharEncoding UnsignedEncoding UnsignedCharEncoding UTFEncoding","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:Encoding"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DICompositeType\">DICompositeType</a><ul class=\"subs\"><li>= <a href=\"#v:DIArrayType\">DIArrayType</a> { <ul class=\"subs\"><li><a href=\"#v:subscripts\">subscripts</a> :: [<a href=\"LLVM-AST-Operand.html#t:DISubrange\" title=\"LLVM.AST.Operand\">DISubrange</a>]</li><li><a href=\"#v:elementTy\">elementTy</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li><li><a href=\"#v:sizeInBits\">sizeInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:alignInBits\">alignInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:flags\">flags</a> :: [<a href=\"LLVM-AST-Operand.html#t:DIFlag\" title=\"LLVM.AST.Operand\">DIFlag</a>]</li></ul> }</li><li>| <a href=\"#v:DIClassType\">DIClassType</a> { <ul class=\"subs\"><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIScope\" title=\"LLVM.AST.Operand\">DIScope</a>)</li><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a>)</li><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:flags\">flags</a> :: [<a href=\"LLVM-AST-Operand.html#t:DIFlag\" title=\"LLVM.AST.Operand\">DIFlag</a>]</li><li><a href=\"#v:derivedFrom\">derivedFrom</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li><li><a href=\"#v:elements\">elements</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> (<a href=\"LLVM-Prelude.html#t:Either\" title=\"LLVM.Prelude\">Either</a> <a href=\"LLVM-AST-Operand.html#t:DIDerivedType\" title=\"LLVM.AST.Operand\">DIDerivedType</a> <a href=\"LLVM-AST-Operand.html#t:DISubprogram\" title=\"LLVM.AST.Operand\">DISubprogram</a>)]</li><li><a href=\"#v:vtableHolder\">vtableHolder</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li><li><a href=\"#v:templateParams\">templateParams</a> :: [<a href=\"LLVM-AST-Operand.html#t:DITemplateParameter\" title=\"LLVM.AST.Operand\">DITemplateParameter</a>]</li><li><a href=\"#v:identifier\">identifier</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:sizeInBits\">sizeInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:alignInBits\">alignInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li></ul> }</li><li>| <a href=\"#v:DIEnumerationType\">DIEnumerationType</a> { <ul class=\"subs\"><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIScope\" title=\"LLVM.AST.Operand\">DIScope</a>)</li><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a>)</li><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:values\">values</a> :: [<a href=\"LLVM-AST-Operand.html#t:DIEnumerator\" title=\"LLVM.AST.Operand\">DIEnumerator</a>]</li><li><a href=\"#v:baseType\">baseType</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li><li><a href=\"#v:identifier\">identifier</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:sizeInBits\">sizeInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:alignInBits\">alignInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li></ul> }</li><li>| <a href=\"#v:DIStructureType\">DIStructureType</a> { <ul class=\"subs\"><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIScope\" title=\"LLVM.AST.Operand\">DIScope</a>)</li><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a>)</li><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:flags\">flags</a> :: [<a href=\"LLVM-AST-Operand.html#t:DIFlag\" title=\"LLVM.AST.Operand\">DIFlag</a>]</li><li><a href=\"#v:derivedFrom\">derivedFrom</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li><li><a href=\"#v:elements\">elements</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> (<a href=\"LLVM-Prelude.html#t:Either\" title=\"LLVM.Prelude\">Either</a> <a href=\"LLVM-AST-Operand.html#t:DIDerivedType\" title=\"LLVM.AST.Operand\">DIDerivedType</a> <a href=\"LLVM-AST-Operand.html#t:DISubprogram\" title=\"LLVM.AST.Operand\">DISubprogram</a>)]</li><li><a href=\"#v:runtimeLang\">runtimeLang</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word16\" title=\"Data.Word\">Word16</a></li><li><a href=\"#v:vtableHolder\">vtableHolder</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li><li><a href=\"#v:identifier\">identifier</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:sizeInBits\">sizeInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:alignInBits\">alignInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li></ul> }</li><li>| <a href=\"#v:DIUnionType\">DIUnionType</a> { <ul class=\"subs\"><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIScope\" title=\"LLVM.AST.Operand\">DIScope</a>)</li><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a>)</li><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:flags\">flags</a> :: [<a href=\"LLVM-AST-Operand.html#t:DIFlag\" title=\"LLVM.AST.Operand\">DIFlag</a>]</li><li><a href=\"#v:elements\">elements</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> (<a href=\"LLVM-Prelude.html#t:Either\" title=\"LLVM.Prelude\">Either</a> <a href=\"LLVM-AST-Operand.html#t:DIDerivedType\" title=\"LLVM.AST.Operand\">DIDerivedType</a> <a href=\"LLVM-AST-Operand.html#t:DISubprogram\" title=\"LLVM.AST.Operand\">DISubprogram</a>)]</li><li><a href=\"#v:runtimeLang\">runtimeLang</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word16\" title=\"Data.Word\">Word16</a></li><li><a href=\"#v:identifier\">identifier</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:sizeInBits\">sizeInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:alignInBits\">alignInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li></ul> }</li></ul>","name":"DICompositeType DIArrayType DIClassType DIEnumerationType DIStructureType DIUnionType $sel:name:DIArrayType $sel:file:DIArrayType $sel:line:DIArrayType $sel:scope:DIArrayType $sel:elements:DIArrayType $sel:flags:DIArrayType $sel:templateParams:DIArrayType $sel:sizeInBits:DIArrayType $sel:alignInBits:DIArrayType $sel:baseType:DIArrayType $sel:subscripts:DIArrayType $sel:elementTy:DIArrayType $sel:derivedFrom:DIArrayType $sel:vtableHolder:DIArrayType $sel:identifier:DIArrayType $sel:values:DIArrayType $sel:runtimeLang:DIArrayType","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DICompositeType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIDerivedType\">DIDerivedType</a> = <a href=\"#v:DerivedType\">DerivedType</a> {<ul class=\"subs\"><li><a href=\"#v:tag\">tag</a> :: <a href=\"LLVM-AST-Operand.html#t:DerivedTypeTag\" title=\"LLVM.AST.Operand\">DerivedTypeTag</a></li><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a>)</li><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIScope\" title=\"LLVM.AST.Operand\">DIScope</a>)</li><li><a href=\"#v:baseType\">baseType</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li><li><a href=\"#v:sizeInBits\">sizeInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:alignInBits\">alignInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:offsetInBits\">offsetInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:addressSpace\">addressSpace</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:flags\">flags</a> :: [<a href=\"LLVM-AST-Operand.html#t:DIFlag\" title=\"LLVM.AST.Operand\">DIFlag</a>]</li></ul>}","name":"DIDerivedType DerivedType $sel:name:DerivedType $sel:file:DerivedType $sel:line:DerivedType $sel:scope:DerivedType $sel:tag:DerivedType $sel:flags:DerivedType $sel:sizeInBits:DerivedType $sel:alignInBits:DerivedType $sel:baseType:DerivedType $sel:offsetInBits:DerivedType $sel:addressSpace:DerivedType","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIDerivedType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DerivedTypeTag\">DerivedTypeTag</a><ul class=\"subs\"><li>= <a href=\"#v:Typedef\">Typedef</a></li><li>| <a href=\"#v:PointerType\">PointerType</a></li><li>| <a href=\"#v:PtrToMemberType\">PtrToMemberType</a></li><li>| <a href=\"#v:ReferenceType\">ReferenceType</a></li><li>| <a href=\"#v:RValueReferenceType\">RValueReferenceType</a></li><li>| <a href=\"#v:ConstType\">ConstType</a></li><li>| <a href=\"#v:VolatileType\">VolatileType</a></li><li>| <a href=\"#v:RestrictType\">RestrictType</a></li><li>| <a href=\"#v:AtomicType\">AtomicType</a></li><li>| <a href=\"#v:Member\">Member</a></li><li>| <a href=\"#v:Inheritance\">Inheritance</a></li><li>| <a href=\"#v:Friend\">Friend</a></li></ul>","name":"DerivedTypeTag PointerType Typedef PtrToMemberType ReferenceType RValueReferenceType ConstType VolatileType RestrictType AtomicType Member Inheritance Friend","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DerivedTypeTag"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DISubroutineType\">DISubroutineType</a> = <a href=\"#v:SubroutineType\">SubroutineType</a> {<ul class=\"subs\"><li><a href=\"#v:flags\">flags</a> :: [<a href=\"LLVM-AST-Operand.html#t:DIFlag\" title=\"LLVM.AST.Operand\">DIFlag</a>]</li><li><a href=\"#v:cc\">cc</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word8\" title=\"Data.Word\">Word8</a></li><li><a href=\"#v:typeArray\">typeArray</a> :: [<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)]</li></ul>}","name":"DISubroutineType SubroutineType $sel:flags:SubroutineType $sel:cc:SubroutineType $sel:typeArray:SubroutineType","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DISubroutineType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIBasicType\">DIBasicType</a> = <a href=\"#v:BasicType\">BasicType</a> {<ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:sizeInBits\">sizeInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:alignInBits\">alignInBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:encoding\">encoding</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Operand.html#t:Encoding\" title=\"LLVM.AST.Operand\">Encoding</a></li><li><a href=\"#v:tag\">tag</a> :: <a href=\"LLVM-AST-Operand.html#t:BasicTypeTag\" title=\"LLVM.AST.Operand\">BasicTypeTag</a></li><li><a href=\"#v:flags\">flags</a> :: [<a href=\"LLVM-AST-Operand.html#t:DIFlag\" title=\"LLVM.AST.Operand\">DIFlag</a>]</li></ul>}","name":"DIBasicType BasicType $sel:name:BasicType $sel:tag:BasicType $sel:flags:BasicType $sel:sizeInBits:BasicType $sel:alignInBits:BasicType $sel:encoding:BasicType","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIBasicType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIType\">DIType</a><ul class=\"subs\"><li>= <a href=\"#v:DIBasicType\">DIBasicType</a> <a href=\"LLVM-AST-Operand.html#t:DIBasicType\" title=\"LLVM.AST.Operand\">DIBasicType</a></li><li>| <a href=\"#v:DICompositeType\">DICompositeType</a> <a href=\"LLVM-AST-Operand.html#t:DICompositeType\" title=\"LLVM.AST.Operand\">DICompositeType</a></li><li>| <a href=\"#v:DIDerivedType\">DIDerivedType</a> <a href=\"LLVM-AST-Operand.html#t:DIDerivedType\" title=\"LLVM.AST.Operand\">DIDerivedType</a></li><li>| <a href=\"#v:DISubroutineType\">DISubroutineType</a> <a href=\"LLVM-AST-Operand.html#t:DISubroutineType\" title=\"LLVM.AST.Operand\">DISubroutineType</a></li></ul>","name":"DIType DICompositeType DISubroutineType DIBasicType DIDerivedType","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BasicTypeTag\">BasicTypeTag</a><ul class=\"subs\"><li>= <a href=\"#v:BaseType\">BaseType</a></li><li>| <a href=\"#v:UnspecifiedType\">UnspecifiedType</a></li></ul>","name":"BasicTypeTag BaseType UnspecifiedType","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:BasicTypeTag"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Virtuality\">Virtuality</a><ul class=\"subs\"><li>= <a href=\"#v:NoVirtuality\">NoVirtuality</a></li><li>| <a href=\"#v:Virtual\">Virtual</a></li><li>| <a href=\"#v:PureVirtual\">PureVirtual</a></li></ul>","name":"Virtuality NoVirtuality Virtual PureVirtual","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:Virtuality"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DISubprogram\">DISubprogram</a> = <a href=\"#v:Subprogram\">Subprogram</a> {<ul class=\"subs\"><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIScope\" title=\"LLVM.AST.Operand\">DIScope</a>)</li><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:linkageName\">linkageName</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a>)</li><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DISubroutineType\" title=\"LLVM.AST.Operand\">DISubroutineType</a>)</li><li><a href=\"#v:localToUnit\">localToUnit</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:definition\">definition</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:scopeLine\">scopeLine</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:containingType\">containingType</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li><li><a href=\"#v:virtuality\">virtuality</a> :: <a href=\"LLVM-AST-Operand.html#t:Virtuality\" title=\"LLVM.AST.Operand\">Virtuality</a></li><li><a href=\"#v:virtualityIndex\">virtualityIndex</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:thisAdjustment\">thisAdjustment</a> :: <a href=\"../base-4.12.0.0/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a></li><li><a href=\"#v:flags\">flags</a> :: [<a href=\"LLVM-AST-Operand.html#t:DIFlag\" title=\"LLVM.AST.Operand\">DIFlag</a>]</li><li><a href=\"#v:optimized\">optimized</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:unit\">unit</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DICompileUnit\" title=\"LLVM.AST.Operand\">DICompileUnit</a>)</li><li><a href=\"#v:templateParams\">templateParams</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DITemplateParameter\" title=\"LLVM.AST.Operand\">DITemplateParameter</a>]</li><li><a href=\"#v:declaration\">declaration</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DISubprogram\" title=\"LLVM.AST.Operand\">DISubprogram</a>)</li><li><a href=\"#v:retainedNodes\">retainedNodes</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DILocalVariable\" title=\"LLVM.AST.Operand\">DILocalVariable</a>]</li><li><a href=\"#v:thrownTypes\">thrownTypes</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>]</li></ul>}","name":"DISubprogram Subprogram $sel:unit:Subprogram $sel:name:Subprogram $sel:file:Subprogram $sel:type':Subprogram $sel:line:Subprogram $sel:scope:Subprogram $sel:optimized:Subprogram $sel:flags:Subprogram $sel:linkageName:Subprogram $sel:localToUnit:Subprogram $sel:definition:Subprogram $sel:scopeLine:Subprogram $sel:containingType:Subprogram $sel:virtuality:Subprogram $sel:virtualityIndex:Subprogram $sel:thisAdjustment:Subprogram $sel:templateParams:Subprogram $sel:declaration:Subprogram $sel:retainedNodes:Subprogram $sel:thrownTypes:Subprogram","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DISubprogram"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DILocalScope\">DILocalScope</a><ul class=\"subs\"><li>= <a href=\"#v:DILexicalBlockBase\">DILexicalBlockBase</a> <a href=\"LLVM-AST-Operand.html#t:DILexicalBlockBase\" title=\"LLVM.AST.Operand\">DILexicalBlockBase</a></li><li>| <a href=\"#v:DISubprogram\">DISubprogram</a> <a href=\"LLVM-AST-Operand.html#t:DISubprogram\" title=\"LLVM.AST.Operand\">DISubprogram</a></li></ul>","name":"DILocalScope DISubprogram DILexicalBlockBase","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DILocalScope"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ChecksumKind\">ChecksumKind</a><ul class=\"subs\"><li>= <a href=\"#v:MD5\">MD5</a></li><li>| <a href=\"#v:SHA1\">SHA1</a></li></ul>","name":"ChecksumKind MD5 SHA1","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:ChecksumKind"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ChecksumInfo\">ChecksumInfo</a> = <a href=\"#v:ChecksumInfo\">ChecksumInfo</a> {<ul class=\"subs\"><li><a href=\"#v:checksumKind\">checksumKind</a> :: <a href=\"LLVM-AST-Operand.html#t:ChecksumKind\" title=\"LLVM.AST.Operand\">ChecksumKind</a></li><li><a href=\"#v:checksumValue\">checksumValue</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li></ul>}","name":"ChecksumInfo ChecksumInfo $sel:checksumKind:ChecksumInfo $sel:checksumValue:ChecksumInfo","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:ChecksumInfo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIFile\">DIFile</a> = <a href=\"#v:File\">File</a> {<ul class=\"subs\"><li><a href=\"#v:filename\">filename</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:directory\">directory</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:checksum\">checksum</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Operand.html#t:ChecksumInfo\" title=\"LLVM.AST.Operand\">ChecksumInfo</a></li></ul>}","name":"DIFile File $sel:directory:File $sel:filename:File $sel:checksum:File","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIFile"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DICompileUnit\">DICompileUnit</a> = <a href=\"#v:CompileUnit\">CompileUnit</a> {<ul class=\"subs\"><li><a href=\"#v:language\">language</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a></li><li><a href=\"#v:producer\">producer</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:optimized\">optimized</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:flags\">flags</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:runtimeVersion\">runtimeVersion</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:splitDebugFileName\">splitDebugFileName</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:emissionKind\">emissionKind</a> :: <a href=\"LLVM-AST-Operand.html#t:DebugEmissionKind\" title=\"LLVM.AST.Operand\">DebugEmissionKind</a></li><li><a href=\"#v:enums\">enums</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DICompositeType\" title=\"LLVM.AST.Operand\">DICompositeType</a>]</li><li><a href=\"#v:retainedTypes\">retainedTypes</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> (<a href=\"LLVM-Prelude.html#t:Either\" title=\"LLVM.Prelude\">Either</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a> <a href=\"LLVM-AST-Operand.html#t:DISubprogram\" title=\"LLVM.AST.Operand\">DISubprogram</a>)]</li><li><a href=\"#v:globals\">globals</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIGlobalVariableExpression\" title=\"LLVM.AST.Operand\">DIGlobalVariableExpression</a>]</li><li><a href=\"#v:imports\">imports</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIImportedEntity\" title=\"LLVM.AST.Operand\">DIImportedEntity</a>]</li><li><a href=\"#v:macros\">macros</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIMacroNode\" title=\"LLVM.AST.Operand\">DIMacroNode</a>]</li><li><a href=\"#v:dWOId\">dWOId</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:splitDebugInlining\">splitDebugInlining</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:debugInfoForProfiling\">debugInfoForProfiling</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:nameTableKind\">nameTableKind</a> :: <a href=\"LLVM-AST-Operand.html#t:DebugNameTableKind\" title=\"LLVM.AST.Operand\">DebugNameTableKind</a></li><li><a href=\"#v:debugBaseAddress\">debugBaseAddress</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li></ul>}","name":"DICompileUnit CompileUnit $sel:file:CompileUnit $sel:language:CompileUnit $sel:producer:CompileUnit $sel:optimized:CompileUnit $sel:flags:CompileUnit $sel:runtimeVersion:CompileUnit $sel:splitDebugFileName:CompileUnit $sel:emissionKind:CompileUnit $sel:enums:CompileUnit $sel:retainedTypes:CompileUnit $sel:globals:CompileUnit $sel:imports:CompileUnit $sel:macros:CompileUnit $sel:dWOId:CompileUnit $sel:splitDebugInlining:CompileUnit $sel:debugInfoForProfiling:CompileUnit $sel:nameTableKind:CompileUnit $sel:debugBaseAddress:CompileUnit","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DICompileUnit"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DebugNameTableKind\">DebugNameTableKind</a><ul class=\"subs\"><li>= <a href=\"#v:NameTableKindDefault\">NameTableKindDefault</a></li><li>| <a href=\"#v:NameTableKindGNU\">NameTableKindGNU</a></li><li>| <a href=\"#v:NameTableKindNone\">NameTableKindNone</a></li></ul>","name":"DebugNameTableKind NameTableKindDefault NameTableKindGNU NameTableKindNone","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DebugNameTableKind"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DebugEmissionKind\">DebugEmissionKind</a><ul class=\"subs\"><li>= <a href=\"#v:NoDebug\">NoDebug</a></li><li>| <a href=\"#v:FullDebug\">FullDebug</a></li><li>| <a href=\"#v:LineTablesOnly\">LineTablesOnly</a></li></ul>","name":"DebugEmissionKind NoDebug FullDebug LineTablesOnly","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DebugEmissionKind"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DINamespace\">DINamespace</a> = <a href=\"#v:Namespace\">Namespace</a> {<ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIScope\" title=\"LLVM.AST.Operand\">DIScope</a>)</li><li><a href=\"#v:exportSymbols\">exportSymbols</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li></ul>}","name":"DINamespace Namespace $sel:name:Namespace $sel:scope:Namespace $sel:exportSymbols:Namespace","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DINamespace"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIModule\">DIModule</a> = <a href=\"#v:Module\">Module</a> {<ul class=\"subs\"><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIScope\" title=\"LLVM.AST.Operand\">DIScope</a>)</li><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:configurationMacros\">configurationMacros</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:includePath\">includePath</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:isysRoot\">isysRoot</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li></ul>}","name":"DIModule Module $sel:name:Module $sel:scope:Module $sel:configurationMacros:Module $sel:includePath:Module $sel:isysRoot:Module","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIModule"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIScope\">DIScope</a><ul class=\"subs\"><li>= <a href=\"#v:DICompileUnit\">DICompileUnit</a> <a href=\"LLVM-AST-Operand.html#t:DICompileUnit\" title=\"LLVM.AST.Operand\">DICompileUnit</a></li><li>| <a href=\"#v:DIFile\">DIFile</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a></li><li>| <a href=\"#v:DILocalScope\">DILocalScope</a> <a href=\"LLVM-AST-Operand.html#t:DILocalScope\" title=\"LLVM.AST.Operand\">DILocalScope</a></li><li>| <a href=\"#v:DIModule\">DIModule</a> <a href=\"LLVM-AST-Operand.html#t:DIModule\" title=\"LLVM.AST.Operand\">DIModule</a></li><li>| <a href=\"#v:DINamespace\">DINamespace</a> <a href=\"LLVM-AST-Operand.html#t:DINamespace\" title=\"LLVM.AST.Operand\">DINamespace</a></li><li>| <a href=\"#v:DIType\">DIType</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a></li></ul>","name":"DIScope DILocalScope DIFile DIType DICompileUnit DIModule DINamespace","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIScope"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DICount\">DICount</a><ul class=\"subs\"><li>= <a href=\"#v:DICountConstant\">DICountConstant</a> <a href=\"../base-4.12.0.0/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li><li>| <a href=\"#v:DICountVariable\">DICountVariable</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIVariable\" title=\"LLVM.AST.Operand\">DIVariable</a>)</li></ul>","name":"DICount DICountConstant DICountVariable","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DICount"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DISubrange\">DISubrange</a> = <a href=\"#v:Subrange\">Subrange</a> {<ul class=\"subs\"><li><a href=\"#v:count\">count</a> :: <a href=\"LLVM-AST-Operand.html#t:DICount\" title=\"LLVM.AST.Operand\">DICount</a></li><li><a href=\"#v:lowerBound\">lowerBound</a> :: <a href=\"../base-4.12.0.0/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li></ul>}","name":"DISubrange Subrange $sel:count:Subrange $sel:lowerBound:Subrange","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DISubrange"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIEnumerator\">DIEnumerator</a> = <a href=\"#v:Enumerator\">Enumerator</a> {<ul class=\"subs\"><li><a href=\"#v:value\">value</a> :: <a href=\"../base-4.12.0.0/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li><li><a href=\"#v:isUnsigned\">isUnsigned</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li></ul>}","name":"DIEnumerator Enumerator $sel:value:Enumerator $sel:name:Enumerator $sel:isUnsigned:Enumerator","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIEnumerator"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIImportedEntity\">DIImportedEntity</a> = <a href=\"#v:ImportedEntity\">ImportedEntity</a> {<ul class=\"subs\"><li><a href=\"#v:tag\">tag</a> :: <a href=\"LLVM-AST-Operand.html#t:ImportedEntityTag\" title=\"LLVM.AST.Operand\">ImportedEntityTag</a></li><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIScope\" title=\"LLVM.AST.Operand\">DIScope</a></li><li><a href=\"#v:entity\">entity</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DINode\" title=\"LLVM.AST.Operand\">DINode</a>)</li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a>)</li><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li></ul>}","name":"DIImportedEntity ImportedEntity $sel:name:ImportedEntity $sel:file:ImportedEntity $sel:line:ImportedEntity $sel:scope:ImportedEntity $sel:tag:ImportedEntity $sel:entity:ImportedEntity","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIImportedEntity"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ImportedEntityTag\">ImportedEntityTag</a><ul class=\"subs\"><li>= <a href=\"#v:ImportedModule\">ImportedModule</a></li><li>| <a href=\"#v:ImportedDeclaration\">ImportedDeclaration</a></li></ul>","name":"ImportedEntityTag ImportedModule ImportedDeclaration","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:ImportedEntityTag"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIObjCProperty\">DIObjCProperty</a> = <a href=\"#v:ObjCProperty\">ObjCProperty</a> {<ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a>)</li><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:getterName\">getterName</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:setterName\">setterName</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:attributes\">attributes</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIType\" title=\"LLVM.AST.Operand\">DIType</a>)</li></ul>}","name":"DIObjCProperty ObjCProperty $sel:name:ObjCProperty $sel:file:ObjCProperty $sel:type':ObjCProperty $sel:line:ObjCProperty $sel:getterName:ObjCProperty $sel:setterName:ObjCProperty $sel:attributes:ObjCProperty","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIObjCProperty"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DINode\">DINode</a><ul class=\"subs\"><li>= <a href=\"#v:DIEnumerator\">DIEnumerator</a> <a href=\"LLVM-AST-Operand.html#t:DIEnumerator\" title=\"LLVM.AST.Operand\">DIEnumerator</a></li><li>| <a href=\"#v:DIImportedEntity\">DIImportedEntity</a> <a href=\"LLVM-AST-Operand.html#t:DIImportedEntity\" title=\"LLVM.AST.Operand\">DIImportedEntity</a></li><li>| <a href=\"#v:DIObjCProperty\">DIObjCProperty</a> <a href=\"LLVM-AST-Operand.html#t:DIObjCProperty\" title=\"LLVM.AST.Operand\">DIObjCProperty</a></li><li>| <a href=\"#v:DIScope\">DIScope</a> <a href=\"LLVM-AST-Operand.html#t:DIScope\" title=\"LLVM.AST.Operand\">DIScope</a></li><li>| <a href=\"#v:DISubrange\">DISubrange</a> <a href=\"LLVM-AST-Operand.html#t:DISubrange\" title=\"LLVM.AST.Operand\">DISubrange</a></li><li>| <a href=\"#v:DITemplateParameter\">DITemplateParameter</a> <a href=\"LLVM-AST-Operand.html#t:DITemplateParameter\" title=\"LLVM.AST.Operand\">DITemplateParameter</a></li><li>| <a href=\"#v:DIVariable\">DIVariable</a> <a href=\"LLVM-AST-Operand.html#t:DIVariable\" title=\"LLVM.AST.Operand\">DIVariable</a></li></ul>","name":"DINode DIEnumerator DIImportedEntity DIObjCProperty DIScope DISubrange DITemplateParameter DIVariable","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DINode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIMacroNode\">DIMacroNode</a><ul class=\"subs\"><li>= <a href=\"#v:DIMacro\">DIMacro</a> { <ul class=\"subs\"><li><a href=\"#v:info\">info</a> :: <a href=\"LLVM-AST-Operand.html#t:DIMacroInfo\" title=\"LLVM.AST.Operand\">DIMacroInfo</a></li><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:value\">value</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li></ul> }</li><li>| <a href=\"#v:DIMacroFile\">DIMacroFile</a> { <ul class=\"subs\"><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:file\">file</a> :: <a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIFile\" title=\"LLVM.AST.Operand\">DIFile</a></li><li><a href=\"#v:elements\">elements</a> :: [<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIMacroNode\" title=\"LLVM.AST.Operand\">DIMacroNode</a>]</li></ul> }</li></ul>","name":"DIMacroNode DIMacro DIMacroFile $sel:value:DIMacro $sel:name:DIMacro $sel:file:DIMacro $sel:line:DIMacro $sel:info:DIMacro $sel:elements:DIMacro","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIMacroNode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIMacroInfo\">DIMacroInfo</a><ul class=\"subs\"><li>= <a href=\"#v:Define\">Define</a></li><li>| <a href=\"#v:Undef\">Undef</a></li></ul>","name":"DIMacroInfo Undef Define","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIMacroInfo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIFlag\">DIFlag</a><ul class=\"subs\"><li>= <a href=\"#v:Accessibility\">Accessibility</a> <a href=\"LLVM-AST-Operand.html#t:DIAccessibility\" title=\"LLVM.AST.Operand\">DIAccessibility</a></li><li>| <a href=\"#v:FwdDecl\">FwdDecl</a></li><li>| <a href=\"#v:AppleBlock\">AppleBlock</a></li><li>| <a href=\"#v:BlockByrefStruct\">BlockByrefStruct</a></li><li>| <a href=\"#v:VirtualFlag\">VirtualFlag</a></li><li>| <a href=\"#v:Artificial\">Artificial</a></li><li>| <a href=\"#v:Explicit\">Explicit</a></li><li>| <a href=\"#v:Prototyped\">Prototyped</a></li><li>| <a href=\"#v:ObjcClassComplete\">ObjcClassComplete</a></li><li>| <a href=\"#v:ObjectPointer\">ObjectPointer</a></li><li>| <a href=\"#v:Vector\">Vector</a></li><li>| <a href=\"#v:StaticMember\">StaticMember</a></li><li>| <a href=\"#v:LValueReference\">LValueReference</a></li><li>| <a href=\"#v:RValueReference\">RValueReference</a></li><li>| <a href=\"#v:InheritanceFlag\">InheritanceFlag</a> <a href=\"LLVM-AST-Operand.html#t:DIInheritance\" title=\"LLVM.AST.Operand\">DIInheritance</a></li><li>| <a href=\"#v:IntroducedVirtual\">IntroducedVirtual</a></li><li>| <a href=\"#v:BitField\">BitField</a></li><li>| <a href=\"#v:NoReturn\">NoReturn</a></li><li>| <a href=\"#v:MainSubprogram\">MainSubprogram</a></li></ul>","name":"DIFlag NoReturn Vector Accessibility FwdDecl AppleBlock BlockByrefStruct VirtualFlag Artificial Explicit Prototyped ObjcClassComplete ObjectPointer StaticMember LValueReference RValueReference InheritanceFlag IntroducedVirtual BitField MainSubprogram","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIFlag"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIInheritance\">DIInheritance</a><ul class=\"subs\"><li>= <a href=\"#v:SingleInheritance\">SingleInheritance</a></li><li>| <a href=\"#v:MultipleInheritance\">MultipleInheritance</a></li><li>| <a href=\"#v:VirtualInheritance\">VirtualInheritance</a></li></ul>","name":"DIInheritance SingleInheritance MultipleInheritance VirtualInheritance","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIInheritance"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIAccessibility\">DIAccessibility</a><ul class=\"subs\"><li>= <a href=\"#v:Private\">Private</a></li><li>| <a href=\"#v:Protected\">Protected</a></li><li>| <a href=\"#v:Public\">Public</a></li></ul>","name":"DIAccessibility Protected Private Public","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIAccessibility"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIGlobalVariableExpression\">DIGlobalVariableExpression</a> = <a href=\"#v:GlobalVariableExpression\">GlobalVariableExpression</a> {<ul class=\"subs\"><li><a href=\"#v:var\">var</a> :: <a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIGlobalVariable\" title=\"LLVM.AST.Operand\">DIGlobalVariable</a></li><li><a href=\"#v:expr\">expr</a> :: <a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DIExpression\" title=\"LLVM.AST.Operand\">DIExpression</a></li></ul>}","name":"DIGlobalVariableExpression GlobalVariableExpression $sel:var:GlobalVariableExpression $sel:expr:GlobalVariableExpression","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIGlobalVariableExpression"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DIExpression\">DIExpression</a> = <a href=\"#v:Expression\">Expression</a> {<ul class=\"subs\"><li><a href=\"#v:operands\">operands</a> :: [<a href=\"LLVM-AST-Operand.html#t:DWOp\" title=\"LLVM.AST.Operand\">DWOp</a>]</li></ul>}","name":"DIExpression Expression $sel:operands:Expression","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DIExpression"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DILocation\">DILocation</a> = <a href=\"#v:Location\">Location</a> {<ul class=\"subs\"><li><a href=\"#v:line\">line</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:column\">column</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word16\" title=\"Data.Word\">Word16</a></li><li><a href=\"#v:scope\">scope</a> :: <a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:DILocalScope\" title=\"LLVM.AST.Operand\">DILocalScope</a></li></ul>}","name":"DILocation Location $sel:line:Location $sel:column:Location $sel:scope:Location","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DILocation"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MDNode\">MDNode</a><ul class=\"subs\"><li>= <a href=\"#v:MDTuple\">MDTuple</a> [<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Operand.html#t:Metadata\" title=\"LLVM.AST.Operand\">Metadata</a>]</li><li>| <a href=\"#v:DIExpression\">DIExpression</a> <a href=\"LLVM-AST-Operand.html#t:DIExpression\" title=\"LLVM.AST.Operand\">DIExpression</a></li><li>| <a href=\"#v:DIGlobalVariableExpression\">DIGlobalVariableExpression</a> <a href=\"LLVM-AST-Operand.html#t:DIGlobalVariableExpression\" title=\"LLVM.AST.Operand\">DIGlobalVariableExpression</a></li><li>| <a href=\"#v:DILocation\">DILocation</a> <a href=\"LLVM-AST-Operand.html#t:DILocation\" title=\"LLVM.AST.Operand\">DILocation</a></li><li>| <a href=\"#v:DIMacroNode\">DIMacroNode</a> <a href=\"LLVM-AST-Operand.html#t:DIMacroNode\" title=\"LLVM.AST.Operand\">DIMacroNode</a></li><li>| <a href=\"#v:DINode\">DINode</a> <a href=\"LLVM-AST-Operand.html#t:DINode\" title=\"LLVM.AST.Operand\">DINode</a></li></ul>","name":"MDNode MDTuple DIExpression DIGlobalVariableExpression DILocation DIMacroNode DINode","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:MDNode"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DWOp\">DWOp</a><ul class=\"subs\"><li>= <a href=\"#v:DwOpFragment\">DwOpFragment</a> <a href=\"LLVM-AST-Operand.html#t:DWOpFragment\" title=\"LLVM.AST.Operand\">DWOpFragment</a></li><li>| <a href=\"#v:DW_OP_StackValue\">DW_OP_StackValue</a></li><li>| <a href=\"#v:DW_OP_Swap\">DW_OP_Swap</a></li><li>| <a href=\"#v:DW_OP_ConstU\">DW_OP_ConstU</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li>| <a href=\"#v:DW_OP_Lit0\">DW_OP_Lit0</a></li><li>| <a href=\"#v:DW_OP_PlusUConst\">DW_OP_PlusUConst</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li>| <a href=\"#v:DW_OP_Plus\">DW_OP_Plus</a></li><li>| <a href=\"#v:DW_OP_Minus\">DW_OP_Minus</a></li><li>| <a href=\"#v:DW_OP_Mul\">DW_OP_Mul</a></li><li>| <a href=\"#v:DW_OP_Div\">DW_OP_Div</a></li><li>| <a href=\"#v:DW_OP_Mod\">DW_OP_Mod</a></li><li>| <a href=\"#v:DW_OP_Not\">DW_OP_Not</a></li><li>| <a href=\"#v:DW_OP_Or\">DW_OP_Or</a></li><li>| <a href=\"#v:DW_OP_Xor\">DW_OP_Xor</a></li><li>| <a href=\"#v:DW_OP_And\">DW_OP_And</a></li><li>| <a href=\"#v:DW_OP_Shr\">DW_OP_Shr</a></li><li>| <a href=\"#v:DW_OP_Shra\">DW_OP_Shra</a></li><li>| <a href=\"#v:DW_OP_Shl\">DW_OP_Shl</a></li><li>| <a href=\"#v:DW_OP_Dup\">DW_OP_Dup</a></li><li>| <a href=\"#v:DW_OP_Deref\">DW_OP_Deref</a></li><li>| <a href=\"#v:DW_OP_XDeref\">DW_OP_XDeref</a></li></ul>","name":"DWOp DwOpFragment DW_OP_StackValue DW_OP_Swap DW_OP_ConstU DW_OP_Lit0 DW_OP_PlusUConst DW_OP_Plus DW_OP_Minus DW_OP_Mul DW_OP_Div DW_OP_Mod DW_OP_Not DW_OP_Or DW_OP_Xor DW_OP_And DW_OP_Shr DW_OP_Shra DW_OP_Shl DW_OP_Dup DW_OP_Deref DW_OP_XDeref","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DWOp"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DWOpFragment\">DWOpFragment</a> = <a href=\"#v:DW_OP_LLVM_Fragment\">DW_OP_LLVM_Fragment</a> {<ul class=\"subs\"><li><a href=\"#v:offset\">offset</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:size\">size</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li></ul>}","name":"DWOpFragment DW_OP_LLVM_Fragment $sel:size:DW_OP_LLVM_Fragment $sel:offset:DW_OP_LLVM_Fragment","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:DWOpFragment"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MDRef\">MDRef</a> a<ul class=\"subs\"><li>= <a href=\"#v:MDRef\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:MetadataNodeID\" title=\"LLVM.AST.Operand\">MetadataNodeID</a></li><li>| <a href=\"#v:MDInline\">MDInline</a> a</li></ul>","name":"MDRef MDRef MDInline","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:MDRef"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:MetadataNodeID\">MetadataNodeID</a> = <a href=\"#v:MetadataNodeID\">MetadataNodeID</a> <a href=\"LLVM-Prelude.html#t:Word\" title=\"LLVM.Prelude\">Word</a>","name":"MetadataNodeID MetadataNodeID","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:MetadataNodeID"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Metadata\">Metadata</a><ul class=\"subs\"><li>= <a href=\"#v:MDString\">MDString</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li>| <a href=\"#v:MDNode\">MDNode</a> (<a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:MDNode\" title=\"LLVM.AST.Operand\">MDNode</a>)</li><li>| <a href=\"#v:MDValue\">MDValue</a> <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li></ul>","name":"Metadata MDNode MDString MDValue","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:Metadata"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CallableOperand\">CallableOperand</a> = <a href=\"LLVM-Prelude.html#t:Either\" title=\"LLVM.Prelude\">Either</a> <a href=\"LLVM-AST-InlineAssembly.html#t:InlineAssembly\" title=\"LLVM.AST.InlineAssembly\">InlineAssembly</a> <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"CallableOperand","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:CallableOperand"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Operand\">Operand</a><ul class=\"subs\"><li>= <a href=\"#v:LocalReference\">LocalReference</a> <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li>| <a href=\"#v:ConstantOperand\">ConstantOperand</a> <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li>| <a href=\"#v:MetadataOperand\">MetadataOperand</a> <a href=\"LLVM-AST-Operand.html#t:Metadata\" title=\"LLVM.AST.Operand\">Metadata</a></li></ul>","name":"Operand LocalReference ConstantOperand MetadataOperand","module":"LLVM.AST.Operand","link":"LLVM-AST-Operand.html#t:Operand"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:InstructionMetadata\">InstructionMetadata</a> = [(<a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a>, <a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:MDNode\" title=\"LLVM.AST.Operand\">MDNode</a>)]","name":"InstructionMetadata","module":"LLVM.AST.Instruction","link":"LLVM-AST-Instruction.html#t:InstructionMetadata"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Terminator\">Terminator</a><ul class=\"subs\"><li>= <a href=\"#v:Ret\">Ret</a> { <ul class=\"subs\"><li><a href=\"#v:returnOperand\">returnOperand</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata-39-\">metadata'</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:CondBr\">CondBr</a> { <ul class=\"subs\"><li><a href=\"#v:condition\">condition</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:trueDest\">trueDest</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:falseDest\">falseDest</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:metadata-39-\">metadata'</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Br\">Br</a> { <ul class=\"subs\"><li><a href=\"#v:dest\">dest</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:metadata-39-\">metadata'</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Switch\">Switch</a> { <ul class=\"subs\"><li><a href=\"#v:operand0-39-\">operand0'</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:defaultDest\">defaultDest</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:dests\">dests</a> :: [(<a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a>, <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a>)]</li><li><a href=\"#v:metadata-39-\">metadata'</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:IndirectBr\">IndirectBr</a> { <ul class=\"subs\"><li><a href=\"#v:operand0-39-\">operand0'</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:possibleDests\">possibleDests</a> :: [<a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a>]</li><li><a href=\"#v:metadata-39-\">metadata'</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Invoke\">Invoke</a> { <ul class=\"subs\"><li><a href=\"#v:callingConvention-39-\">callingConvention'</a> :: <a href=\"LLVM-AST-CallingConvention.html#t:CallingConvention\" title=\"LLVM.AST.CallingConvention\">CallingConvention</a></li><li><a href=\"#v:returnAttributes-39-\">returnAttributes'</a> :: [<a href=\"LLVM-AST-ParameterAttribute.html#t:ParameterAttribute\" title=\"LLVM.AST.ParameterAttribute\">ParameterAttribute</a>]</li><li><a href=\"#v:function-39-\">function'</a> :: <a href=\"LLVM-AST-Operand.html#t:CallableOperand\" title=\"LLVM.AST.Operand\">CallableOperand</a></li><li><a href=\"#v:arguments-39-\">arguments'</a> :: [(<a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>, [<a href=\"LLVM-AST-ParameterAttribute.html#t:ParameterAttribute\" title=\"LLVM.AST.ParameterAttribute\">ParameterAttribute</a>])]</li><li><a href=\"#v:functionAttributes-39-\">functionAttributes'</a> :: [<a href=\"LLVM-Prelude.html#t:Either\" title=\"LLVM.Prelude\">Either</a> <a href=\"LLVM-AST-FunctionAttribute.html#t:GroupID\" title=\"LLVM.AST.FunctionAttribute\">GroupID</a> <a href=\"LLVM-AST-FunctionAttribute.html#t:FunctionAttribute\" title=\"LLVM.AST.FunctionAttribute\">FunctionAttribute</a>]</li><li><a href=\"#v:returnDest\">returnDest</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:exceptionDest\">exceptionDest</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:metadata-39-\">metadata'</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Resume\">Resume</a> { <ul class=\"subs\"><li><a href=\"#v:operand0-39-\">operand0'</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata-39-\">metadata'</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Unreachable\">Unreachable</a> { <ul class=\"subs\"><li><a href=\"#v:metadata-39-\">metadata'</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:CleanupRet\">CleanupRet</a> { <ul class=\"subs\"><li><a href=\"#v:cleanupPad\">cleanupPad</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:unwindDest\">unwindDest</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:metadata-39-\">metadata'</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:CatchRet\">CatchRet</a> { <ul class=\"subs\"><li><a href=\"#v:catchPad\">catchPad</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:successor\">successor</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:metadata-39-\">metadata'</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:CatchSwitch\">CatchSwitch</a> { <ul class=\"subs\"><li><a href=\"#v:parentPad-39-\">parentPad'</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:catchHandlers\">catchHandlers</a> :: <a href=\"../base-4.12.0.0/Data-List-NonEmpty.html#t:NonEmpty\" title=\"Data.List.NonEmpty\">NonEmpty</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:defaultUnwindDest\">defaultUnwindDest</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:metadata-39-\">metadata'</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li></ul>","name":"Terminator CatchSwitch CatchRet CleanupRet Unreachable Resume Invoke IndirectBr Switch Br CondBr Ret defaultUnwindDest catchHandlers parentPad' successor catchPad unwindDest cleanupPad exceptionDest returnDest functionAttributes' arguments' function' returnAttributes' callingConvention' possibleDests defaultDest operand0' dest falseDest trueDest condition metadata' returnOperand dests","module":"LLVM.AST.Instruction","link":"LLVM-AST-Instruction.html#t:Terminator"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FastMathFlags\">FastMathFlags</a> = <a href=\"#v:FastMathFlags\">FastMathFlags</a> {<ul class=\"subs\"><li><a href=\"#v:allowReassoc\">allowReassoc</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:noNaNs\">noNaNs</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:noInfs\">noInfs</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:noSignedZeros\">noSignedZeros</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:allowReciprocal\">allowReciprocal</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:allowContract\">allowContract</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:approxFunc\">approxFunc</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li></ul>}","name":"FastMathFlags FastMathFlags approxFunc allowContract allowReciprocal noSignedZeros noInfs noNaNs allowReassoc","module":"LLVM.AST.Instruction","link":"LLVM-AST-Instruction.html#t:FastMathFlags"},{"display_html":"<a href=\"#v:noFastMathFlags\">noFastMathFlags</a> :: <a href=\"LLVM-AST-Instruction.html#t:FastMathFlags\" title=\"LLVM.AST.Instruction\">FastMathFlags</a>","name":"noFastMathFlags","module":"LLVM.AST.Instruction","link":"LLVM-AST-Instruction.html#v:noFastMathFlags"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MemoryOrdering\">MemoryOrdering</a><ul class=\"subs\"><li>= <a href=\"#v:Unordered\">Unordered</a></li><li>| <a href=\"#v:Monotonic\">Monotonic</a></li><li>| <a href=\"#v:Acquire\">Acquire</a></li><li>| <a href=\"#v:Release\">Release</a></li><li>| <a href=\"#v:AcquireRelease\">AcquireRelease</a></li><li>| <a href=\"#v:SequentiallyConsistent\">SequentiallyConsistent</a></li></ul>","name":"MemoryOrdering SequentiallyConsistent AcquireRelease Release Acquire Monotonic Unordered","module":"LLVM.AST.Instruction","link":"LLVM-AST-Instruction.html#t:MemoryOrdering"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SynchronizationScope\">SynchronizationScope</a><ul class=\"subs\"><li>= <a href=\"#v:SingleThread\">SingleThread</a></li><li>| <a href=\"#v:System\">System</a></li></ul>","name":"SynchronizationScope System SingleThread","module":"LLVM.AST.Instruction","link":"LLVM-AST-Instruction.html#t:SynchronizationScope"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Atomicity\">Atomicity</a> = (<a href=\"LLVM-AST-Instruction.html#t:SynchronizationScope\" title=\"LLVM.AST.Instruction\">SynchronizationScope</a>, <a href=\"LLVM-AST-Instruction.html#t:MemoryOrdering\" title=\"LLVM.AST.Instruction\">MemoryOrdering</a>)","name":"Atomicity","module":"LLVM.AST.Instruction","link":"LLVM-AST-Instruction.html#t:Atomicity"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LandingPadClause\">LandingPadClause</a><ul class=\"subs\"><li>= <a href=\"#v:Catch\">Catch</a> <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li>| <a href=\"#v:Filter\">Filter</a> <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul>","name":"LandingPadClause Filter Catch","module":"LLVM.AST.Instruction","link":"LLVM-AST-Instruction.html#t:LandingPadClause"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TailCallKind\">TailCallKind</a><ul class=\"subs\"><li>= <a href=\"#v:Tail\">Tail</a></li><li>| <a href=\"#v:MustTail\">MustTail</a></li><li>| <a href=\"#v:NoTail\">NoTail</a></li></ul>","name":"TailCallKind NoTail MustTail Tail","module":"LLVM.AST.Instruction","link":"LLVM-AST-Instruction.html#t:TailCallKind"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Instruction\">Instruction</a><ul class=\"subs\"><li>= <a href=\"#v:Add\">Add</a> { <ul class=\"subs\"><li><a href=\"#v:nsw\">nsw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:nuw\">nuw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:FAdd\">FAdd</a> { <ul class=\"subs\"><li><a href=\"#v:fastMathFlags\">fastMathFlags</a> :: <a href=\"LLVM-AST-Instruction.html#t:FastMathFlags\" title=\"LLVM.AST.Instruction\">FastMathFlags</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Sub\">Sub</a> { <ul class=\"subs\"><li><a href=\"#v:nsw\">nsw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:nuw\">nuw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:FSub\">FSub</a> { <ul class=\"subs\"><li><a href=\"#v:fastMathFlags\">fastMathFlags</a> :: <a href=\"LLVM-AST-Instruction.html#t:FastMathFlags\" title=\"LLVM.AST.Instruction\">FastMathFlags</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Mul\">Mul</a> { <ul class=\"subs\"><li><a href=\"#v:nsw\">nsw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:nuw\">nuw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:FMul\">FMul</a> { <ul class=\"subs\"><li><a href=\"#v:fastMathFlags\">fastMathFlags</a> :: <a href=\"LLVM-AST-Instruction.html#t:FastMathFlags\" title=\"LLVM.AST.Instruction\">FastMathFlags</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:UDiv\">UDiv</a> { <ul class=\"subs\"><li><a href=\"#v:exact\">exact</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:SDiv\">SDiv</a> { <ul class=\"subs\"><li><a href=\"#v:exact\">exact</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:FDiv\">FDiv</a> { <ul class=\"subs\"><li><a href=\"#v:fastMathFlags\">fastMathFlags</a> :: <a href=\"LLVM-AST-Instruction.html#t:FastMathFlags\" title=\"LLVM.AST.Instruction\">FastMathFlags</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:URem\">URem</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:SRem\">SRem</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:FRem\">FRem</a> { <ul class=\"subs\"><li><a href=\"#v:fastMathFlags\">fastMathFlags</a> :: <a href=\"LLVM-AST-Instruction.html#t:FastMathFlags\" title=\"LLVM.AST.Instruction\">FastMathFlags</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Shl\">Shl</a> { <ul class=\"subs\"><li><a href=\"#v:nsw\">nsw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:nuw\">nuw</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:LShr\">LShr</a> { <ul class=\"subs\"><li><a href=\"#v:exact\">exact</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:AShr\">AShr</a> { <ul class=\"subs\"><li><a href=\"#v:exact\">exact</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:And\">And</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Or\">Or</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Xor\">Xor</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Alloca\">Alloca</a> { <ul class=\"subs\"><li><a href=\"#v:allocatedType\">allocatedType</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:numElements\">numElements</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:alignment\">alignment</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Load\">Load</a> { <ul class=\"subs\"><li><a href=\"#v:volatile\">volatile</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:address\">address</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:maybeAtomicity\">maybeAtomicity</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Instruction.html#t:Atomicity\" title=\"LLVM.AST.Instruction\">Atomicity</a></li><li><a href=\"#v:alignment\">alignment</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Store\">Store</a> { <ul class=\"subs\"><li><a href=\"#v:volatile\">volatile</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:address\">address</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:value\">value</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:maybeAtomicity\">maybeAtomicity</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Instruction.html#t:Atomicity\" title=\"LLVM.AST.Instruction\">Atomicity</a></li><li><a href=\"#v:alignment\">alignment</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:GetElementPtr\">GetElementPtr</a> { <ul class=\"subs\"><li><a href=\"#v:inBounds\">inBounds</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:address\">address</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:indices\">indices</a> :: [<a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>]</li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Fence\">Fence</a> { <ul class=\"subs\"><li><a href=\"#v:atomicity\">atomicity</a> :: <a href=\"LLVM-AST-Instruction.html#t:Atomicity\" title=\"LLVM.AST.Instruction\">Atomicity</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:CmpXchg\">CmpXchg</a> { <ul class=\"subs\"><li><a href=\"#v:volatile\">volatile</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:address\">address</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:expected\">expected</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:replacement\">replacement</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:atomicity\">atomicity</a> :: <a href=\"LLVM-AST-Instruction.html#t:Atomicity\" title=\"LLVM.AST.Instruction\">Atomicity</a></li><li><a href=\"#v:failureMemoryOrdering\">failureMemoryOrdering</a> :: <a href=\"LLVM-AST-Instruction.html#t:MemoryOrdering\" title=\"LLVM.AST.Instruction\">MemoryOrdering</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:AtomicRMW\">AtomicRMW</a> { <ul class=\"subs\"><li><a href=\"#v:volatile\">volatile</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:rmwOperation\">rmwOperation</a> :: <a href=\"LLVM-AST-RMWOperation.html#t:RMWOperation\" title=\"LLVM.AST.RMWOperation\">RMWOperation</a></li><li><a href=\"#v:address\">address</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:value\">value</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:atomicity\">atomicity</a> :: <a href=\"LLVM-AST-Instruction.html#t:Atomicity\" title=\"LLVM.AST.Instruction\">Atomicity</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Trunc\">Trunc</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:ZExt\">ZExt</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:SExt\">SExt</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:FPToUI\">FPToUI</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:FPToSI\">FPToSI</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:UIToFP\">UIToFP</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:SIToFP\">SIToFP</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:FPTrunc\">FPTrunc</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:FPExt\">FPExt</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:PtrToInt\">PtrToInt</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:IntToPtr\">IntToPtr</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:BitCast\">BitCast</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:AddrSpaceCast\">AddrSpaceCast</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:ICmp\">ICmp</a> { <ul class=\"subs\"><li><a href=\"#v:iPredicate\">iPredicate</a> :: <a href=\"LLVM-AST-IntegerPredicate.html#t:IntegerPredicate\" title=\"LLVM.AST.IntegerPredicate\">IntegerPredicate</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:FCmp\">FCmp</a> { <ul class=\"subs\"><li><a href=\"#v:fpPredicate\">fpPredicate</a> :: <a href=\"LLVM-AST-FloatingPointPredicate.html#t:FloatingPointPredicate\" title=\"LLVM.AST.FloatingPointPredicate\">FloatingPointPredicate</a></li><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Phi\">Phi</a> { <ul class=\"subs\"><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:incomingValues\">incomingValues</a> :: [(<a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>, <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a>)]</li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Call\">Call</a> { <ul class=\"subs\"><li><a href=\"#v:tailCallKind\">tailCallKind</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Instruction.html#t:TailCallKind\" title=\"LLVM.AST.Instruction\">TailCallKind</a></li><li><a href=\"#v:callingConvention\">callingConvention</a> :: <a href=\"LLVM-AST-CallingConvention.html#t:CallingConvention\" title=\"LLVM.AST.CallingConvention\">CallingConvention</a></li><li><a href=\"#v:returnAttributes\">returnAttributes</a> :: [<a href=\"LLVM-AST-ParameterAttribute.html#t:ParameterAttribute\" title=\"LLVM.AST.ParameterAttribute\">ParameterAttribute</a>]</li><li><a href=\"#v:function\">function</a> :: <a href=\"LLVM-AST-Operand.html#t:CallableOperand\" title=\"LLVM.AST.Operand\">CallableOperand</a></li><li><a href=\"#v:arguments\">arguments</a> :: [(<a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>, [<a href=\"LLVM-AST-ParameterAttribute.html#t:ParameterAttribute\" title=\"LLVM.AST.ParameterAttribute\">ParameterAttribute</a>])]</li><li><a href=\"#v:functionAttributes\">functionAttributes</a> :: [<a href=\"LLVM-Prelude.html#t:Either\" title=\"LLVM.Prelude\">Either</a> <a href=\"LLVM-AST-FunctionAttribute.html#t:GroupID\" title=\"LLVM.AST.FunctionAttribute\">GroupID</a> <a href=\"LLVM-AST-FunctionAttribute.html#t:FunctionAttribute\" title=\"LLVM.AST.FunctionAttribute\">FunctionAttribute</a>]</li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:Select\">Select</a> { <ul class=\"subs\"><li><a href=\"#v:condition-39-\">condition'</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:trueValue\">trueValue</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:falseValue\">falseValue</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:VAArg\">VAArg</a> { <ul class=\"subs\"><li><a href=\"#v:argList\">argList</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:ExtractElement\">ExtractElement</a> { <ul class=\"subs\"><li><a href=\"#v:vector\">vector</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:index\">index</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:InsertElement\">InsertElement</a> { <ul class=\"subs\"><li><a href=\"#v:vector\">vector</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:element\">element</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:index\">index</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:ShuffleVector\">ShuffleVector</a> { <ul class=\"subs\"><li><a href=\"#v:operand0\">operand0</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:operand1\">operand1</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:mask\">mask</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:ExtractValue\">ExtractValue</a> { <ul class=\"subs\"><li><a href=\"#v:aggregate\">aggregate</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:indices-39-\">indices'</a> :: [<a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>]</li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:InsertValue\">InsertValue</a> { <ul class=\"subs\"><li><a href=\"#v:aggregate\">aggregate</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:element\">element</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:indices-39-\">indices'</a> :: [<a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>]</li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:LandingPad\">LandingPad</a> { <ul class=\"subs\"><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:cleanup\">cleanup</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:clauses\">clauses</a> :: [<a href=\"LLVM-AST-Instruction.html#t:LandingPadClause\" title=\"LLVM.AST.Instruction\">LandingPadClause</a>]</li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:CatchPad\">CatchPad</a> { <ul class=\"subs\"><li><a href=\"#v:catchSwitch\">catchSwitch</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:args\">args</a> :: [<a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>]</li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li><li>| <a href=\"#v:CleanupPad\">CleanupPad</a> { <ul class=\"subs\"><li><a href=\"#v:parentPad\">parentPad</a> :: <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a></li><li><a href=\"#v:args\">args</a> :: [<a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>]</li><li><a href=\"#v:metadata\">metadata</a> :: <a href=\"LLVM-AST-Instruction.html#t:InstructionMetadata\" title=\"LLVM.AST.Instruction\">InstructionMetadata</a></li></ul> }</li></ul>","name":"Instruction CleanupPad CatchPad LandingPad VAArg Phi CmpXchg Fence Store Load Alloca InsertValue ExtractValue ShuffleVector InsertElement ExtractElement AddrSpaceCast BitCast IntToPtr PtrToInt FPExt FPTrunc SIToFP UIToFP FPToSI FPToUI SExt ZExt Trunc GetElementPtr AShr LShr Shl FRem SRem URem FDiv SDiv UDiv FMul Mul FSub FAdd Call FCmp ICmp AtomicRMW Xor Or And Sub Add Select parentPad catchSwitch clauses argList functionAttributes arguments returnAttributes callingConvention tailCallKind incomingValues rmwOperation failureMemoryOrdering replacement expected atomicity maybeAtomicity volatile allocatedType fastMathFlags metadata indices' aggregate element vector falseValue trueValue condition' fpPredicate iPredicate address inBounds exact operand1 operand0 nuw nsw type' function args cleanup value alignment mask numElements index indices","module":"LLVM.AST.Instruction","link":"LLVM-AST-Instruction.html#t:Instruction"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Named\">Named</a> a<ul class=\"subs\"><li>= <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> <a href=\"#v::-61-\">:=</a> a</li><li>| <a href=\"#v:Do\">Do</a> a</li></ul>","name":"Named Do :=","module":"LLVM.AST.Instruction","link":"LLVM-AST-Instruction.html#t:Named"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Global\">Global</a><ul class=\"subs\"><li>= <a href=\"#v:GlobalVariable\">GlobalVariable</a> { <ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:linkage\">linkage</a> :: <a href=\"LLVM-AST-Linkage.html#t:Linkage\" title=\"LLVM.AST.Linkage\">Linkage</a></li><li><a href=\"#v:visibility\">visibility</a> :: <a href=\"LLVM-AST-Visibility.html#t:Visibility\" title=\"LLVM.AST.Visibility\">Visibility</a></li><li><a href=\"#v:dllStorageClass\">dllStorageClass</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-DLL.html#t:StorageClass\" title=\"LLVM.AST.DLL\">StorageClass</a></li><li><a href=\"#v:threadLocalMode\">threadLocalMode</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-ThreadLocalStorage.html#t:Model\" title=\"LLVM.AST.ThreadLocalStorage\">Model</a></li><li><a href=\"#v:unnamedAddr\">unnamedAddr</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Global.html#t:UnnamedAddr\" title=\"LLVM.AST.Global\">UnnamedAddr</a></li><li><a href=\"#v:isConstant\">isConstant</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:addrSpace\">addrSpace</a> :: <a href=\"LLVM-AST-AddrSpace.html#t:AddrSpace\" title=\"LLVM.AST.AddrSpace\">AddrSpace</a></li><li><a href=\"#v:initializer\">initializer</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:section\">section</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:comdat\">comdat</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:alignment\">alignment</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:metadata\">metadata</a> :: [(<a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a>, <a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:MDNode\" title=\"LLVM.AST.Operand\">MDNode</a>)]</li></ul> }</li><li>| <a href=\"#v:GlobalAlias\">GlobalAlias</a> { <ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:linkage\">linkage</a> :: <a href=\"LLVM-AST-Linkage.html#t:Linkage\" title=\"LLVM.AST.Linkage\">Linkage</a></li><li><a href=\"#v:visibility\">visibility</a> :: <a href=\"LLVM-AST-Visibility.html#t:Visibility\" title=\"LLVM.AST.Visibility\">Visibility</a></li><li><a href=\"#v:dllStorageClass\">dllStorageClass</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-DLL.html#t:StorageClass\" title=\"LLVM.AST.DLL\">StorageClass</a></li><li><a href=\"#v:threadLocalMode\">threadLocalMode</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-ThreadLocalStorage.html#t:Model\" title=\"LLVM.AST.ThreadLocalStorage\">Model</a></li><li><a href=\"#v:unnamedAddr\">unnamedAddr</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Global.html#t:UnnamedAddr\" title=\"LLVM.AST.Global\">UnnamedAddr</a></li><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:addrSpace\">addrSpace</a> :: <a href=\"LLVM-AST-AddrSpace.html#t:AddrSpace\" title=\"LLVM.AST.AddrSpace\">AddrSpace</a></li><li><a href=\"#v:aliasee\">aliasee</a> :: <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li></ul> }</li><li>| <a href=\"#v:Function\">Function</a> { <ul class=\"subs\"><li><a href=\"#v:linkage\">linkage</a> :: <a href=\"LLVM-AST-Linkage.html#t:Linkage\" title=\"LLVM.AST.Linkage\">Linkage</a></li><li><a href=\"#v:visibility\">visibility</a> :: <a href=\"LLVM-AST-Visibility.html#t:Visibility\" title=\"LLVM.AST.Visibility\">Visibility</a></li><li><a href=\"#v:dllStorageClass\">dllStorageClass</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-DLL.html#t:StorageClass\" title=\"LLVM.AST.DLL\">StorageClass</a></li><li><a href=\"#v:callingConvention\">callingConvention</a> :: <a href=\"LLVM-AST-CallingConvention.html#t:CallingConvention\" title=\"LLVM.AST.CallingConvention\">CallingConvention</a></li><li><a href=\"#v:returnAttributes\">returnAttributes</a> :: [<a href=\"LLVM-AST-ParameterAttribute.html#t:ParameterAttribute\" title=\"LLVM.AST.ParameterAttribute\">ParameterAttribute</a>]</li><li><a href=\"#v:returnType\">returnType</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li><li><a href=\"#v:name\">name</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:parameters\">parameters</a> :: ([<a href=\"LLVM-AST-Global.html#t:Parameter\" title=\"LLVM.AST.Global\">Parameter</a>], <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>)</li><li><a href=\"#v:functionAttributes\">functionAttributes</a> :: [<a href=\"LLVM-Prelude.html#t:Either\" title=\"LLVM.Prelude\">Either</a> <a href=\"LLVM-AST-FunctionAttribute.html#t:GroupID\" title=\"LLVM.AST.FunctionAttribute\">GroupID</a> <a href=\"LLVM-AST-FunctionAttribute.html#t:FunctionAttribute\" title=\"LLVM.AST.FunctionAttribute\">FunctionAttribute</a>]</li><li><a href=\"#v:section\">section</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:comdat\">comdat</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:alignment\">alignment</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:garbageCollectorName\">garbageCollectorName</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:prefix\">prefix</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:basicBlocks\">basicBlocks</a> :: [<a href=\"LLVM-AST-Global.html#t:BasicBlock\" title=\"LLVM.AST.Global\">BasicBlock</a>]</li><li><a href=\"#v:personalityFunction\">personalityFunction</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li><a href=\"#v:metadata\">metadata</a> :: [(<a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a>, <a href=\"LLVM-AST-Operand.html#t:MDRef\" title=\"LLVM.AST.Operand\">MDRef</a> <a href=\"LLVM-AST-Operand.html#t:MDNode\" title=\"LLVM.AST.Operand\">MDNode</a>)]</li></ul> }</li></ul>","name":"Global Function GlobalAlias GlobalVariable personalityFunction basicBlocks prefix garbageCollectorName parameters returnType aliasee comdat section initializer addrSpace isConstant unnamedAddr threadLocalMode dllStorageClass visibility linkage functionAttributes returnAttributes callingConvention metadata type' name alignment","module":"LLVM.AST.Global","link":"LLVM-AST-Global.html#t:Global"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Parameter\">Parameter</a> = <a href=\"#v:Parameter\">Parameter</a> <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> [<a href=\"LLVM-AST-ParameterAttribute.html#t:ParameterAttribute\" title=\"LLVM.AST.ParameterAttribute\">ParameterAttribute</a>]","name":"Parameter Parameter","module":"LLVM.AST.Global","link":"LLVM-AST-Global.html#t:Parameter"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BasicBlock\">BasicBlock</a> = <a href=\"#v:BasicBlock\">BasicBlock</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> [<a href=\"LLVM-AST-Instruction.html#t:Named\" title=\"LLVM.AST.Instruction\">Named</a> <a href=\"LLVM-AST-Instruction.html#t:Instruction\" title=\"LLVM.AST.Instruction\">Instruction</a>] (<a href=\"LLVM-AST-Instruction.html#t:Named\" title=\"LLVM.AST.Instruction\">Named</a> <a href=\"LLVM-AST-Instruction.html#t:Terminator\" title=\"LLVM.AST.Instruction\">Terminator</a>)","name":"BasicBlock BasicBlock","module":"LLVM.AST.Global","link":"LLVM-AST-Global.html#t:BasicBlock"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnnamedAddr\">UnnamedAddr</a><ul class=\"subs\"><li>= <a href=\"#v:LocalAddr\">LocalAddr</a></li><li>| <a href=\"#v:GlobalAddr\">GlobalAddr</a></li></ul>","name":"UnnamedAddr GlobalAddr LocalAddr","module":"LLVM.AST.Global","link":"LLVM-AST-Global.html#t:UnnamedAddr"},{"display_html":"<a href=\"#v:globalVariableDefaults\">globalVariableDefaults</a> :: <a href=\"LLVM-AST-Global.html#t:Global\" title=\"LLVM.AST.Global\">Global</a>","name":"globalVariableDefaults","module":"LLVM.AST.Global","link":"LLVM-AST-Global.html#v:globalVariableDefaults"},{"display_html":"<a href=\"#v:globalAliasDefaults\">globalAliasDefaults</a> :: <a href=\"LLVM-AST-Global.html#t:Global\" title=\"LLVM.AST.Global\">Global</a>","name":"globalAliasDefaults","module":"LLVM.AST.Global","link":"LLVM-AST-Global.html#v:globalAliasDefaults"},{"display_html":"<a href=\"#v:functionDefaults\">functionDefaults</a> :: <a href=\"LLVM-AST-Global.html#t:Global\" title=\"LLVM.AST.Global\">Global</a>","name":"functionDefaults","module":"LLVM.AST.Global","link":"LLVM-AST-Global.html#v:functionDefaults"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Endianness\">Endianness</a><ul class=\"subs\"><li>= <a href=\"#v:LittleEndian\">LittleEndian</a></li><li>| <a href=\"#v:BigEndian\">BigEndian</a></li></ul>","name":"Endianness LittleEndian BigEndian","module":"LLVM.AST.DataLayout","link":"LLVM-AST-DataLayout.html#t:Endianness"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AlignmentInfo\">AlignmentInfo</a> = <a href=\"#v:AlignmentInfo\">AlignmentInfo</a> {<ul class=\"subs\"><li><a href=\"#v:abiAlignment\">abiAlignment</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:preferredAlignment\">preferredAlignment</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li></ul>}","name":"AlignmentInfo AlignmentInfo preferredAlignment abiAlignment","module":"LLVM.AST.DataLayout","link":"LLVM-AST-DataLayout.html#t:AlignmentInfo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AlignType\">AlignType</a><ul class=\"subs\"><li>= <a href=\"#v:IntegerAlign\">IntegerAlign</a></li><li>| <a href=\"#v:VectorAlign\">VectorAlign</a></li><li>| <a href=\"#v:FloatAlign\">FloatAlign</a></li></ul>","name":"AlignType FloatAlign VectorAlign IntegerAlign","module":"LLVM.AST.DataLayout","link":"LLVM-AST-DataLayout.html#t:AlignType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Mangling\">Mangling</a><ul class=\"subs\"><li>= <a href=\"#v:ELFMangling\">ELFMangling</a></li><li>| <a href=\"#v:MIPSMangling\">MIPSMangling</a></li><li>| <a href=\"#v:MachOMangling\">MachOMangling</a></li><li>| <a href=\"#v:WindowsCOFFMangling\">WindowsCOFFMangling</a></li></ul>","name":"Mangling WindowsCOFFMangling MachOMangling MIPSMangling ELFMangling","module":"LLVM.AST.DataLayout","link":"LLVM-AST-DataLayout.html#t:Mangling"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DataLayout\">DataLayout</a> = <a href=\"#v:DataLayout\">DataLayout</a> {<ul class=\"subs\"><li><a href=\"#v:endianness\">endianness</a> :: <a href=\"LLVM-AST-DataLayout.html#t:Endianness\" title=\"LLVM.AST.DataLayout\">Endianness</a></li><li><a href=\"#v:mangling\">mangling</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-DataLayout.html#t:Mangling\" title=\"LLVM.AST.DataLayout\">Mangling</a></li><li><a href=\"#v:stackAlignment\">stackAlignment</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:pointerLayouts\">pointerLayouts</a> :: <a href=\"../containers-0.6.0.1/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"LLVM-AST-AddrSpace.html#t:AddrSpace\" title=\"LLVM.AST.AddrSpace\">AddrSpace</a> (<a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>, <a href=\"LLVM-AST-DataLayout.html#t:AlignmentInfo\" title=\"LLVM.AST.DataLayout\">AlignmentInfo</a>)</li><li><a href=\"#v:typeLayouts\">typeLayouts</a> :: <a href=\"../containers-0.6.0.1/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> (<a href=\"LLVM-AST-DataLayout.html#t:AlignType\" title=\"LLVM.AST.DataLayout\">AlignType</a>, <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>) <a href=\"LLVM-AST-DataLayout.html#t:AlignmentInfo\" title=\"LLVM.AST.DataLayout\">AlignmentInfo</a></li><li><a href=\"#v:aggregateLayout\">aggregateLayout</a> :: <a href=\"LLVM-AST-DataLayout.html#t:AlignmentInfo\" title=\"LLVM.AST.DataLayout\">AlignmentInfo</a></li><li><a href=\"#v:nativeSizes\">nativeSizes</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"../containers-0.6.0.1/Data-Set.html#t:Set\" title=\"Data.Set\">Set</a> <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>)</li></ul>}","name":"DataLayout DataLayout nativeSizes aggregateLayout typeLayouts pointerLayouts stackAlignment mangling endianness","module":"LLVM.AST.DataLayout","link":"LLVM-AST-DataLayout.html#t:DataLayout"},{"display_html":"<a href=\"#v:defaultDataLayout\">defaultDataLayout</a> :: <a href=\"LLVM-AST-DataLayout.html#t:Endianness\" title=\"LLVM.AST.DataLayout\">Endianness</a> -&gt; <a href=\"LLVM-AST-DataLayout.html#t:DataLayout\" title=\"LLVM.AST.DataLayout\">DataLayout</a>","name":"defaultDataLayout","module":"LLVM.AST.DataLayout","link":"LLVM-AST-DataLayout.html#v:defaultDataLayout"},{"display_html":"<a href=\"#v:dataLayoutToString\">dataLayoutToString</a> :: <a href=\"LLVM-AST-DataLayout.html#t:DataLayout\" title=\"LLVM.AST.DataLayout\">DataLayout</a> -&gt; <a href=\"LLVM-Prelude.html#t:ByteString\" title=\"LLVM.Prelude\">ByteString</a>","name":"dataLayoutToString","module":"LLVM.DataLayout","link":"LLVM-DataLayout.html#v:dataLayoutToString"},{"display_html":"<a href=\"#v:parseDataLayout\">parseDataLayout</a> :: <a href=\"LLVM-AST-DataLayout.html#t:Endianness\" title=\"LLVM.AST.DataLayout\">Endianness</a> -&gt; <a href=\"LLVM-Prelude.html#t:ByteString\" title=\"LLVM.Prelude\">ByteString</a> -&gt; <a href=\"../mtl-2.2.2/Control-Monad-Except.html#t:Except\" title=\"Control.Monad.Except\">Except</a> <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-DataLayout.html#t:DataLayout\" title=\"LLVM.AST.DataLayout\">DataLayout</a>)","name":"parseDataLayout","module":"LLVM.DataLayout","link":"LLVM-DataLayout.html#v:parseDataLayout"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Module\">Module</a> = <a href=\"#v:Module\">Module</a> {<ul class=\"subs\"><li><a href=\"#v:moduleName\">moduleName</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:moduleSourceFileName\">moduleSourceFileName</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:moduleDataLayout\">moduleDataLayout</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-DataLayout.html#t:DataLayout\" title=\"LLVM.AST.DataLayout\">DataLayout</a></li><li><a href=\"#v:moduleTargetTriple\">moduleTargetTriple</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li><a href=\"#v:moduleDefinitions\">moduleDefinitions</a> :: [<a href=\"LLVM-AST.html#t:Definition\" title=\"LLVM.AST\">Definition</a>]</li></ul>}","name":"Module Module moduleName moduleSourceFileName moduleDataLayout moduleTargetTriple moduleDefinitions","module":"LLVM.AST","link":"LLVM-AST.html#t:Module"},{"display_html":"<a href=\"#v:defaultModule\">defaultModule</a> :: <a href=\"LLVM-AST.html#t:Module\" title=\"LLVM.AST\">Module</a>","name":"defaultModule","module":"LLVM.AST","link":"LLVM-AST.html#v:defaultModule"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Definition\">Definition</a><ul class=\"subs\"><li>= <a href=\"#v:GlobalDefinition\">GlobalDefinition</a> <a href=\"LLVM-AST.html#t:Global\" title=\"LLVM.AST\">Global</a></li><li>| <a href=\"#v:TypeDefinition\">TypeDefinition</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST.html#t:Type\" title=\"LLVM.AST\">Type</a>)</li><li>| <a href=\"#v:MetadataNodeDefinition\">MetadataNodeDefinition</a> <a href=\"LLVM-AST.html#t:MetadataNodeID\" title=\"LLVM.AST\">MetadataNodeID</a> <a href=\"LLVM-AST.html#t:MDNode\" title=\"LLVM.AST\">MDNode</a></li><li>| <a href=\"#v:NamedMetadataDefinition\">NamedMetadataDefinition</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a> [<a href=\"LLVM-AST.html#t:MetadataNodeID\" title=\"LLVM.AST\">MetadataNodeID</a>]</li><li>| <a href=\"#v:ModuleInlineAssembly\">ModuleInlineAssembly</a> <a href=\"LLVM-Prelude.html#t:ByteString\" title=\"LLVM.Prelude\">ByteString</a></li><li>| <a href=\"#v:FunctionAttributes\">FunctionAttributes</a> <a href=\"LLVM-AST-FunctionAttribute.html#t:GroupID\" title=\"LLVM.AST.FunctionAttribute\">GroupID</a> [<a href=\"LLVM-AST-FunctionAttribute.html#t:FunctionAttribute\" title=\"LLVM.AST.FunctionAttribute\">FunctionAttribute</a>]</li><li>| <a href=\"#v:COMDAT\">COMDAT</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a> <a href=\"LLVM-AST-COMDAT.html#t:SelectionKind\" title=\"LLVM.AST.COMDAT\">SelectionKind</a></li></ul>","name":"Definition COMDAT NamedMetadataDefinition GlobalDefinition TypeDefinition MetadataNodeDefinition ModuleInlineAssembly FunctionAttributes","module":"LLVM.AST","link":"LLVM-AST.html#t:Definition"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Global\">Global</a><ul class=\"subs\"><li>= <a href=\"#v:GlobalVariable\">GlobalVariable</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> <a href=\"LLVM-AST-Linkage.html#t:Linkage\" title=\"LLVM.AST.Linkage\">Linkage</a> <a href=\"LLVM-AST-Visibility.html#t:Visibility\" title=\"LLVM.AST.Visibility\">Visibility</a> (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-DLL.html#t:StorageClass\" title=\"LLVM.AST.DLL\">StorageClass</a>) (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-ThreadLocalStorage.html#t:Model\" title=\"LLVM.AST.ThreadLocalStorage\">Model</a>) (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST.html#t:UnnamedAddr\" title=\"LLVM.AST\">UnnamedAddr</a>) <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> <a href=\"LLVM-AST.html#t:Type\" title=\"LLVM.AST\">Type</a> <a href=\"LLVM-AST-AddrSpace.html#t:AddrSpace\" title=\"LLVM.AST.AddrSpace\">AddrSpace</a> (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a>) (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a>) (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a>) <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a> [(<a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a>, <a href=\"LLVM-AST.html#t:MDRef\" title=\"LLVM.AST\">MDRef</a> <a href=\"LLVM-AST.html#t:MDNode\" title=\"LLVM.AST\">MDNode</a>)]</li><li>| <a href=\"#v:GlobalAlias\">GlobalAlias</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> <a href=\"LLVM-AST-Linkage.html#t:Linkage\" title=\"LLVM.AST.Linkage\">Linkage</a> <a href=\"LLVM-AST-Visibility.html#t:Visibility\" title=\"LLVM.AST.Visibility\">Visibility</a> (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-DLL.html#t:StorageClass\" title=\"LLVM.AST.DLL\">StorageClass</a>) (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-ThreadLocalStorage.html#t:Model\" title=\"LLVM.AST.ThreadLocalStorage\">Model</a>) (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST.html#t:UnnamedAddr\" title=\"LLVM.AST\">UnnamedAddr</a>) <a href=\"LLVM-AST.html#t:Type\" title=\"LLVM.AST\">Type</a> <a href=\"LLVM-AST-AddrSpace.html#t:AddrSpace\" title=\"LLVM.AST.AddrSpace\">AddrSpace</a> <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li>| <a href=\"#v:Function\">Function</a> <a href=\"LLVM-AST-Linkage.html#t:Linkage\" title=\"LLVM.AST.Linkage\">Linkage</a> <a href=\"LLVM-AST-Visibility.html#t:Visibility\" title=\"LLVM.AST.Visibility\">Visibility</a> (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-DLL.html#t:StorageClass\" title=\"LLVM.AST.DLL\">StorageClass</a>) <a href=\"LLVM-AST-CallingConvention.html#t:CallingConvention\" title=\"LLVM.AST.CallingConvention\">CallingConvention</a> [<a href=\"LLVM-AST-ParameterAttribute.html#t:ParameterAttribute\" title=\"LLVM.AST.ParameterAttribute\">ParameterAttribute</a>] <a href=\"LLVM-AST.html#t:Type\" title=\"LLVM.AST\">Type</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> ([<a href=\"LLVM-AST.html#t:Parameter\" title=\"LLVM.AST\">Parameter</a>], <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>) [<a href=\"LLVM-Prelude.html#t:Either\" title=\"LLVM.Prelude\">Either</a> <a href=\"LLVM-AST-FunctionAttribute.html#t:GroupID\" title=\"LLVM.AST.FunctionAttribute\">GroupID</a> <a href=\"LLVM-AST-FunctionAttribute.html#t:FunctionAttribute\" title=\"LLVM.AST.FunctionAttribute\">FunctionAttribute</a>] (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a>) (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a>) <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a> (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a>) (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a>) [<a href=\"LLVM-AST.html#t:BasicBlock\" title=\"LLVM.AST\">BasicBlock</a>] (<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a>) [(<a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a>, <a href=\"LLVM-AST.html#t:MDRef\" title=\"LLVM.AST\">MDRef</a> <a href=\"LLVM-AST.html#t:MDNode\" title=\"LLVM.AST\">MDNode</a>)]</li></ul>","name":"Global GlobalVariable GlobalAlias Function","module":"LLVM.AST","link":"LLVM-AST.html#t:Global"},{"display_html":"<a href=\"#v:globalVariableDefaults\">globalVariableDefaults</a> :: <a href=\"LLVM-AST.html#t:Global\" title=\"LLVM.AST\">Global</a>","name":"globalVariableDefaults","module":"LLVM.AST","link":"LLVM-AST.html#v:globalVariableDefaults"},{"display_html":"<a href=\"#v:globalAliasDefaults\">globalAliasDefaults</a> :: <a href=\"LLVM-AST.html#t:Global\" title=\"LLVM.AST\">Global</a>","name":"globalAliasDefaults","module":"LLVM.AST","link":"LLVM-AST.html#v:globalAliasDefaults"},{"display_html":"<a href=\"#v:functionDefaults\">functionDefaults</a> :: <a href=\"LLVM-AST.html#t:Global\" title=\"LLVM.AST\">Global</a>","name":"functionDefaults","module":"LLVM.AST","link":"LLVM-AST.html#v:functionDefaults"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UnnamedAddr\">UnnamedAddr</a><ul class=\"subs\"><li>= <a href=\"#v:LocalAddr\">LocalAddr</a></li><li>| <a href=\"#v:GlobalAddr\">GlobalAddr</a></li></ul>","name":"UnnamedAddr LocalAddr GlobalAddr","module":"LLVM.AST","link":"LLVM-AST.html#t:UnnamedAddr"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Parameter\">Parameter</a> = <a href=\"#v:Parameter\">Parameter</a> <a href=\"LLVM-AST.html#t:Type\" title=\"LLVM.AST\">Type</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> [<a href=\"LLVM-AST-ParameterAttribute.html#t:ParameterAttribute\" title=\"LLVM.AST.ParameterAttribute\">ParameterAttribute</a>]","name":"Parameter Parameter","module":"LLVM.AST","link":"LLVM-AST.html#t:Parameter"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BasicBlock\">BasicBlock</a> = <a href=\"#v:BasicBlock\">BasicBlock</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> [<a href=\"LLVM-AST-Instruction.html#t:Named\" title=\"LLVM.AST.Instruction\">Named</a> <a href=\"LLVM-AST-Instruction.html#t:Instruction\" title=\"LLVM.AST.Instruction\">Instruction</a>] (<a href=\"LLVM-AST-Instruction.html#t:Named\" title=\"LLVM.AST.Instruction\">Named</a> <a href=\"LLVM-AST-Instruction.html#t:Terminator\" title=\"LLVM.AST.Instruction\">Terminator</a>)","name":"BasicBlock BasicBlock","module":"LLVM.AST","link":"LLVM-AST.html#t:BasicBlock"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Operand\">Operand</a><ul class=\"subs\"><li>= <a href=\"#v:LocalReference\">LocalReference</a> <a href=\"LLVM-AST.html#t:Type\" title=\"LLVM.AST\">Type</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li>| <a href=\"#v:ConstantOperand\">ConstantOperand</a> <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a></li><li>| <a href=\"#v:MetadataOperand\">MetadataOperand</a> <a href=\"LLVM-AST.html#t:Metadata\" title=\"LLVM.AST\">Metadata</a></li></ul>","name":"Operand LocalReference ConstantOperand MetadataOperand","module":"LLVM.AST","link":"LLVM-AST.html#t:Operand"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CallableOperand\">CallableOperand</a> = <a href=\"LLVM-Prelude.html#t:Either\" title=\"LLVM.Prelude\">Either</a> <a href=\"LLVM-AST-InlineAssembly.html#t:InlineAssembly\" title=\"LLVM.AST.InlineAssembly\">InlineAssembly</a> <a href=\"LLVM-AST.html#t:Operand\" title=\"LLVM.AST\">Operand</a>","name":"CallableOperand","module":"LLVM.AST","link":"LLVM-AST.html#t:CallableOperand"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Metadata\">Metadata</a><ul class=\"subs\"><li>= <a href=\"#v:MDString\">MDString</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li><li>| <a href=\"#v:MDNode\">MDNode</a> (<a href=\"LLVM-AST.html#t:MDRef\" title=\"LLVM.AST\">MDRef</a> <a href=\"LLVM-AST.html#t:MDNode\" title=\"LLVM.AST\">MDNode</a>)</li><li>| <a href=\"#v:MDValue\">MDValue</a> <a href=\"LLVM-AST.html#t:Operand\" title=\"LLVM.AST\">Operand</a></li></ul>","name":"Metadata MDNode MDString MDValue","module":"LLVM.AST","link":"LLVM-AST.html#t:Metadata"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:MetadataNodeID\">MetadataNodeID</a> = <a href=\"#v:MetadataNodeID\">MetadataNodeID</a> <a href=\"LLVM-Prelude.html#t:Word\" title=\"LLVM.Prelude\">Word</a>","name":"MetadataNodeID MetadataNodeID","module":"LLVM.AST","link":"LLVM-AST.html#t:MetadataNodeID"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MDRef\">MDRef</a> a<ul class=\"subs\"><li>= <a href=\"#v:MDRef\">MDRef</a> <a href=\"LLVM-AST.html#t:MetadataNodeID\" title=\"LLVM.AST\">MetadataNodeID</a></li><li>| <a href=\"#v:MDInline\">MDInline</a> a</li></ul>","name":"MDRef MDRef MDInline","module":"LLVM.AST","link":"LLVM-AST.html#t:MDRef"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MDNode\">MDNode</a><ul class=\"subs\"><li>= <a href=\"#v:MDTuple\">MDTuple</a> [<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST.html#t:Metadata\" title=\"LLVM.AST\">Metadata</a>]</li><li>| <a href=\"#v:DIExpression\">DIExpression</a> <a href=\"LLVM-AST-Operand.html#t:DIExpression\" title=\"LLVM.AST.Operand\">DIExpression</a></li><li>| <a href=\"#v:DIGlobalVariableExpression\">DIGlobalVariableExpression</a> <a href=\"LLVM-AST-Operand.html#t:DIGlobalVariableExpression\" title=\"LLVM.AST.Operand\">DIGlobalVariableExpression</a></li><li>| <a href=\"#v:DILocation\">DILocation</a> <a href=\"LLVM-AST-Operand.html#t:DILocation\" title=\"LLVM.AST.Operand\">DILocation</a></li><li>| <a href=\"#v:DIMacroNode\">DIMacroNode</a> <a href=\"LLVM-AST-Operand.html#t:DIMacroNode\" title=\"LLVM.AST.Operand\">DIMacroNode</a></li><li>| <a href=\"#v:DINode\">DINode</a> <a href=\"LLVM-AST-Operand.html#t:DINode\" title=\"LLVM.AST.Operand\">DINode</a></li></ul>","name":"MDNode MDTuple DIExpression DIGlobalVariableExpression DILocation DIMacroNode DINode","module":"LLVM.AST","link":"LLVM-AST.html#t:MDNode"},{"display_html":"module <a href=\"LLVM-AST-Instruction.html\">LLVM.AST.Instruction</a>","name":"","module":"LLVM.AST","link":""},{"display_html":"module <a href=\"LLVM-AST-Name.html\">LLVM.AST.Name</a>","name":"","module":"LLVM.AST","link":""},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Type\">Type</a><ul class=\"subs\"><li>= <a href=\"#v:VoidType\">VoidType</a></li><li>| <a href=\"#v:IntegerType\">IntegerType</a> { <ul class=\"subs\"><li><a href=\"#v:typeBits\">typeBits</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li></ul> }</li><li>| <a href=\"#v:PointerType\">PointerType</a> { <ul class=\"subs\"><li><a href=\"#v:pointerReferent\">pointerReferent</a> :: <a href=\"LLVM-AST.html#t:Type\" title=\"LLVM.AST\">Type</a></li><li><a href=\"#v:pointerAddrSpace\">pointerAddrSpace</a> :: <a href=\"LLVM-AST-AddrSpace.html#t:AddrSpace\" title=\"LLVM.AST.AddrSpace\">AddrSpace</a></li></ul> }</li><li>| <a href=\"#v:FloatingPointType\">FloatingPointType</a> { <ul class=\"subs\"><li><a href=\"#v:floatingPointType\">floatingPointType</a> :: <a href=\"LLVM-AST.html#t:FloatingPointType\" title=\"LLVM.AST\">FloatingPointType</a></li></ul> }</li><li>| <a href=\"#v:FunctionType\">FunctionType</a> { <ul class=\"subs\"><li><a href=\"#v:resultType\">resultType</a> :: <a href=\"LLVM-AST.html#t:Type\" title=\"LLVM.AST\">Type</a></li><li><a href=\"#v:argumentTypes\">argumentTypes</a> :: [<a href=\"LLVM-AST.html#t:Type\" title=\"LLVM.AST\">Type</a>]</li><li><a href=\"#v:isVarArg\">isVarArg</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li></ul> }</li><li>| <a href=\"#v:VectorType\">VectorType</a> { <ul class=\"subs\"><li><a href=\"#v:nVectorElements\">nVectorElements</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:elementType\">elementType</a> :: <a href=\"LLVM-AST.html#t:Type\" title=\"LLVM.AST\">Type</a></li></ul> }</li><li>| <a href=\"#v:StructureType\">StructureType</a> { <ul class=\"subs\"><li><a href=\"#v:isPacked\">isPacked</a> :: <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a></li><li><a href=\"#v:elementTypes\">elementTypes</a> :: [<a href=\"LLVM-AST.html#t:Type\" title=\"LLVM.AST\">Type</a>]</li></ul> }</li><li>| <a href=\"#v:ArrayType\">ArrayType</a> { <ul class=\"subs\"><li><a href=\"#v:nArrayElements\">nArrayElements</a> :: <a href=\"../base-4.12.0.0/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a></li><li><a href=\"#v:elementType\">elementType</a> :: <a href=\"LLVM-AST.html#t:Type\" title=\"LLVM.AST\">Type</a></li></ul> }</li><li>| <a href=\"#v:NamedTypeReference\">NamedTypeReference</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li>| <a href=\"#v:MetadataType\">MetadataType</a></li><li>| <a href=\"#v:LabelType\">LabelType</a></li><li>| <a href=\"#v:TokenType\">TokenType</a></li></ul>","name":"Type FloatingPointType VoidType IntegerType PointerType FunctionType VectorType StructureType ArrayType NamedTypeReference MetadataType LabelType TokenType typeBits pointerReferent pointerAddrSpace floatingPointType resultType argumentTypes isVarArg nVectorElements elementType isPacked elementTypes nArrayElements","module":"LLVM.AST","link":"LLVM-AST.html#t:Type"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FloatingPointType\">FloatingPointType</a><ul class=\"subs\"><li>= <a href=\"#v:HalfFP\">HalfFP</a></li><li>| <a href=\"#v:FloatFP\">FloatFP</a></li><li>| <a href=\"#v:DoubleFP\">DoubleFP</a></li><li>| <a href=\"#v:FP128FP\">FP128FP</a></li><li>| <a href=\"#v:X86_FP80FP\">X86_FP80FP</a></li><li>| <a href=\"#v:PPC_FP128FP\">PPC_FP128FP</a></li></ul>","name":"FloatingPointType HalfFP FloatFP DoubleFP FP128FP X86_FP80FP PPC_FP128FP","module":"LLVM.AST","link":"LLVM-AST.html#t:FloatingPointType"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:IRBuilderT\">IRBuilderT</a> m a = <a href=\"#v:IRBuilderT\">IRBuilderT</a> {<ul class=\"subs\"><li><a href=\"#v:unIRBuilderT\">unIRBuilderT</a> :: <a href=\"../mtl-2.2.2/Control-Monad-State-Strict.html#t:StateT\" title=\"Control.Monad.State.Strict\">StateT</a> <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilderState\" title=\"LLVM.IRBuilder.Monad\">IRBuilderState</a> m a</li></ul>}","name":"IRBuilderT IRBuilderT unIRBuilderT","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#t:IRBuilderT"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:IRBuilder\">IRBuilder</a> = <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilderT\" title=\"LLVM.IRBuilder.Monad\">IRBuilderT</a> <a href=\"../base-4.12.0.0/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a>","name":"IRBuilder","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#t:IRBuilder"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; <a href=\"#t:MonadIRBuilder\">MonadIRBuilder</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftIRState\">liftIRState</a> :: <a href=\"../mtl-2.2.2/Control-Monad-State-Strict.html#t:State\" title=\"Control.Monad.State.Strict\">State</a> <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilderState\" title=\"LLVM.IRBuilder.Monad\">IRBuilderState</a> a -&gt; m a</li></ul>","name":"MonadIRBuilder liftIRState","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PartialBlock\">PartialBlock</a> = <a href=\"#v:PartialBlock\">PartialBlock</a> {<ul class=\"subs\"><li><a href=\"#v:partialBlockName\">partialBlockName</a> :: !<a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a></li><li><a href=\"#v:partialBlockInstrs\">partialBlockInstrs</a> :: <a href=\"LLVM-IRBuilder-Internal-SnocList.html#t:SnocList\" title=\"LLVM.IRBuilder.Internal.SnocList\">SnocList</a> (<a href=\"LLVM-AST-Instruction.html#t:Named\" title=\"LLVM.AST.Instruction\">Named</a> <a href=\"LLVM-AST-Instruction.html#t:Instruction\" title=\"LLVM.AST.Instruction\">Instruction</a>)</li><li><a href=\"#v:partialBlockTerm\">partialBlockTerm</a> :: <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> (<a href=\"LLVM-AST-Instruction.html#t:Named\" title=\"LLVM.AST.Instruction\">Named</a> <a href=\"LLVM-AST-Instruction.html#t:Terminator\" title=\"LLVM.AST.Instruction\">Terminator</a>)</li></ul>}","name":"PartialBlock PartialBlock partialBlockTerm partialBlockInstrs partialBlockName","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#t:PartialBlock"},{"display_html":"<a href=\"#v:emptyPartialBlock\">emptyPartialBlock</a> :: <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; <a href=\"LLVM-IRBuilder-Monad.html#t:PartialBlock\" title=\"LLVM.IRBuilder.Monad\">PartialBlock</a>","name":"emptyPartialBlock","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:emptyPartialBlock"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IRBuilderState\">IRBuilderState</a> = <a href=\"#v:IRBuilderState\">IRBuilderState</a> {<ul class=\"subs\"><li><a href=\"#v:builderSupply\">builderSupply</a> :: !<a href=\"LLVM-Prelude.html#t:Word\" title=\"LLVM.Prelude\">Word</a></li><li><a href=\"#v:builderUsedNames\">builderUsedNames</a> :: !(<a href=\"../unordered-containers-0.2.9.0/Data-HashSet.html#t:HashSet\" title=\"Data.HashSet\">HashSet</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a>)</li><li><a href=\"#v:builderNameSuggestion\">builderNameSuggestion</a> :: !(<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a>)</li><li><a href=\"#v:builderBlocks\">builderBlocks</a> :: <a href=\"LLVM-IRBuilder-Internal-SnocList.html#t:SnocList\" title=\"LLVM.IRBuilder.Internal.SnocList\">SnocList</a> <a href=\"LLVM-AST-Global.html#t:BasicBlock\" title=\"LLVM.AST.Global\">BasicBlock</a></li><li><a href=\"#v:builderBlock\">builderBlock</a> :: !(<a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-IRBuilder-Monad.html#t:PartialBlock\" title=\"LLVM.IRBuilder.Monad\">PartialBlock</a>)</li></ul>}","name":"IRBuilderState IRBuilderState builderBlock builderBlocks builderNameSuggestion builderUsedNames builderSupply","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#t:IRBuilderState"},{"display_html":"<a href=\"#v:emptyIRBuilder\">emptyIRBuilder</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilderState\" title=\"LLVM.IRBuilder.Monad\">IRBuilderState</a>","name":"emptyIRBuilder","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:emptyIRBuilder"},{"display_html":"<a href=\"#v:runIRBuilder\">runIRBuilder</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilderState\" title=\"LLVM.IRBuilder.Monad\">IRBuilderState</a> -&gt; <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilder\" title=\"LLVM.IRBuilder.Monad\">IRBuilder</a> a -&gt; (a, [<a href=\"LLVM-AST-Global.html#t:BasicBlock\" title=\"LLVM.AST.Global\">BasicBlock</a>])","name":"runIRBuilder","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:runIRBuilder"},{"display_html":"<a href=\"#v:runIRBuilderT\">runIRBuilderT</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilderState\" title=\"LLVM.IRBuilder.Monad\">IRBuilderState</a> -&gt; <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilderT\" title=\"LLVM.IRBuilder.Monad\">IRBuilderT</a> m a -&gt; m (a, [<a href=\"LLVM-AST-Global.html#t:BasicBlock\" title=\"LLVM.AST.Global\">BasicBlock</a>])","name":"runIRBuilderT","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:runIRBuilderT"},{"display_html":"<a href=\"#v:execIRBuilder\">execIRBuilder</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilderState\" title=\"LLVM.IRBuilder.Monad\">IRBuilderState</a> -&gt; <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilder\" title=\"LLVM.IRBuilder.Monad\">IRBuilder</a> a -&gt; [<a href=\"LLVM-AST-Global.html#t:BasicBlock\" title=\"LLVM.AST.Global\">BasicBlock</a>]","name":"execIRBuilder","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:execIRBuilder"},{"display_html":"<a href=\"#v:execIRBuilderT\">execIRBuilderT</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilderState\" title=\"LLVM.IRBuilder.Monad\">IRBuilderState</a> -&gt; <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilderT\" title=\"LLVM.IRBuilder.Monad\">IRBuilderT</a> m a -&gt; m [<a href=\"LLVM-AST-Global.html#t:BasicBlock\" title=\"LLVM.AST.Global\">BasicBlock</a>]","name":"execIRBuilderT","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:execIRBuilderT"},{"display_html":"<a href=\"#v:ensureBlock\">ensureBlock</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; m ()","name":"ensureBlock","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:ensureBlock"},{"display_html":"<a href=\"#v:modifyBlock\">modifyBlock</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; (<a href=\"LLVM-IRBuilder-Monad.html#t:PartialBlock\" title=\"LLVM.IRBuilder.Monad\">PartialBlock</a> -&gt; <a href=\"LLVM-IRBuilder-Monad.html#t:PartialBlock\" title=\"LLVM.IRBuilder.Monad\">PartialBlock</a>) -&gt; m ()","name":"modifyBlock","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:modifyBlock"},{"display_html":"<a href=\"#v:fresh\">fresh</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; m <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a>","name":"fresh","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:fresh"},{"display_html":"<a href=\"#v:freshName\">freshName</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a> -&gt; m <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a>","name":"freshName","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:freshName"},{"display_html":"<a href=\"#v:freshUnName\">freshUnName</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; m <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a>","name":"freshUnName","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:freshUnName"},{"display_html":"<a href=\"#v:emitInstr\">emitInstr</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; <a href=\"LLVM-AST-Instruction.html#t:Instruction\" title=\"LLVM.AST.Instruction\">Instruction</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"emitInstr","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:emitInstr"},{"display_html":"<a href=\"#v:emitInstrVoid\">emitInstrVoid</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Instruction.html#t:Instruction\" title=\"LLVM.AST.Instruction\">Instruction</a> -&gt; m ()","name":"emitInstrVoid","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:emitInstrVoid"},{"display_html":"<a href=\"#v:emitTerm\">emitTerm</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Instruction.html#t:Terminator\" title=\"LLVM.AST.Instruction\">Terminator</a> -&gt; m ()","name":"emitTerm","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:emitTerm"},{"display_html":"<a href=\"#v:emitBlockStart\">emitBlockStart</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; m ()","name":"emitBlockStart","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:emitBlockStart"},{"display_html":"<a href=\"#v:block\">block</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; m <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a>","name":"block","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:block"},{"display_html":"<a href=\"#v:named\">named</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; m r -&gt; <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a> -&gt; m r","name":"named","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:named"},{"display_html":"<a href=\"#v:currentBlock\">currentBlock</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; m <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a>","name":"currentBlock","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:currentBlock"},{"display_html":"<a href=\"#v:hasTerminator\">hasTerminator</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; m <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a>","name":"hasTerminator","module":"LLVM.IRBuilder.Monad","link":"LLVM-IRBuilder-Monad.html#v:hasTerminator"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ModuleBuilderT\">ModuleBuilderT</a> m a = <a href=\"#v:ModuleBuilderT\">ModuleBuilderT</a> {<ul class=\"subs\"><li><a href=\"#v:unModuleBuilderT\">unModuleBuilderT</a> :: <a href=\"../mtl-2.2.2/Control-Monad-State-Lazy.html#t:StateT\" title=\"Control.Monad.State.Lazy\">StateT</a> <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilderState\" title=\"LLVM.IRBuilder.Module\">ModuleBuilderState</a> m a</li></ul>}","name":"ModuleBuilderT ModuleBuilderT unModuleBuilderT","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#t:ModuleBuilderT"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ModuleBuilderState\">ModuleBuilderState</a> = <a href=\"#v:ModuleBuilderState\">ModuleBuilderState</a> {<ul class=\"subs\"><li><a href=\"#v:builderDefs\">builderDefs</a> :: <a href=\"LLVM-IRBuilder-Internal-SnocList.html#t:SnocList\" title=\"LLVM.IRBuilder.Internal.SnocList\">SnocList</a> <a href=\"LLVM-AST.html#t:Definition\" title=\"LLVM.AST\">Definition</a></li><li><a href=\"#v:builderTypeDefs\">builderTypeDefs</a> :: <a href=\"../containers-0.6.0.1/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul>}","name":"ModuleBuilderState ModuleBuilderState builderTypeDefs builderDefs","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#t:ModuleBuilderState"},{"display_html":"<a href=\"#v:emptyModuleBuilder\">emptyModuleBuilder</a> :: <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilderState\" title=\"LLVM.IRBuilder.Module\">ModuleBuilderState</a>","name":"emptyModuleBuilder","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:emptyModuleBuilder"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ModuleBuilder\">ModuleBuilder</a> = <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilderT\" title=\"LLVM.IRBuilder.Module\">ModuleBuilderT</a> <a href=\"../base-4.12.0.0/Data-Functor-Identity.html#t:Identity\" title=\"Data.Functor.Identity\">Identity</a>","name":"ModuleBuilder","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#t:ModuleBuilder"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; <a href=\"#t:MonadModuleBuilder\">MonadModuleBuilder</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:liftModuleState\">liftModuleState</a> :: <a href=\"../mtl-2.2.2/Control-Monad-State-Lazy.html#t:State\" title=\"Control.Monad.State.Lazy\">State</a> <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilderState\" title=\"LLVM.IRBuilder.Module\">ModuleBuilderState</a> a -&gt; m a</li></ul>","name":"MonadModuleBuilder liftModuleState","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#t:MonadModuleBuilder"},{"display_html":"<a href=\"#v:runModuleBuilder\">runModuleBuilder</a> :: <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilderState\" title=\"LLVM.IRBuilder.Module\">ModuleBuilderState</a> -&gt; <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilder\" title=\"LLVM.IRBuilder.Module\">ModuleBuilder</a> a -&gt; (a, [<a href=\"LLVM-AST.html#t:Definition\" title=\"LLVM.AST\">Definition</a>])","name":"runModuleBuilder","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:runModuleBuilder"},{"display_html":"<a href=\"#v:runModuleBuilderT\">runModuleBuilderT</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilderState\" title=\"LLVM.IRBuilder.Module\">ModuleBuilderState</a> -&gt; <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilderT\" title=\"LLVM.IRBuilder.Module\">ModuleBuilderT</a> m a -&gt; m (a, [<a href=\"LLVM-AST.html#t:Definition\" title=\"LLVM.AST\">Definition</a>])","name":"runModuleBuilderT","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:runModuleBuilderT"},{"display_html":"<a href=\"#v:execModuleBuilder\">execModuleBuilder</a> :: <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilderState\" title=\"LLVM.IRBuilder.Module\">ModuleBuilderState</a> -&gt; <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilder\" title=\"LLVM.IRBuilder.Module\">ModuleBuilder</a> a -&gt; [<a href=\"LLVM-AST.html#t:Definition\" title=\"LLVM.AST\">Definition</a>]","name":"execModuleBuilder","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:execModuleBuilder"},{"display_html":"<a href=\"#v:execModuleBuilderT\">execModuleBuilderT</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilderState\" title=\"LLVM.IRBuilder.Module\">ModuleBuilderState</a> -&gt; <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilderT\" title=\"LLVM.IRBuilder.Module\">ModuleBuilderT</a> m a -&gt; m [<a href=\"LLVM-AST.html#t:Definition\" title=\"LLVM.AST\">Definition</a>]","name":"execModuleBuilderT","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:execModuleBuilderT"},{"display_html":"<a href=\"#v:emitDefn\">emitDefn</a> :: <a href=\"LLVM-IRBuilder-Module.html#t:MonadModuleBuilder\" title=\"LLVM.IRBuilder.Module\">MonadModuleBuilder</a> m =&gt; <a href=\"LLVM-AST.html#t:Definition\" title=\"LLVM.AST\">Definition</a> -&gt; m ()","name":"emitDefn","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:emitDefn"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ParameterName\">ParameterName</a><ul class=\"subs\"><li>= <a href=\"#v:NoParameterName\">NoParameterName</a></li><li>| <a href=\"#v:ParameterName\">ParameterName</a> <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a></li></ul>","name":"ParameterName NoParameterName ParameterName","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#t:ParameterName"},{"display_html":"<a href=\"#v:function\">function</a> :: <a href=\"LLVM-IRBuilder-Module.html#t:MonadModuleBuilder\" title=\"LLVM.IRBuilder.Module\">MonadModuleBuilder</a> m =&gt; <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; [(<a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>, <a href=\"LLVM-IRBuilder-Module.html#t:ParameterName\" title=\"LLVM.IRBuilder.Module\">ParameterName</a>)] -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; ([<a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>] -&gt; <a href=\"LLVM-IRBuilder-Monad.html#t:IRBuilderT\" title=\"LLVM.IRBuilder.Monad\">IRBuilderT</a> m ()) -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"function","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:function"},{"display_html":"<a href=\"#v:extern\">extern</a> :: <a href=\"LLVM-IRBuilder-Module.html#t:MonadModuleBuilder\" title=\"LLVM.IRBuilder.Module\">MonadModuleBuilder</a> m =&gt; <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; [<a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>] -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"extern","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:extern"},{"display_html":"<a href=\"#v:externVarArgs\">externVarArgs</a> :: <a href=\"LLVM-IRBuilder-Module.html#t:MonadModuleBuilder\" title=\"LLVM.IRBuilder.Module\">MonadModuleBuilder</a> m =&gt; <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; [<a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>] -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"externVarArgs","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:externVarArgs"},{"display_html":"<a href=\"#v:global\">global</a> :: <a href=\"LLVM-IRBuilder-Module.html#t:MonadModuleBuilder\" title=\"LLVM.IRBuilder.Module\">MonadModuleBuilder</a> m =&gt; <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"global","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:global"},{"display_html":"<a href=\"#v:typedef\">typedef</a> :: <a href=\"LLVM-IRBuilder-Module.html#t:MonadModuleBuilder\" title=\"LLVM.IRBuilder.Module\">MonadModuleBuilder</a> m =&gt; <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"typedef","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:typedef"},{"display_html":"<a href=\"#v:buildModule\">buildModule</a> :: <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a> -&gt; <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilder\" title=\"LLVM.IRBuilder.Module\">ModuleBuilder</a> a -&gt; <a href=\"LLVM-AST.html#t:Module\" title=\"LLVM.AST\">Module</a>","name":"buildModule","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:buildModule"},{"display_html":"<a href=\"#v:buildModuleT\">buildModuleT</a> :: <a href=\"LLVM-Prelude.html#t:Monad\" title=\"LLVM.Prelude\">Monad</a> m =&gt; <a href=\"LLVM-Prelude.html#t:ShortByteString\" title=\"LLVM.Prelude\">ShortByteString</a> -&gt; <a href=\"LLVM-IRBuilder-Module.html#t:ModuleBuilderT\" title=\"LLVM.IRBuilder.Module\">ModuleBuilderT</a> m a -&gt; m <a href=\"LLVM-AST.html#t:Module\" title=\"LLVM.AST\">Module</a>","name":"buildModuleT","module":"LLVM.IRBuilder.Module","link":"LLVM-IRBuilder-Module.html#v:buildModuleT"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Typed\">Typed</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:typeOf\">typeOf</a> :: a -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a></li></ul>","name":"Typed typeOf","module":"LLVM.AST.Typed","link":"LLVM-AST-Typed.html#t:Typed"},{"display_html":"<a href=\"#v:getElementType\">getElementType</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"getElementType","module":"LLVM.AST.Typed","link":"LLVM-AST-Typed.html#v:getElementType"},{"display_html":"<a href=\"#v:getElementPtrType\">getElementPtrType</a> :: <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; [<a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a>] -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"getElementPtrType","module":"LLVM.AST.Typed","link":"LLVM-AST-Typed.html#v:getElementPtrType"},{"display_html":"<a href=\"#v:extractValueType\">extractValueType</a> :: [<a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>] -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a>","name":"extractValueType","module":"LLVM.AST.Typed","link":"LLVM-AST-Typed.html#v:extractValueType"},{"display_html":"<a href=\"#v:fadd\">fadd</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"fadd","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:fadd"},{"display_html":"<a href=\"#v:fmul\">fmul</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"fmul","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:fmul"},{"display_html":"<a href=\"#v:fsub\">fsub</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"fsub","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:fsub"},{"display_html":"<a href=\"#v:fdiv\">fdiv</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"fdiv","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:fdiv"},{"display_html":"<a href=\"#v:frem\">frem</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"frem","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:frem"},{"display_html":"<a href=\"#v:add\">add</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"add","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:add"},{"display_html":"<a href=\"#v:mul\">mul</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"mul","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:mul"},{"display_html":"<a href=\"#v:sub\">sub</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"sub","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:sub"},{"display_html":"<a href=\"#v:udiv\">udiv</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"udiv","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:udiv"},{"display_html":"<a href=\"#v:sdiv\">sdiv</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"sdiv","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:sdiv"},{"display_html":"<a href=\"#v:urem\">urem</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"urem","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:urem"},{"display_html":"<a href=\"#v:srem\">srem</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"srem","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:srem"},{"display_html":"<a href=\"#v:shl\">shl</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"shl","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:shl"},{"display_html":"<a href=\"#v:lshr\">lshr</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"lshr","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:lshr"},{"display_html":"<a href=\"#v:ashr\">ashr</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"ashr","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:ashr"},{"display_html":"<a href=\"#v:and\">and</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"and","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:and"},{"display_html":"<a href=\"#v:or\">or</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"or","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:or"},{"display_html":"<a href=\"#v:xor\">xor</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"xor","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:xor"},{"display_html":"<a href=\"#v:alloca\">alloca</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"alloca","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:alloca"},{"display_html":"<a href=\"#v:load\">load</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"load","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:load"},{"display_html":"<a href=\"#v:store\">store</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m ()","name":"store","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:store"},{"display_html":"<a href=\"#v:gep\">gep</a> :: (<a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m, <a href=\"LLVM-IRBuilder-Module.html#t:MonadModuleBuilder\" title=\"LLVM.IRBuilder.Module\">MonadModuleBuilder</a> m) =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; [<a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>] -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"gep","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:gep"},{"display_html":"<a href=\"#v:trunc\">trunc</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"trunc","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:trunc"},{"display_html":"<a href=\"#v:fptrunc\">fptrunc</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"fptrunc","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:fptrunc"},{"display_html":"<a href=\"#v:zext\">zext</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"zext","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:zext"},{"display_html":"<a href=\"#v:sext\">sext</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"sext","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:sext"},{"display_html":"<a href=\"#v:fptoui\">fptoui</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"fptoui","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:fptoui"},{"display_html":"<a href=\"#v:fptosi\">fptosi</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"fptosi","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:fptosi"},{"display_html":"<a href=\"#v:fpext\">fpext</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"fpext","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:fpext"},{"display_html":"<a href=\"#v:uitofp\">uitofp</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"uitofp","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:uitofp"},{"display_html":"<a href=\"#v:sitofp\">sitofp</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"sitofp","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:sitofp"},{"display_html":"<a href=\"#v:ptrtoint\">ptrtoint</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"ptrtoint","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:ptrtoint"},{"display_html":"<a href=\"#v:inttoptr\">inttoptr</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"inttoptr","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:inttoptr"},{"display_html":"<a href=\"#v:bitcast\">bitcast</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Type.html#t:Type\" title=\"LLVM.AST.Type\">Type</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"bitcast","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:bitcast"},{"display_html":"<a href=\"#v:extractElement\">extractElement</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"extractElement","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:extractElement"},{"display_html":"<a href=\"#v:insertElement\">insertElement</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"insertElement","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:insertElement"},{"display_html":"<a href=\"#v:shuffleVector\">shuffleVector</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"shuffleVector","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:shuffleVector"},{"display_html":"<a href=\"#v:extractValue\">extractValue</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; [<a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>] -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"extractValue","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:extractValue"},{"display_html":"<a href=\"#v:insertValue\">insertValue</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; [<a href=\"../base-4.12.0.0/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a>] -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"insertValue","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:insertValue"},{"display_html":"<a href=\"#v:icmp\">icmp</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-IntegerPredicate.html#t:IntegerPredicate\" title=\"LLVM.AST.IntegerPredicate\">IntegerPredicate</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"icmp","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:icmp"},{"display_html":"<a href=\"#v:fcmp\">fcmp</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-FloatingPointPredicate.html#t:FloatingPointPredicate\" title=\"LLVM.AST.FloatingPointPredicate\">FloatingPointPredicate</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"fcmp","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:fcmp"},{"display_html":"<a href=\"#v:br\">br</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; m ()","name":"br","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:br"},{"display_html":"<a href=\"#v:phi\">phi</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; [(<a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>, <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a>)] -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"phi","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:phi"},{"display_html":"<a href=\"#v:retVoid\">retVoid</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; m ()","name":"retVoid","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:retVoid"},{"display_html":"<a href=\"#v:call\">call</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; [(<a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>, [<a href=\"LLVM-AST-ParameterAttribute.html#t:ParameterAttribute\" title=\"LLVM.AST.ParameterAttribute\">ParameterAttribute</a>])] -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"call","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:call"},{"display_html":"<a href=\"#v:ret\">ret</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m ()","name":"ret","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:ret"},{"display_html":"<a href=\"#v:switch\">switch</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; [(<a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a>, <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a>)] -&gt; m ()","name":"switch","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:switch"},{"display_html":"<a href=\"#v:select\">select</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"select","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:select"},{"display_html":"<a href=\"#v:condBr\">condBr</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a> -&gt; <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; m ()","name":"condBr","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:condBr"},{"display_html":"<a href=\"#v:unreachable\">unreachable</a> :: <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m =&gt; m ()","name":"unreachable","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:unreachable"},{"display_html":"<a href=\"#v:globalStringPtr\">globalStringPtr</a> :: (<a href=\"LLVM-IRBuilder-Module.html#t:MonadModuleBuilder\" title=\"LLVM.IRBuilder.Module\">MonadModuleBuilder</a> m, <a href=\"LLVM-IRBuilder-Monad.html#t:MonadIRBuilder\" title=\"LLVM.IRBuilder.Monad\">MonadIRBuilder</a> m) =&gt; <a href=\"LLVM-Prelude.html#t:String\" title=\"LLVM.Prelude\">String</a> -&gt; <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; m <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"globalStringPtr","module":"LLVM.IRBuilder.Instruction","link":"LLVM-IRBuilder-Instruction.html#v:globalStringPtr"},{"display_html":"<a href=\"#v:int64\">int64</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; <a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a> -&gt; f <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"int64","module":"LLVM.IRBuilder.Constant","link":"LLVM-IRBuilder-Constant.html#v:int64"},{"display_html":"<a href=\"#v:int32\">int32</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; <a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a> -&gt; f <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"int32","module":"LLVM.IRBuilder.Constant","link":"LLVM-IRBuilder-Constant.html#v:int32"},{"display_html":"<a href=\"#v:int8\">int8</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; <a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a> -&gt; f <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"int8","module":"LLVM.IRBuilder.Constant","link":"LLVM-IRBuilder-Constant.html#v:int8"},{"display_html":"<a href=\"#v:bit\">bit</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; <a href=\"LLVM-Prelude.html#t:Integer\" title=\"LLVM.Prelude\">Integer</a> -&gt; f <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"bit","module":"LLVM.IRBuilder.Constant","link":"LLVM-IRBuilder-Constant.html#v:bit"},{"display_html":"<a href=\"#v:double\">double</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; <a href=\"LLVM-Prelude.html#t:Double\" title=\"LLVM.Prelude\">Double</a> -&gt; f <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"double","module":"LLVM.IRBuilder.Constant","link":"LLVM-IRBuilder-Constant.html#v:double"},{"display_html":"<a href=\"#v:single\">single</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; <a href=\"LLVM-Prelude.html#t:Float\" title=\"LLVM.Prelude\">Float</a> -&gt; f <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"single","module":"LLVM.IRBuilder.Constant","link":"LLVM-IRBuilder-Constant.html#v:single"},{"display_html":"<a href=\"#v:half\">half</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; <a href=\"../base-4.12.0.0/Data-Word.html#t:Word16\" title=\"Data.Word\">Word16</a> -&gt; f <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"half","module":"LLVM.IRBuilder.Constant","link":"LLVM-IRBuilder-Constant.html#v:half"},{"display_html":"<a href=\"#v:struct\">struct</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; <a href=\"LLVM-Prelude.html#t:Maybe\" title=\"LLVM.Prelude\">Maybe</a> <a href=\"LLVM-AST-Name.html#t:Name\" title=\"LLVM.AST.Name\">Name</a> -&gt; <a href=\"LLVM-Prelude.html#t:Bool\" title=\"LLVM.Prelude\">Bool</a> -&gt; [<a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a>] -&gt; f <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"struct","module":"LLVM.IRBuilder.Constant","link":"LLVM-IRBuilder-Constant.html#v:struct"},{"display_html":"<a href=\"#v:array\">array</a> :: <a href=\"LLVM-Prelude.html#t:Applicative\" title=\"LLVM.Prelude\">Applicative</a> f =&gt; [<a href=\"LLVM-AST-Constant.html#t:Constant\" title=\"LLVM.AST.Constant\">Constant</a>] -&gt; f <a href=\"LLVM-AST-Operand.html#t:Operand\" title=\"LLVM.AST.Operand\">Operand</a>","name":"array","module":"LLVM.IRBuilder.Constant","link":"LLVM-IRBuilder-Constant.html#v:array"},{"display_html":"module <a href=\"LLVM-IRBuilder-Constant.html\">LLVM.IRBuilder.Constant</a>","name":"","module":"LLVM.IRBuilder","link":""},{"display_html":"module <a href=\"LLVM-IRBuilder-Module.html\">LLVM.IRBuilder.Module</a>","name":"","module":"LLVM.IRBuilder","link":""},{"display_html":"module <a href=\"LLVM-IRBuilder-Instruction.html\">LLVM.IRBuilder.Instruction</a>","name":"","module":"LLVM.IRBuilder","link":""},{"display_html":"module <a href=\"LLVM-IRBuilder-Monad.html\">LLVM.IRBuilder.Monad</a>","name":"","module":"LLVM.IRBuilder","link":""}]