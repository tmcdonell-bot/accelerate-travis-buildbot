-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Read and write Accelerate arrays in various formats
--   
--   This package provides efficient conversion routines between a range of
--   array types and Accelerate arrays.
--   
--   Refer to the main <i>Accelerate</i> package for more information:
--   <a>http://hackage.haskell.org/package/accelerate</a>
@package accelerate-io-bytestring
@version 0.1.0.0


-- | Conversion between strict <a>ByteString</a>s and Accelerate
--   <a>Array</a>s.
module Data.Array.Accelerate.IO.Data.ByteString

-- | A family of types that represents a collection of <a>ByteString</a>s.
--   The structure of the collection depends on the element type
--   <tt>e</tt>.
type family ByteStrings e

-- | <i>O(1)</i>. Treat a set of strict <a>ByteStrings</a> as an Accelerate
--   array. The type of the elements <tt>e</tt> in the output Accelerate
--   array determines the structure of the collection.
--   
--   Data is considered to be in row-major order. You must ensure that each
--   input contains the right number of bytes (this is not checked).
--   
--   The input data may not be modified through the <a>ByteString</a>s
--   afterwards.
--   
--   <pre>
--   since 1.1.0.0
--   </pre>
fromByteStrings :: (Shape sh, Elt e) => sh -> ByteStrings (EltRepr e) -> Array sh e

-- | <i>O(1)</i>. Convert an Accelerate <a>Array</a> into a collection of
--   strict <a>ByteStrings</a>. The element type <tt>e</tt> will determine
--   the structure of the output collection.
--   
--   Data is considered to be in row-major order.
--   
--   <pre>
--   since 1.1.0.0
--   </pre>
toByteStrings :: (Shape sh, Elt e) => Array sh e -> ByteStrings (EltRepr e)
