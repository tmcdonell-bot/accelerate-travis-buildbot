# vim: nospell
#
# In this setup we attempt to build all the accelerate-related packages
# together. Also build them individually, to make it easier to diagnose which
# package(s) are broken when one of the dependencies is updated.
#
# Set the language type to 'c' so that the 'compiler' key becomes active and our
# build matrix is constructed as the product of compiler x target.
#
language: c
dist: trusty
sudo: required

cache:
  timeout: 600
  directories:
    - $HOME/.stack/snapshots
    - .stack-work/install

before_cache:
  - rm -rf $(stack path --local-install-root)/doc

addons:
  apt:
    sources:
      - hvr-ghc
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty
      - llvm-toolchain-trusty-4.0
      - llvm-toolchain-trusty-5.0
      - llvm-toolchain-trusty-6.0

    packages:
      - cabal-install-2.0
      - freeglut3-dev
      - g++-4.8
      - happy-1.19.5
      - alex-3.1.7
      - libfftw3-dev
      - libgmp-dev
      - libblas-dev
      - liblapack-dev

compiler:
  - GHC-8.4.1
  - GHC-8.2.2
  - GHC-8.0.2
  # - GHC-7.10.3
  # - GHC-7.8.4

env:
  global:
    - CUDA=8.0.61-1
  matrix:
    - TARGET="" # all packages
    - TARGET=accelerate
    - TARGET=accelerate-llvm
    - TARGET=accelerate-llvm-native
    - TARGET=accelerate-llvm-ptx
    - TARGET=accelerate-fft
    - TARGET=accelerate-blas
    # - TARGET=accelerate-io
    - TARGET=accelerate-bignum
    - TARGET=accelerate-examples
    # - TARGET=colour-accelerate
    # - TARGET=gloss-accelerate
    # - TARGET=gloss-raster-accelerate
    # - TARGET=lens-accelerate
    # - TARGET=linear-accelerate
    # - TARGET=mwc-random-accelerate
    - TARGET=lulesh-accelerate
    # - TARGET=numeric-prelude-accelerate

matrix:
  fast_finish: true
  # exclude:
  #   - compiler: GHC-7.10.3  # too slow |:
  #     env: TARGET=""


before_install:
  - export PATH=/opt/cabal/2.0/bin:/opt/alex/3.1.7/bin:/opt/happy/1.19.5/bin:$HOME/.cabal/bin:$PATH
  - export GHC=${CC:4}
  - unset CC
  - |
      case ${GHC%.*} in
        7.8)  export LLVM="3.5.2" ;;
        7.10) export LLVM="3.5.2" ;;
        8.0)  export LLVM="4.0.1" ;;
        8.2)  export LLVM="5.0.1" ;;
        8.4)  export LLVM="6.0.0" ;;
      esac

  # - source .travis/install-llvm-trusty.sh
  - sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install llvm-${LLVM:0:3}-dev
  - source .travis/install-stack.sh
  - source .travis/update-ghc-settings.sh
  - source .travis/install-cuda-trusty.sh

  # try to only install cuda if it will be required
  # - DEPENDENCIES=$( stack list-dependencies ${TARGET} ); DEPENDENCIES_STATUS=$? # travis-ci#3771
  # - |
  #     if [ ${DEPENDENCIES_STATUS} -ne 0 ] || [ $( echo ${DEPENDENCIES} | grep cuda | wc -l ) -gt 0 ]; then
  #       source .travis/install-cuda-trusty.sh
  #     fi

  - |
      if [ ${GHC%.*} == 8.4 ]; then
        HADDOCK="--haddock"
      fi
  - travis_retry stack install hscolour --fast --no-terminal
  - travis_retry stack install c2hs --fast --no-terminal

install:
  - echo "$(stack exec ghc -- --version) [$(stack exec ghc -- --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - cabal --version
  - stack --version
  - llc-${LLVM:0:3} --version; true
  - opt-${LLVM:0:3} --version; true

  # bootstrap
  # - travis_retry travis_wait 60 stack build --fast --only-dependencies --no-terminal --no-copy-bins ${HADDOCK} accelerate
  - travis_retry travis_wait 60 stack build --fast --only-dependencies --no-terminal ${HADDOCK} accelerate-llvm-native accelerate-llvm-ptx

  # standard build
  # - stack build --dry-run ${TARGET}
  # - travis_retry travis_wait 60 stack build --fast --only-dependencies --no-terminal --no-copy-bins ${HADDOCK} ${TARGET}

script:
  - true
  # - travis_retry travis_wait 60 stack build --fast --no-terminal --no-copy-bins ${HADDOCK} ${TARGET}
  # - |
  #     if [ ${GHC%.*} == 8.4 ] && [ -z ${TARGET} ]; then
  #       source .travis/update-docs.sh
  #     fi

