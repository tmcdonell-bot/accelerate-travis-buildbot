# vim: nospell
#
# Basic template to test with GHC=[7.8, 7.10, 8.0], but also installs the
# relevant version of LLVM as (a very old version of) the CUDA toolkit (4.0).
# Caches the 'stack' build directory to speed subsequent compilations.
#
language: generic
dist: trusty
sudo: false

cache:
  directories:
    - $HOME/.stack

matrix:
  include:
    - env: GHC=7.8.4 CABAL=1.18 LLVM=3.4.2
      compiler: "GHC 7.8"
      addons: { apt: { sources: [ hvr-ghc, ubuntu-toolchain-r-test ], packages: [ nvidia-cuda-toolkit, libstdc++6, libgmp-dev, cabal-install-1.18, happy-1.19.5, alex-3.1.7 ] }}

    - env: GHC=7.10.3 CABAL=1.22 LLVM=3.5.2
      compiler: "GHC 7.10"
      addons: { apt: { sources: [ hvr-ghc, ubuntu-toolchain-r-test ], packages: [ nvidia-cuda-toolkit, libstdc++6, libgmp-dev, cabal-install-1.22, happy-1.19.5, alex-3.1.7 ] }}

    - env: GHC=8.0.1 CABAL=1.24 LLVM=3.6.2
      compiler: "GHC 8.0"
      addons: { apt: { sources: [ hvr-ghc, ubuntu-toolchain-r-test ], packages: [ nvidia-cuda-toolkit, libstdc++6, libgmp-dev, cabal-install-1.24, happy-1.19.5, alex-3.1.7 ] }}

  fast_finish: true

before_install:
  - export PATH=/opt/cabal/$CABAL/bin:/opt/alex/3.1.7/bin:/opt/happy/1.19.5/bin:$HOME/.cabal/bin:$PATH
  - export UPGRADE_CABAL=1
  - source .travis/install-stack.sh
  - source .travis/install-llvm-trusty.sh

install:
  - echo "$(stack exec ghc -- --version) [$(stack exec ghc -- --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - cabal --version
  - stack --version
  - llc --version; true
  - opt --version; true
  - travis_retry stack build --only-dependencies --no-terminal --no-haddock-deps

script:
  - stack build --no-terminal --haddock --no-haddock-deps

