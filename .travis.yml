# vim: nospell
#
# In this setup we attempt to build all the accelerate-related packages
# together. Also build them individually, to make it easier to diagnose which
# package(s) are broken when one of the dependencies is updated.
#
# Set the language type to 'c' so that the 'compiler' key becomes active and our
# build matrix is constructed as the product of compiler x target.
#
language: minimal
dist: trusty
sudo: required

cache:
  timeout: 600
  directories:
    - $HOME/.stack/snapshots
    - .stack-work/install

before_cache:
  - rm -rf $(stack path --local-install-root)/doc

addons:
  apt:
    sources: &apt_sources
      - hvr-ghc
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty
    packages: &apt_packages
      - alex-3.1.7
      - dpkg
      - g++-8
      - gcc-8
      - happy-1.19.5
      - libgmp-dev

matrix:
  fast_finish: true
  include:
    # Build everything
    # Most recent version of GHC uploads the documentation as well
    - env: GHC=8.6.4 LLVM=7.0.1 CUDA=10.1.105-1 HADDOCK="--haddock --haddock-hyperlink-source"
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:
            - *apt_sources
            - llvm-toolchain-trusty-7
          packages:
            - *apt_packages
            - freeglut3-dev
            - libblas-dev
            - libfftw3-dev
            - liblapack-dev
            - llvm-7-dev

    - env: GHC=8.4.3 LLVM=6.0.1 CUDA=10.0.130-1
      compiler: "GHC 8.4"
      addons:
        apt:
          sources:
            - *apt_sources
            - llvm-toolchain-trusty-6.0
          packages:
            - *apt_packages
            - freeglut3-dev
            - libblas-dev
            - libfftw3-dev
            - liblapack-dev
            - llvm-6.0-dev

    - env: GHC=8.2.2 LLVM=5.0.2 CUDA=8.0.61-1
      compiler: "GHC 8.2"
      addons:
        apt:
          sources:
            - *apt_sources
            - llvm-toolchain-trusty-5.0
          packages:
            - *apt_packages
            - freeglut3-dev
            - libblas-dev
            - libfftw3-dev
            - liblapack-dev
            - llvm-5.0-dev

    # Individual package sets
    - env: GHC=8.6.4 TARGET="accelerate"
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:  *apt_sources
          packages: *apt_packages

    - env: GHC=8.6.4 TARGET="accelerate-llvm accelerate-llvm-native" LLVM=7.0.1 CUDA=10.1.105-1
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:
            - *apt_sources
            - llvm-toolchain-trusty-7
          packages:
            - *apt_packages
            - llvm-7-dev

    - env: GHC=8.6.4 TARGET="accelerate-llvm accelerate-llvm-ptx" LLVM=7.0.1 CUDA=10.1.105-1
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:
            - *apt_sources
            - llvm-toolchain-trusty-7
          packages:
            - *apt_packages
            - llvm-7-dev

    - env: GHC=8.6.4 TARGET="accelerate-fft" LLVM=7.0.1 CUDA=10.1.105-1
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:
            - *apt_sources
            - llvm-toolchain-trusty-7
          packages:
            - *apt_packages
            - llvm-7-dev
            - libfftw3-dev

    - env: GHC=8.6.4 TARGET="accelerate-blas" LLVM=7.0.1 CUDA=10.1.105-1
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:
            - *apt_sources
            - llvm-toolchain-trusty-7
          packages:
            - *apt_packages
            - llvm-7-dev
            - libblas-dev
            - liblapack-dev

    - env: GHC=8.6.4 TARGET="accelerate-bignum" LLVM=7.0.1 CUDA=10.1.105-1
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:
            - *apt_sources
            - llvm-toolchain-trusty-7
          packages:
            - *apt_packages
            - llvm-7-dev

    - env: GHC=8.6.4 TARGET="accelerate-io accelerate-io-array accelerate-io-bytestring accelerate-io-bmp accelerate-io-vector accelerate-io-repa accelerate-io-JuicyPixels"
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:  *apt_sources
          packages: *apt_packages

    - env: GHC=8.6.4 TARGET="accelerate-examples"
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:  *apt_sources
          packages:
            - *apt_packages
            - freeglut3-dev
            - libfftw3-dev

    - env: GHC=8.6.4 TARGET="lens-accelerate"
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:  *apt_sources
          packages: *apt_packages

    - env: GHC=8.6.4 TARGET="linear-accelerate"
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:  *apt_sources
          packages: *apt_packages

    - env: GHC=8.6.4 TARGET="colour-accelerate"
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:  *apt_sources
          packages: *apt_packages

    - env: GHC=8.6.4 TARGET="mwc-random-accelerate"
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:  *apt_sources
          packages: *apt_packages

    - env: GHC=8.6.4 TARGET="gloss-accelerate gloss-raster-accelerate"
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:  *apt_sources
          packages:
            - *apt_packages
            - freeglut3-dev

    - env: GHC=8.6.4 TARGET="lulesh-accelerate" LLVM=7.0.1
      compiler: "GHC 8.6"
      addons:
        apt:
          sources:
            - *apt_sources
            - llvm-toolchain-trusty-7
          packages:
            - *apt_packages
            - libhdf5-openmpi-dev
            - libsilo-dev
            - libsiloh5-0
            - llvm-7-dev

    # disabled
    # TARGET=numeric-prelude-accelerate


before_install:
  - export PATH=/opt/alex/3.1.7/bin:/opt/happy/1.19.5/bin:$PATH
  - source .travis/install-stack.sh
  - |
      if [ -n "${CUDA}" ]; then
        source .travis/install-cuda-trusty.sh
      fi
  - |
      if [ -n "${HADDOCK}" ]; then
        stack install hscolour --fast --no-terminal
      fi

  # llvm-hs requires new g++
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-8

  # ghc-8.4+ require libffi7
  - echo "deb http://deb.debian.org/debian experimental main" | sudo tee -a /etc/apt/sources.list
  - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key 0x7638D0442B90D010 0x8B48AD6246925553 0x04EE7237B7D453EC
  - sudo apt-get install debian-archive-keyring
  - sudo apt-get update
  - sudo apt-get install libffi7

  # build environment
  - echo "$(stack exec ghc -- --version) [$(stack exec ghc -- --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - stack --version
  - llc-${LLVM:0:3} --version; true
  - opt-${LLVM:0:3} --version; true

install:
  - export FLAGS="--fast --jobs=2 --no-terminal --no-copy-bins"
  - stack build --dry-run ${TARGET}

  # bootstrap
  # - travis_retry travis_wait 60 stack build --only-dependencies ${FLAGS} ${HADDOCK} accelerate
  # - travis_retry travis_wait 60 stack build --only-dependencies ${FLAGS} ${HADDOCK} accelerate-llvm-native accelerate-llvm-ptx

  # build dependencies
  - stack build --only-dependencies ${FLAGS} ${HADDOCK} ${TARGET}

script:
  - stack build ${FLAGS} ${HADDOCK} ${TARGET}
  - |
      if [ -n "${HADDOCK}" ]; then
        source .travis/update-docs.sh
      fi

